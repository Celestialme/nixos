{"environment.checkConfigurationOptions":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>_module.check</option>.","loc":["environment","checkConfigurationOptions"],"readOnly":false,"type":"boolean"},"environment.cinnamon.excludePackages":{"declarations":["nixos/modules/services/x11/desktop-managers/cinnamon.nix"],"default":[],"description":"Which packages cinnamon should exclude from the default environment","example":{"_type":"literalExpression","text":"[ pkgs.cinnamon.blueberry ]"},"loc":["environment","cinnamon","excludePackages"],"readOnly":false,"type":"list of packages"},"environment.etc":{"declarations":["nixos/modules/system/etc/etc.nix"],"default":{},"description":"Set of files that have to be linked in <filename>/etc</filename>.\n","example":{"_type":"literalExpression","text":"{ example-configuration-file =\n    { source = \"/nix/store/.../etc/dir/file.conf.example\";\n      mode = \"0440\";\n    };\n  \"default/useradd\".text = \"GROUP=100 ...\";\n}\n"},"loc":["environment","etc"],"readOnly":false,"type":"attribute set of submodules"},"environment.etc.<name>.enable":{"declarations":["nixos/modules/system/etc/etc.nix"],"default":true,"description":"Whether this /etc file should be generated.  This\noption allows specific /etc files to be disabled.\n","loc":["environment","etc","<name>","enable"],"readOnly":false,"type":"boolean"},"environment.etc.<name>.gid":{"declarations":["nixos/modules/system/etc/etc.nix"],"default":0,"description":"GID of created file. Only takes effect when the file is\ncopied (that is, the mode is not 'symlink').\n","loc":["environment","etc","<name>","gid"],"readOnly":false,"type":"signed integer"},"environment.etc.<name>.group":{"declarations":["nixos/modules/system/etc/etc.nix"],"default":"+0","description":"Group name of created file.\nOnly takes effect when the file is copied (that is, the mode is not 'symlink').\nChanging this option takes precedence over <literal>gid</literal>.\n","loc":["environment","etc","<name>","group"],"readOnly":false,"type":"string"},"environment.etc.<name>.mode":{"declarations":["nixos/modules/system/etc/etc.nix"],"default":"symlink","description":"If set to something else than <literal>symlink</literal>,\nthe file is copied instead of symlinked, with the given\nfile mode.\n","example":"0600","loc":["environment","etc","<name>","mode"],"readOnly":false,"type":"string"},"environment.etc.<name>.source":{"declarations":["nixos/modules/system/etc/etc.nix"],"description":"Path of the source file.","loc":["environment","etc","<name>","source"],"readOnly":false,"type":"path"},"environment.etc.<name>.target":{"declarations":["nixos/modules/system/etc/etc.nix"],"description":"Name of symlink (relative to\n<filename>/etc</filename>).  Defaults to the attribute\nname.\n","loc":["environment","etc","<name>","target"],"readOnly":false,"type":"string"},"environment.etc.<name>.text":{"declarations":["nixos/modules/system/etc/etc.nix"],"default":null,"description":"Text of the file.","loc":["environment","etc","<name>","text"],"readOnly":false,"type":"null or strings concatenated with \"\\n\""},"environment.etc.<name>.uid":{"declarations":["nixos/modules/system/etc/etc.nix"],"default":0,"description":"UID of created file. Only takes effect when the file is\ncopied (that is, the mode is not 'symlink').\n","loc":["environment","etc","<name>","uid"],"readOnly":false,"type":"signed integer"},"environment.etc.<name>.user":{"declarations":["nixos/modules/system/etc/etc.nix"],"default":"+0","description":"User name of created file.\nOnly takes effect when the file is copied (that is, the mode is not 'symlink').\nChanging this option takes precedence over <literal>uid</literal>.\n","loc":["environment","etc","<name>","user"],"readOnly":false,"type":"string"},"environment.gnome.excludePackages":{"declarations":["nixos/modules/services/x11/desktop-managers/gnome.nix"],"default":[],"description":"Which packages gnome should exclude from the default environment","example":{"_type":"literalExpression","text":"[ pkgs.gnome.totem ]"},"loc":["environment","gnome","excludePackages"],"readOnly":false,"type":"list of packages"},"environment.lxqt.excludePackages":{"declarations":["nixos/modules/services/x11/desktop-managers/lxqt.nix"],"default":[],"description":"Which LXQt packages to exclude from the default environment","example":{"_type":"literalExpression","text":"[ pkgs.lxqt.qterminal ]"},"loc":["environment","lxqt","excludePackages"],"readOnly":false,"type":"list of packages"},"environment.mate.excludePackages":{"declarations":["nixos/modules/services/x11/desktop-managers/mate.nix"],"default":[],"description":"Which MATE packages to exclude from the default environment","example":{"_type":"literalExpression","text":"[ pkgs.mate.mate-terminal pkgs.mate.pluma ]"},"loc":["environment","mate","excludePackages"],"readOnly":false,"type":"list of packages"},"environment.pantheon.excludePackages":{"declarations":["nixos/modules/services/x11/desktop-managers/pantheon.nix"],"default":[],"description":"Which packages pantheon should exclude from the default environment","example":{"_type":"literalExpression","text":"[ pkgs.pantheon.elementary-camera ]"},"loc":["environment","pantheon","excludePackages"],"readOnly":false,"type":"list of packages"},"i18n.inputMethod.fcitx.engines":{"declarations":["nixos/modules/i18n/input-method/fcitx.nix"],"default":[],"description":"Enabled Fcitx engines. Available engines are: <literal>anthy</literal>, <literal>chewing</literal>, <literal>cloudpinyin</literal>, <literal>hangul</literal>, <literal>libpinyin</literal>, <literal>m17n</literal>, <literal>mozc</literal>, <literal>rime</literal>, <literal>skk</literal>, <literal>table-extra</literal>, <literal>table-other</literal>, <literal>unikey</literal>.","example":{"_type":"literalExpression","text":"with pkgs.fcitx-engines; [ mozc hangul ]"},"loc":["i18n","inputMethod","fcitx","engines"],"readOnly":false,"type":"list of packages"},"i18n.inputMethod.ibus.engines":{"declarations":["nixos/modules/i18n/input-method/ibus.nix"],"default":[],"description":"Enabled IBus engines. Available engines are: <literal>anthy</literal>, <literal>bamboo</literal>, <literal>hangul</literal>, <literal>kkc</literal>, <literal>libpinyin</literal>, <literal>libthai</literal>, <literal>m17n</literal>, <literal>mozc</literal>, <literal>rime</literal>, <literal>table</literal>, <literal>table-chinese</literal>, <literal>table-others</literal>, <literal>typing-booster</literal>, <literal>typing-booster-unwrapped</literal>, <literal>uniemoji</literal>.","example":{"_type":"literalExpression","text":"with pkgs.ibus-engines; [ mozc hangul ]"},"loc":["i18n","inputMethod","ibus","engines"],"readOnly":false,"type":"list of packages"},"i18n.inputMethod.ibus.panel":{"declarations":["nixos/modules/i18n/input-method/ibus.nix"],"default":null,"description":"Replace the IBus panel with another panel.","example":{"_type":"literalExpression","text":"\"${pkgs.plasma5Packages.plasma-desktop}/lib/libexec/kimpanel-ibus-panel\""},"loc":["i18n","inputMethod","ibus","panel"],"readOnly":false,"type":"null or path"},"i18n.inputMethod.kime.config":{"declarations":["nixos/modules/i18n/input-method/kime.nix"],"default":{},"description":"kime configuration. Refer to <link xlink:href=\"https://github.com/Riey/kime/blob/v2.5.6/docs/CONFIGURATION.md\"/> for details on supported values.\n","example":{"_type":"literalExpression","text":"{\n  daemon = {\n    modules = [\"Xim\" \"Indicator\"];\n  };\n\n  indicator = {\n    icon_color = \"White\";\n  };\n\n  engine = {\n    hangul = {\n      layout = \"dubeolsik\";\n    };\n  };\n}\n"},"loc":["i18n","inputMethod","kime","config"],"readOnly":false,"type":"YAML value"},"nixpkgs.config":{"declarations":["nixos/modules/misc/nixpkgs.nix"],"default":{},"description":"The configuration of the Nix Packages collection.  (For\ndetails, see the Nixpkgs documentation.)  It allows you to set\npackage configuration options.\n\nIgnored when <code>nixpkgs.pkgs</code> is set.\n","example":{"_type":"literalExpression","text":"{ allowBroken = true; allowUnfree = true; }\n"},"loc":["nixpkgs","config"],"readOnly":false,"type":"nixpkgs config"},"nixpkgs.crossSystem":{"declarations":["nixos/modules/misc/nixpkgs.nix"],"default":null,"description":"Specifies the platform for which NixOS should be\nbuilt. Specify this only if it is different from\n<code>nixpkgs.localSystem</code>, the platform\n<emphasis>on</emphasis> which NixOS should be built. In other\nwords, specify this to cross-compile NixOS. Otherwise it\nshould be set as null, the default. See its description in the\nNixpkgs manual for more details.\n\nIgnored when <code>nixpkgs.pkgs</code> is set.\n","example":{"config":"aarch64-unknown-linux-gnu","system":"aarch64-linux"},"loc":["nixpkgs","crossSystem"],"readOnly":false,"type":"null or attribute set"},"nixpkgs.localSystem":{"declarations":["nixos/modules/misc/nixpkgs.nix"],"default":{"_type":"literalExpression","text":"(import \"${nixos}/../lib\").lib.systems.examples.aarch64-multiplatform"},"description":"Specifies the platform on which NixOS should be built. When\n<code>nixpkgs.crossSystem</code> is unset, it also specifies\nthe platform <emphasis>for</emphasis> which NixOS should be\nbuilt.  If this option is unset, it defaults to the platform\ntype of the machine where evaluation happens. Specifying this\noption is useful when doing distributed multi-platform\ndeployment, or when building virtual machines. See its\ndescription in the Nixpkgs manual for more details.\n\nIgnored when <code>nixpkgs.pkgs</code> is set.\n","example":{"config":"aarch64-unknown-linux-gnu","system":"aarch64-linux"},"loc":["nixpkgs","localSystem"],"readOnly":false,"type":"attribute set"},"nixpkgs.overlays":{"declarations":["nixos/modules/misc/nixpkgs.nix"],"default":[],"description":"List of overlays to use with the Nix Packages collection.\n(For details, see the Nixpkgs documentation.)  It allows\nyou to override packages globally. Each function in the list\ntakes as an argument the <emphasis>original</emphasis> Nixpkgs.\nThe first argument should be used for finding dependencies, and\nthe second should be used for overriding recipes.\n\nIf <code>nixpkgs.pkgs</code> is set, overlays specified here\nwill be applied after the overlays that were already present\nin <code>nixpkgs.pkgs</code>.\n","example":{"_type":"literalExpression","text":"[\n  (self: super: {\n    openssh = super.openssh.override {\n      hpnSupport = true;\n      kerberos = self.libkrb5;\n    };\n  })\n]\n"},"loc":["nixpkgs","overlays"],"readOnly":false,"type":"list of nixpkgs overlays"},"nixpkgs.pkgs":{"declarations":["nixos/modules/misc/nixpkgs.nix"],"default":{"_type":"literalExpression","text":"import \"${nixos}/..\" {\n  inherit (cfg) config overlays localSystem crossSystem;\n}\n"},"description":"If set, the pkgs argument to all NixOS modules is the value of\nthis option, extended with <code>nixpkgs.overlays</code>, if\nthat is also set. Either <code>nixpkgs.crossSystem</code> or\n<code>nixpkgs.localSystem</code> will be used in an assertion\nto check that the NixOS and Nixpkgs architectures match. Any\nother options in <code>nixpkgs.*</code>, notably <code>config</code>,\nwill be ignored.\n\nIf unset, the pkgs argument to all NixOS modules is determined\nas shown in the default value for this option.\n\nThe default value imports the Nixpkgs source files\nrelative to the location of this NixOS module, because\nNixOS and Nixpkgs are distributed together for consistency,\nso the <code>nixos</code> in the default value is in fact a\nrelative path. The <code>config</code>, <code>overlays</code>,\n<code>localSystem</code>, and <code>crossSystem</code> come\nfrom this option's siblings.\n\nThis option can be used by applications like NixOps to increase\nthe performance of evaluation, or to create packages that depend\non a container that should be built with the exact same evaluation\nof Nixpkgs, for example. Applications like this should set\ntheir default value using <code>lib.mkDefault</code>, so\nuser-provided configuration can override it without using\n<code>lib</code>.\n\nNote that using a distinct version of Nixpkgs with NixOS may\nbe an unexpected source of problems. Use this option with care.\n","example":{"_type":"literalExpression","text":"import <nixpkgs> {}"},"loc":["nixpkgs","pkgs"],"readOnly":false,"type":"An evaluation of Nixpkgs; the top level attribute set of packages"},"nixpkgs.system":{"declarations":["nixos/modules/misc/nixpkgs.nix"],"description":"Specifies the Nix platform type on which NixOS should be built.\nIt is better to specify <code>nixpkgs.localSystem</code> instead.\n<programlisting>\n{\n  nixpkgs.system = ..;\n}\n</programlisting>\nis the same as\n<programlisting>\n{\n  nixpkgs.localSystem.system = ..;\n}\n</programlisting>\nSee <code>nixpkgs.localSystem</code> for more information.\n\nIgnored when <code>nixpkgs.localSystem</code> is set.\nIgnored when <code>nixpkgs.pkgs</code> is set.\n","example":"i686-linux","loc":["nixpkgs","system"],"readOnly":false,"type":"string"},"programs.gnupg.agent.enable":{"declarations":["nixos/modules/programs/gnupg.nix"],"default":false,"description":"Enables GnuPG agent with socket-activation for every user session.\n","loc":["programs","gnupg","agent","enable"],"readOnly":false,"type":"boolean"},"programs.gnupg.agent.enableBrowserSocket":{"declarations":["nixos/modules/programs/gnupg.nix"],"default":false,"description":"Enable browser socket for GnuPG agent.\n","loc":["programs","gnupg","agent","enableBrowserSocket"],"readOnly":false,"type":"boolean"},"programs.gnupg.agent.enableExtraSocket":{"declarations":["nixos/modules/programs/gnupg.nix"],"default":false,"description":"Enable extra socket for GnuPG agent.\n","loc":["programs","gnupg","agent","enableExtraSocket"],"readOnly":false,"type":"boolean"},"programs.gnupg.agent.enableSSHSupport":{"declarations":["nixos/modules/programs/gnupg.nix"],"default":false,"description":"Enable SSH agent support in GnuPG agent. Also sets SSH_AUTH_SOCK\nenvironment variable correctly. This will disable socket-activation\nand thus always start a GnuPG agent per user session.\n","loc":["programs","gnupg","agent","enableSSHSupport"],"readOnly":false,"type":"boolean"},"programs.gnupg.agent.pinentryFlavor":{"declarations":["nixos/modules/programs/gnupg.nix"],"default":{"_type":"literalDocBook","text":"matching the configured desktop environment"},"description":"Which pinentry interface to use. If not null, the path to the\npinentry binary will be passed to gpg-agent via commandline and\nthus overrides the pinentry option in gpg-agent.conf in the user's\nhome directory.\nIf not set at all, it'll pick an appropriate flavor depending on the\nsystem configuration (qt flavor for lxqt and plasma5, gtk2 for xfce\n4.12, gnome3 on all other systems with X enabled, ncurses otherwise).\n","example":"gnome3","loc":["programs","gnupg","agent","pinentryFlavor"],"readOnly":false,"type":"null or one of \"curses\", \"tty\", \"gtk2\", \"emacs\", \"gnome3\", \"qt\""},"programs.gnupg.dirmngr.enable":{"declarations":["nixos/modules/programs/gnupg.nix"],"default":false,"description":"Enables GnuPG network certificate management daemon with socket-activation for every user session.\n","loc":["programs","gnupg","dirmngr","enable"],"readOnly":false,"type":"boolean"},"programs.gnupg.package":{"declarations":["nixos/modules/programs/gnupg.nix"],"default":{"_type":"literalExpression","text":"pkgs.gnupg"},"description":"The gpg package that should be used.\n","loc":["programs","gnupg","package"],"readOnly":false,"type":"package"},"services.archisteamfarm.bots":{"declarations":["nixos/modules/services/games/asf.nix"],"default":{},"description":"Bots name and configuration.\n","example":{"exampleBot":{"passwordFile":"/var/lib/asf/secrets/password","settings":{"SteamParentalCode":"1234"},"username":"alice"}},"loc":["services","archisteamfarm","bots"],"readOnly":false,"type":"attribute set of submodules"},"services.archisteamfarm.bots.<name>.enabled":{"declarations":["nixos/modules/services/games/asf.nix"],"default":true,"description":"Whether to enable the bot on startup.","loc":["services","archisteamfarm","bots","<name>","enabled"],"readOnly":false,"type":"boolean"},"services.archisteamfarm.bots.<name>.passwordFile":{"declarations":["nixos/modules/services/games/asf.nix"],"description":"Path to a file containig the password. The file must be readable by the <literal>asf</literal> user/group.","loc":["services","archisteamfarm","bots","<name>","passwordFile"],"readOnly":false,"type":"path"},"services.archisteamfarm.bots.<name>.settings":{"declarations":["nixos/modules/services/games/asf.nix"],"default":{},"description":"Additional settings that are documented <link xlink:href=\"https://github.com/JustArchiNET/ArchiSteamFarm/wiki/Configuration#bot-config\">here</link>.","loc":["services","archisteamfarm","bots","<name>","settings"],"readOnly":false,"type":"attribute set"},"services.archisteamfarm.bots.<name>.username":{"declarations":["nixos/modules/services/games/asf.nix"],"default":"","description":"Name of the user to log in. Default is attribute name.","loc":["services","archisteamfarm","bots","<name>","username"],"readOnly":false,"type":"string"},"services.archisteamfarm.dataDir":{"declarations":["nixos/modules/services/games/asf.nix"],"default":"/var/lib/asf","description":"The ASF home directory used to store all data.\nIf left as the default value this directory will automatically be created before the ASF server starts, otherwise the sysadmin is responsible for ensuring the directory exists with appropriate ownership and permissions.","loc":["services","archisteamfarm","dataDir"],"readOnly":false,"type":"path"},"services.archisteamfarm.enable":{"declarations":["nixos/modules/services/games/asf.nix"],"default":false,"description":"If enabled, starts the ArchisSteamFarm service.\nFor configuring the SteamGuard token you will need to use the web-ui, which is enabled by default over on 127.0.0.1:1242.\nYou cannot configure ASF in any way outside of nix, since all the config files get wiped on restart and replaced with the programatically set ones by nix.\n","loc":["services","archisteamfarm","enable"],"readOnly":false,"type":"boolean"},"services.archisteamfarm.ipcSettings":{"declarations":["nixos/modules/services/games/asf.nix"],"default":{},"description":"Settings to write to IPC.config.\nAll options can be found <link xlink:href=\"https://github.com/JustArchiNET/ArchiSteamFarm/wiki/IPC#custom-configuration\">here</link>.\n","example":{"Kestrel":{"Endpoints":{"HTTP":{"Url":"http://*:1242"}}}},"loc":["services","archisteamfarm","ipcSettings"],"readOnly":false,"type":"JSON value"},"services.archisteamfarm.package":{"declarations":["nixos/modules/services/games/asf.nix"],"default":{"_type":"derivation","name":"archisteamfarm-5.2.2.4"},"description":"Package to use. Should always be the latest version, for security reasons, since this module uses very new features and to not get out of sync with the Steam API.","loc":["services","archisteamfarm","package"],"readOnly":false,"type":"package"},"services.archisteamfarm.settings":{"declarations":["nixos/modules/services/games/asf.nix"],"default":{},"description":"        The ASF.json file, all the options are documented <link xlink:href=\"https://github.com/JustArchiNET/ArchiSteamFarm/wiki/Configuration#global-config\">here</link>.\n        Do note that `AutoRestart`  and `UpdateChannel` is always to `false`\nrespectively `0` because NixOS takes care of updating everything.\n        `Headless` is also always set to `true` because there is no way to provide inputs via a systemd service.\n        You should try to keep ASF up to date since upstream does not provide support for anything but the latest version and you're exposing yourself to all kinds of issues - as is outlined <link xlink:href=\"https://github.com/JustArchiNET/ArchiSteamFarm/wiki/Configuration#updateperiod\">here</link>.\n","example":{"Statistics":false},"loc":["services","archisteamfarm","settings"],"readOnly":false,"type":"JSON value"},"services.archisteamfarm.web-ui":{"declarations":["nixos/modules/services/games/asf.nix"],"default":{"enable":true,"package":{"_type":"derivation","name":"asf-ui-5.2.2.4"}},"description":"The Web-UI hosted on 127.0.0.1:1242.","example":{"enable":false},"loc":["services","archisteamfarm","web-ui"],"readOnly":false,"type":"submodule"},"services.archisteamfarm.web-ui.enable":{"declarations":["nixos/modules/services/games/asf.nix"],"default":false,"description":"Whether to enable Wheter to start the web-ui. This is the preferred way of configuring things such as the steam guard token.","example":true,"loc":["services","archisteamfarm","web-ui","enable"],"readOnly":false,"type":"boolean"},"services.archisteamfarm.web-ui.package":{"declarations":["nixos/modules/services/games/asf.nix"],"default":{"_type":"derivation","name":"asf-ui-5.2.2.4"},"description":"Web-UI package to use. Contents must be in lib/dist.","loc":["services","archisteamfarm","web-ui","package"],"readOnly":false,"type":"package"},"services.cinnamon.apps.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/cinnamon.nix"],"default":false,"description":"Whether to enable Cinnamon default applications.","example":true,"loc":["services","cinnamon","apps","enable"],"readOnly":false,"type":"boolean"},"services.dex.enable":{"declarations":["nixos/modules/services/web-apps/dex.nix"],"default":false,"description":"Whether to enable the OpenID Connect and OAuth2 identity provider.","example":true,"loc":["services","dex","enable"],"readOnly":false,"type":"boolean"},"services.dex.settings":{"declarations":["nixos/modules/services/web-apps/dex.nix"],"default":{},"description":"The available options can be found in\n<link xlink:href=\"https://github.com/dexidp/dex/blob/v0.9.0/config.yaml.dist\">the example configuration</link>.\n","example":{"_type":"literalExpression","text":"{\n  # External url\n  issuer = \"http://127.0.0.1:5556/dex\";\n  storage = {\n    type = \"postgres\";\n    config.host = \"/var/run/postgres\";\n  };\n  web = {\n    http = \"127.0.0.1:5556\";\n  };\n  enablePasswordDB = true;\n  staticClients = [\n    {\n      id = \"oidcclient\";\n      name = \"Client\";\n      redirectURIs = [ \"https://example.com/callback\" ];\n      secretFile = \"/etc/dex/oidcclient\"; # The content of `secretFile` will be written into to the config as `secret`.\n    }\n  ];\n}\n"},"loc":["services","dex","settings"],"readOnly":false,"type":"YAML value"},"services.dnscrypt-proxy2.configFile":{"declarations":["nixos/modules/services/networking/dnscrypt-proxy2.nix"],"default":{"_type":"literalDocBook","text":"TOML file generated from <option>services.dnscrypt-proxy2.settings</option>"},"description":"Path to TOML config file. See: <link xlink:href=\"https://github.com/DNSCrypt/dnscrypt-proxy/blob/master/dnscrypt-proxy/example-dnscrypt-proxy.toml\"/>\nIf this option is set, it will override any configuration done in options.services.dnscrypt-proxy2.settings.\n","example":"/etc/dnscrypt-proxy/dnscrypt-proxy.toml","loc":["services","dnscrypt-proxy2","configFile"],"readOnly":false,"type":"path"},"services.dnscrypt-proxy2.enable":{"declarations":["nixos/modules/services/networking/dnscrypt-proxy2.nix"],"default":false,"description":"Whether to enable dnscrypt-proxy2.","example":true,"loc":["services","dnscrypt-proxy2","enable"],"readOnly":false,"type":"boolean"},"services.dnscrypt-proxy2.settings":{"declarations":["nixos/modules/services/networking/dnscrypt-proxy2.nix"],"default":{},"description":"Attrset that is converted and passed as TOML config file.\nFor available params, see: <link xlink:href=\"https://github.com/DNSCrypt/dnscrypt-proxy/blob/2.1.1/dnscrypt-proxy/example-dnscrypt-proxy.toml\"/>\n","example":{"_type":"literalExpression","text":"{\n  sources.public-resolvers = {\n    urls = [ \"https://download.dnscrypt.info/resolvers-list/v2/public-resolvers.md\" ];\n    cache_file = \"public-resolvers.md\";\n    minisign_key = \"RWQf6LRCGA9i53mlYecO4IzT51TGPpvWucNSCh1CBM0QTaLn73Y7GFO3\";\n    refresh_delay = 72;\n  };\n}\n"},"loc":["services","dnscrypt-proxy2","settings"],"readOnly":false,"type":"attribute set"},"services.dnscrypt-proxy2.upstreamDefaults":{"declarations":["nixos/modules/services/networking/dnscrypt-proxy2.nix"],"default":true,"description":"Whether to base the config declared in <option>services.dnscrypt-proxy2.settings</option> on the upstream example config (<link xlink:href=\"https://github.com/DNSCrypt/dnscrypt-proxy/blob/master/dnscrypt-proxy/example-dnscrypt-proxy.toml\"/>)\n\nDisable this if you want to declare your dnscrypt config from scratch.\n","loc":["services","dnscrypt-proxy2","upstreamDefaults"],"readOnly":false,"type":"boolean"},"services.frr.babel.config":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"","description":"babeld configuration statements.\n","example":"","loc":["services","frr","babel","config"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.frr.babel.configFile":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"Configuration file to use for FRR babeld.\nBy default the NixOS generated files are used.\n","example":"/etc/frr/babeld.conf","loc":["services","frr","babel","configFile"],"readOnly":false,"type":"null or path"},"services.frr.babel.enable":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":false,"description":"Whether to enable the FRR BABEL routing protocol.","example":true,"loc":["services","frr","babel","enable"],"readOnly":false,"type":"boolean"},"services.frr.babel.vtyListenAddress":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"localhost","description":"Address to bind to for the VTY interface.\n","loc":["services","frr","babel","vtyListenAddress"],"readOnly":false,"type":"string"},"services.frr.babel.vtyListenPort":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"TCP Port to bind to for the VTY interface.\n","loc":["services","frr","babel","vtyListenPort"],"readOnly":false,"type":"null or signed integer"},"services.frr.bfd.config":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"","description":"bfdd configuration statements.\n","example":"","loc":["services","frr","bfd","config"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.frr.bfd.configFile":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"Configuration file to use for FRR bfdd.\nBy default the NixOS generated files are used.\n","example":"/etc/frr/bfdd.conf","loc":["services","frr","bfd","configFile"],"readOnly":false,"type":"null or path"},"services.frr.bfd.enable":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":false,"description":"Whether to enable the FRR BFD routing protocol.","example":true,"loc":["services","frr","bfd","enable"],"readOnly":false,"type":"boolean"},"services.frr.bfd.vtyListenAddress":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"localhost","description":"Address to bind to for the VTY interface.\n","loc":["services","frr","bfd","vtyListenAddress"],"readOnly":false,"type":"string"},"services.frr.bfd.vtyListenPort":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"TCP Port to bind to for the VTY interface.\n","loc":["services","frr","bfd","vtyListenPort"],"readOnly":false,"type":"null or signed integer"},"services.frr.bgp.config":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"","description":"bgpd configuration statements.\n","example":"router bgp 65001\n  neighbor 10.0.0.1 remote-as 65001\n","loc":["services","frr","bgp","config"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.frr.bgp.configFile":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"Configuration file to use for FRR bgpd.\nBy default the NixOS generated files are used.\n","example":"/etc/frr/bgpd.conf","loc":["services","frr","bgp","configFile"],"readOnly":false,"type":"null or path"},"services.frr.bgp.enable":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":false,"description":"Whether to enable the FRR BGP routing protocol.","example":true,"loc":["services","frr","bgp","enable"],"readOnly":false,"type":"boolean"},"services.frr.bgp.vtyListenAddress":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"localhost","description":"Address to bind to for the VTY interface.\n","loc":["services","frr","bgp","vtyListenAddress"],"readOnly":false,"type":"string"},"services.frr.bgp.vtyListenPort":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"TCP Port to bind to for the VTY interface.\n","loc":["services","frr","bgp","vtyListenPort"],"readOnly":false,"type":"null or signed integer"},"services.frr.eigrp.config":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"","description":"eigrpd configuration statements.\n","example":"","loc":["services","frr","eigrp","config"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.frr.eigrp.configFile":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"Configuration file to use for FRR eigrpd.\nBy default the NixOS generated files are used.\n","example":"/etc/frr/eigrpd.conf","loc":["services","frr","eigrp","configFile"],"readOnly":false,"type":"null or path"},"services.frr.eigrp.enable":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":false,"description":"Whether to enable the FRR EIGRP routing protocol.","example":true,"loc":["services","frr","eigrp","enable"],"readOnly":false,"type":"boolean"},"services.frr.eigrp.vtyListenAddress":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"localhost","description":"Address to bind to for the VTY interface.\n","loc":["services","frr","eigrp","vtyListenAddress"],"readOnly":false,"type":"string"},"services.frr.eigrp.vtyListenPort":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"TCP Port to bind to for the VTY interface.\n","loc":["services","frr","eigrp","vtyListenPort"],"readOnly":false,"type":"null or signed integer"},"services.frr.fabric.config":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"","description":"fabricd configuration statements.\n","example":"","loc":["services","frr","fabric","config"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.frr.fabric.configFile":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"Configuration file to use for FRR fabricd.\nBy default the NixOS generated files are used.\n","example":"/etc/frr/fabricd.conf","loc":["services","frr","fabric","configFile"],"readOnly":false,"type":"null or path"},"services.frr.fabric.enable":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":false,"description":"Whether to enable the FRR FABRIC routing protocol.","example":true,"loc":["services","frr","fabric","enable"],"readOnly":false,"type":"boolean"},"services.frr.fabric.vtyListenAddress":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"localhost","description":"Address to bind to for the VTY interface.\n","loc":["services","frr","fabric","vtyListenAddress"],"readOnly":false,"type":"string"},"services.frr.fabric.vtyListenPort":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"TCP Port to bind to for the VTY interface.\n","loc":["services","frr","fabric","vtyListenPort"],"readOnly":false,"type":"null or signed integer"},"services.frr.isis.config":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"","description":"isisd configuration statements.\n","example":"","loc":["services","frr","isis","config"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.frr.isis.configFile":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"Configuration file to use for FRR isisd.\nBy default the NixOS generated files are used.\n","example":"/etc/frr/isisd.conf","loc":["services","frr","isis","configFile"],"readOnly":false,"type":"null or path"},"services.frr.isis.enable":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":false,"description":"Whether to enable the FRR ISIS routing protocol.","example":true,"loc":["services","frr","isis","enable"],"readOnly":false,"type":"boolean"},"services.frr.isis.vtyListenAddress":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"localhost","description":"Address to bind to for the VTY interface.\n","loc":["services","frr","isis","vtyListenAddress"],"readOnly":false,"type":"string"},"services.frr.isis.vtyListenPort":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"TCP Port to bind to for the VTY interface.\n","loc":["services","frr","isis","vtyListenPort"],"readOnly":false,"type":"null or signed integer"},"services.frr.ldp.config":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"","description":"ldpd configuration statements.\n","example":"","loc":["services","frr","ldp","config"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.frr.ldp.configFile":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"Configuration file to use for FRR ldpd.\nBy default the NixOS generated files are used.\n","example":"/etc/frr/ldpd.conf","loc":["services","frr","ldp","configFile"],"readOnly":false,"type":"null or path"},"services.frr.ldp.enable":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":false,"description":"Whether to enable the FRR LDP routing protocol.","example":true,"loc":["services","frr","ldp","enable"],"readOnly":false,"type":"boolean"},"services.frr.ldp.vtyListenAddress":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"localhost","description":"Address to bind to for the VTY interface.\n","loc":["services","frr","ldp","vtyListenAddress"],"readOnly":false,"type":"string"},"services.frr.ldp.vtyListenPort":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"TCP Port to bind to for the VTY interface.\n","loc":["services","frr","ldp","vtyListenPort"],"readOnly":false,"type":"null or signed integer"},"services.frr.nhrp.config":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"","description":"nhrpd configuration statements.\n","example":"","loc":["services","frr","nhrp","config"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.frr.nhrp.configFile":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"Configuration file to use for FRR nhrpd.\nBy default the NixOS generated files are used.\n","example":"/etc/frr/nhrpd.conf","loc":["services","frr","nhrp","configFile"],"readOnly":false,"type":"null or path"},"services.frr.nhrp.enable":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":false,"description":"Whether to enable the FRR NHRP routing protocol.","example":true,"loc":["services","frr","nhrp","enable"],"readOnly":false,"type":"boolean"},"services.frr.nhrp.vtyListenAddress":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"localhost","description":"Address to bind to for the VTY interface.\n","loc":["services","frr","nhrp","vtyListenAddress"],"readOnly":false,"type":"string"},"services.frr.nhrp.vtyListenPort":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"TCP Port to bind to for the VTY interface.\n","loc":["services","frr","nhrp","vtyListenPort"],"readOnly":false,"type":"null or signed integer"},"services.frr.ospf.config":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"","description":"ospfd configuration statements.\n","example":"router ospf\n  network 10.0.0.0/8 area 0\n","loc":["services","frr","ospf","config"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.frr.ospf.configFile":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"Configuration file to use for FRR ospfd.\nBy default the NixOS generated files are used.\n","example":"/etc/frr/ospfd.conf","loc":["services","frr","ospf","configFile"],"readOnly":false,"type":"null or path"},"services.frr.ospf.enable":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":false,"description":"Whether to enable the FRR OSPF routing protocol.","example":true,"loc":["services","frr","ospf","enable"],"readOnly":false,"type":"boolean"},"services.frr.ospf.vtyListenAddress":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"localhost","description":"Address to bind to for the VTY interface.\n","loc":["services","frr","ospf","vtyListenAddress"],"readOnly":false,"type":"string"},"services.frr.ospf.vtyListenPort":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"TCP Port to bind to for the VTY interface.\n","loc":["services","frr","ospf","vtyListenPort"],"readOnly":false,"type":"null or signed integer"},"services.frr.ospf6.config":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"","description":"ospf6d configuration statements.\n","example":"","loc":["services","frr","ospf6","config"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.frr.ospf6.configFile":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"Configuration file to use for FRR ospf6d.\nBy default the NixOS generated files are used.\n","example":"/etc/frr/ospf6d.conf","loc":["services","frr","ospf6","configFile"],"readOnly":false,"type":"null or path"},"services.frr.ospf6.enable":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":false,"description":"Whether to enable the FRR OSPF6 routing protocol.","example":true,"loc":["services","frr","ospf6","enable"],"readOnly":false,"type":"boolean"},"services.frr.ospf6.vtyListenAddress":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"localhost","description":"Address to bind to for the VTY interface.\n","loc":["services","frr","ospf6","vtyListenAddress"],"readOnly":false,"type":"string"},"services.frr.ospf6.vtyListenPort":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"TCP Port to bind to for the VTY interface.\n","loc":["services","frr","ospf6","vtyListenPort"],"readOnly":false,"type":"null or signed integer"},"services.frr.pbr.config":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"","description":"pbrd configuration statements.\n","example":"","loc":["services","frr","pbr","config"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.frr.pbr.configFile":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"Configuration file to use for FRR pbrd.\nBy default the NixOS generated files are used.\n","example":"/etc/frr/pbrd.conf","loc":["services","frr","pbr","configFile"],"readOnly":false,"type":"null or path"},"services.frr.pbr.enable":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":false,"description":"Whether to enable the FRR PBR routing protocol.","example":true,"loc":["services","frr","pbr","enable"],"readOnly":false,"type":"boolean"},"services.frr.pbr.vtyListenAddress":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"localhost","description":"Address to bind to for the VTY interface.\n","loc":["services","frr","pbr","vtyListenAddress"],"readOnly":false,"type":"string"},"services.frr.pbr.vtyListenPort":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"TCP Port to bind to for the VTY interface.\n","loc":["services","frr","pbr","vtyListenPort"],"readOnly":false,"type":"null or signed integer"},"services.frr.pim.config":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"","description":"pimd configuration statements.\n","example":"","loc":["services","frr","pim","config"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.frr.pim.configFile":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"Configuration file to use for FRR pimd.\nBy default the NixOS generated files are used.\n","example":"/etc/frr/pimd.conf","loc":["services","frr","pim","configFile"],"readOnly":false,"type":"null or path"},"services.frr.pim.enable":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":false,"description":"Whether to enable the FRR PIM routing protocol.","example":true,"loc":["services","frr","pim","enable"],"readOnly":false,"type":"boolean"},"services.frr.pim.vtyListenAddress":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"localhost","description":"Address to bind to for the VTY interface.\n","loc":["services","frr","pim","vtyListenAddress"],"readOnly":false,"type":"string"},"services.frr.pim.vtyListenPort":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"TCP Port to bind to for the VTY interface.\n","loc":["services","frr","pim","vtyListenPort"],"readOnly":false,"type":"null or signed integer"},"services.frr.rip.config":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"","description":"ripd configuration statements.\n","example":"router rip\n  network 10.0.0.0/8\n","loc":["services","frr","rip","config"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.frr.rip.configFile":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"Configuration file to use for FRR ripd.\nBy default the NixOS generated files are used.\n","example":"/etc/frr/ripd.conf","loc":["services","frr","rip","configFile"],"readOnly":false,"type":"null or path"},"services.frr.rip.enable":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":false,"description":"Whether to enable the FRR RIP routing protocol.","example":true,"loc":["services","frr","rip","enable"],"readOnly":false,"type":"boolean"},"services.frr.rip.vtyListenAddress":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"localhost","description":"Address to bind to for the VTY interface.\n","loc":["services","frr","rip","vtyListenAddress"],"readOnly":false,"type":"string"},"services.frr.rip.vtyListenPort":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"TCP Port to bind to for the VTY interface.\n","loc":["services","frr","rip","vtyListenPort"],"readOnly":false,"type":"null or signed integer"},"services.frr.ripng.config":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"","description":"ripngd configuration statements.\n","example":"","loc":["services","frr","ripng","config"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.frr.ripng.configFile":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"Configuration file to use for FRR ripngd.\nBy default the NixOS generated files are used.\n","example":"/etc/frr/ripngd.conf","loc":["services","frr","ripng","configFile"],"readOnly":false,"type":"null or path"},"services.frr.ripng.enable":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":false,"description":"Whether to enable the FRR RIPNG routing protocol.","example":true,"loc":["services","frr","ripng","enable"],"readOnly":false,"type":"boolean"},"services.frr.ripng.vtyListenAddress":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"localhost","description":"Address to bind to for the VTY interface.\n","loc":["services","frr","ripng","vtyListenAddress"],"readOnly":false,"type":"string"},"services.frr.ripng.vtyListenPort":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"TCP Port to bind to for the VTY interface.\n","loc":["services","frr","ripng","vtyListenPort"],"readOnly":false,"type":"null or signed integer"},"services.frr.sharp.config":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"","description":"sharpd configuration statements.\n","example":"","loc":["services","frr","sharp","config"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.frr.sharp.configFile":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"Configuration file to use for FRR sharpd.\nBy default the NixOS generated files are used.\n","example":"/etc/frr/sharpd.conf","loc":["services","frr","sharp","configFile"],"readOnly":false,"type":"null or path"},"services.frr.sharp.enable":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":false,"description":"Whether to enable the FRR SHARP routing protocol.","example":true,"loc":["services","frr","sharp","enable"],"readOnly":false,"type":"boolean"},"services.frr.sharp.vtyListenAddress":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"localhost","description":"Address to bind to for the VTY interface.\n","loc":["services","frr","sharp","vtyListenAddress"],"readOnly":false,"type":"string"},"services.frr.sharp.vtyListenPort":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"TCP Port to bind to for the VTY interface.\n","loc":["services","frr","sharp","vtyListenPort"],"readOnly":false,"type":"null or signed integer"},"services.frr.static.config":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"","description":"staticd configuration statements.\n","example":"","loc":["services","frr","static","config"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.frr.static.configFile":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"Configuration file to use for FRR staticd.\nBy default the NixOS generated files are used.\n","example":"/etc/frr/staticd.conf","loc":["services","frr","static","configFile"],"readOnly":false,"type":"null or path"},"services.frr.static.enable":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":false,"description":"Whether to enable the FRR STATIC routing protocol.","example":true,"loc":["services","frr","static","enable"],"readOnly":false,"type":"boolean"},"services.frr.static.vtyListenAddress":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"localhost","description":"Address to bind to for the VTY interface.\n","loc":["services","frr","static","vtyListenAddress"],"readOnly":false,"type":"string"},"services.frr.static.vtyListenPort":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"TCP Port to bind to for the VTY interface.\n","loc":["services","frr","static","vtyListenPort"],"readOnly":false,"type":"null or signed integer"},"services.frr.zebra.config":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"","description":"zebra configuration statements.\n","example":"","loc":["services","frr","zebra","config"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.frr.zebra.configFile":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"Configuration file to use for FRR zebra.\nBy default the NixOS generated files are used.\n","example":"/etc/frr/zebra.conf","loc":["services","frr","zebra","configFile"],"readOnly":false,"type":"null or path"},"services.frr.zebra.enable":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":false,"description":"Whether to enable the Zebra routing manager.\n\nThe Zebra routing manager is automatically enabled\nif any routing protocols are configured.\n","loc":["services","frr","zebra","enable"],"readOnly":false,"type":"boolean"},"services.frr.zebra.vtyListenAddress":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":"localhost","description":"Address to bind to for the VTY interface.\n","loc":["services","frr","zebra","vtyListenAddress"],"readOnly":false,"type":"string"},"services.frr.zebra.vtyListenPort":{"declarations":["nixos/modules/services/networking/frr.nix"],"default":null,"description":"TCP Port to bind to for the VTY interface.\n","loc":["services","frr","zebra","vtyListenPort"],"readOnly":false,"type":"null or signed integer"},"services.gerrit.builtinPlugins":{"declarations":["nixos/modules/services/web-apps/gerrit.nix"],"default":[],"description":"List of builtins plugins to install. Those are shipped in the\n<literal>gerrit.war</literal> file.\n","loc":["services","gerrit","builtinPlugins"],"readOnly":false,"type":"list of one of \"codemirror-editor\", \"commit-message-length-validator\", \"delete-project\", \"download-commands\", \"gitiles\", \"hooks\", \"plugin-manager\", \"replication\", \"reviewnotes\", \"singleusergroup\", \"webhooks\"s"},"services.gerrit.enable":{"declarations":["nixos/modules/services/web-apps/gerrit.nix"],"default":false,"description":"Whether to enable Gerrit service.","example":true,"loc":["services","gerrit","enable"],"readOnly":false,"type":"boolean"},"services.gerrit.jvmHeapLimit":{"declarations":["nixos/modules/services/web-apps/gerrit.nix"],"default":"1024m","description":"How much memory to allocate to the JVM heap\n","loc":["services","gerrit","jvmHeapLimit"],"readOnly":false,"type":"string"},"services.gerrit.jvmOpts":{"declarations":["nixos/modules/services/web-apps/gerrit.nix"],"default":["-Dflogger.backend_factory=com.google.common.flogger.backend.log4j.Log4jBackendFactory#getInstance","-Dflogger.logging_context=com.google.gerrit.server.logging.LoggingContext#getInstance"],"description":"A list of JVM options to start gerrit with.","loc":["services","gerrit","jvmOpts"],"readOnly":false,"type":"list of strings"},"services.gerrit.jvmPackage":{"declarations":["nixos/modules/services/web-apps/gerrit.nix"],"default":{"_type":"literalExpression","text":"pkgs.jre_headless"},"description":"Java Runtime Environment package to use","loc":["services","gerrit","jvmPackage"],"readOnly":false,"type":"package"},"services.gerrit.listenAddress":{"declarations":["nixos/modules/services/web-apps/gerrit.nix"],"default":"[::]:8080","description":"<literal>hostname:port</literal> to listen for HTTP traffic.\n\nThis is bound using the systemd socket activation.\n","loc":["services","gerrit","listenAddress"],"readOnly":false,"type":"string"},"services.gerrit.package":{"declarations":["nixos/modules/services/web-apps/gerrit.nix"],"default":{"_type":"literalExpression","text":"pkgs.gerrit"},"description":"Gerrit package to use","loc":["services","gerrit","package"],"readOnly":false,"type":"package"},"services.gerrit.plugins":{"declarations":["nixos/modules/services/web-apps/gerrit.nix"],"default":[],"description":"List of plugins to add to Gerrit. Each derivation is a jar file\nitself where the name of the derivation is the name of plugin.\n","loc":["services","gerrit","plugins"],"readOnly":false,"type":"list of packages"},"services.gerrit.replicationSettings":{"declarations":["nixos/modules/services/web-apps/gerrit.nix"],"default":{},"description":"Replication configuration. This will be generated to the\n<literal>etc/replication.config</literal> file.\n","loc":["services","gerrit","replicationSettings"],"readOnly":false,"type":"lazy attribute set of lazy attribute set of string or boolean or signed integer or list of string or boolean or signed integers or lazy attribute set of string or boolean or signed integer or list of string or boolean or signed integerssss"},"services.gerrit.serverId":{"declarations":["nixos/modules/services/web-apps/gerrit.nix"],"description":"Set a UUID that uniquely identifies the server.\n\nThis can be generated with\n<literal>nix-shell -p util-linux --run uuidgen</literal>.\n","loc":["services","gerrit","serverId"],"readOnly":false,"type":"string"},"services.gerrit.settings":{"declarations":["nixos/modules/services/web-apps/gerrit.nix"],"default":{},"description":"Gerrit configuration. This will be generated to the\n<literal>etc/gerrit.config</literal> file.\n","loc":["services","gerrit","settings"],"readOnly":false,"type":"lazy attribute set of lazy attribute set of string or boolean or signed integer or list of string or boolean or signed integers or lazy attribute set of string or boolean or signed integer or list of string or boolean or signed integerssss"},"services.gnome.core-developer-tools.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/gnome.nix"],"default":false,"description":"Whether to enable GNOME core developer tools.","example":true,"loc":["services","gnome","core-developer-tools","enable"],"readOnly":false,"type":"boolean"},"services.gnome.core-os-services.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/gnome.nix"],"default":false,"description":"Whether to enable essential services for GNOME3.","example":true,"loc":["services","gnome","core-os-services","enable"],"readOnly":false,"type":"boolean"},"services.gnome.core-shell.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/gnome.nix"],"default":false,"description":"Whether to enable GNOME Shell services.","example":true,"loc":["services","gnome","core-shell","enable"],"readOnly":false,"type":"boolean"},"services.gnome.core-utilities.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/gnome.nix"],"default":false,"description":"Whether to enable GNOME core utilities.","example":true,"loc":["services","gnome","core-utilities","enable"],"readOnly":false,"type":"boolean"},"services.gnome.experimental-features.realtime-scheduling":{"declarations":["nixos/modules/services/x11/desktop-managers/gnome.nix"],"default":false,"description":"Makes mutter (which propagates to gnome-shell) request a low priority real-time\nscheduling which is only available on the wayland session.\nTo enable this experimental feature it requires a restart of the compositor.\nNote that enabling this option only enables the <emphasis>capability</emphasis>\nfor realtime-scheduling to be used. It doesn't automatically set the gsetting\nso that mutter actually uses realtime-scheduling. This would require adding <literal>\nrt-scheduler</literal> to <literal>/org/gnome/mutter/experimental-features</literal>\nwith dconf-editor. You cannot use extraGSettingsOverrides because that will only\nchange the default value of the setting.\n\nPlease be aware of these known issues with the feature in nixos:\n<itemizedlist>\n <listitem>\n  <para>\n   <link xlink:href=\"https://github.com/NixOS/nixpkgs/issues/90201\">NixOS/nixpkgs#90201</link>\n  </para>\n </listitem>\n <listitem>\n  <para>\n   <link xlink:href=\"https://github.com/NixOS/nixpkgs/issues/86730\">NixOS/nixpkgs#86730</link>\n  </para>\n</listitem>\n</itemizedlist>\n","loc":["services","gnome","experimental-features","realtime-scheduling"],"readOnly":false,"type":"boolean"},"services.gnome.games.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/gnome.nix"],"default":false,"description":"Whether to enable GNOME games.","example":true,"loc":["services","gnome","games","enable"],"readOnly":false,"type":"boolean"},"services.hercules-ci-agent.checkNix":{"declarations":["nixos/modules/services/continuous-integration/hercules-ci-agent/common.nix"],"default":true,"description":"Whether to make sure that the system's Nix (nix-daemon) is compatible.\n\nIf you set this to false, please keep up with the change log.\n","loc":["services","hercules-ci-agent","checkNix"],"readOnly":false,"type":"boolean"},"services.hercules-ci-agent.enable":{"declarations":["nixos/modules/services/continuous-integration/hercules-ci-agent/common.nix"],"default":false,"description":"Enable to run Hercules CI Agent as a system service.\n\n<link xlink:href=\"https://hercules-ci.com\">Hercules CI</link> is a\ncontinuous integation service that is centered around Nix.\n\nSupport is available at <link xlink:href=\"mailto:help@hercules-ci.com\">help@hercules-ci.com</link>.\n","loc":["services","hercules-ci-agent","enable"],"readOnly":false,"type":"boolean"},"services.hercules-ci-agent.package":{"declarations":["nixos/modules/services/continuous-integration/hercules-ci-agent/common.nix"],"default":{"_type":"literalExpression","text":"pkgs.hercules-ci-agent"},"description":"Package containing the bin/hercules-ci-agent executable.\n","loc":["services","hercules-ci-agent","package"],"readOnly":false,"type":"package"},"services.hercules-ci-agent.settings":{"declarations":["nixos/modules/services/continuous-integration/hercules-ci-agent/common.nix"],"description":"These settings are written to the <literal>agent.toml</literal> file.\n\nNot all settings are listed as options, can be set nonetheless.\n\nFor the exhaustive list of settings, see <link xlink:href=\"https://docs.hercules-ci.com/hercules-ci/reference/agent-config/\"/>.\n","loc":["services","hercules-ci-agent","settings"],"readOnly":false,"type":"TOML value"},"services.hercules-ci-agent.settings.apiBaseUrl":{"declarations":["nixos/modules/services/continuous-integration/hercules-ci-agent/common.nix"],"default":"https://hercules-ci.com","description":"API base URL that the agent will connect to.\n\nWhen using Hercules CI Enterprise, set this to the URL where your\nHercules CI server is reachable.\n","loc":["services","hercules-ci-agent","settings","apiBaseUrl"],"readOnly":false,"type":"string"},"services.hercules-ci-agent.settings.baseDirectory":{"declarations":["nixos/modules/services/continuous-integration/hercules-ci-agent/common.nix"],"default":"/var/lib/hercules-ci-agent","description":"State directory (secrets, work directory, etc) for agent\n","loc":["services","hercules-ci-agent","settings","baseDirectory"],"readOnly":false,"type":"path"},"services.hercules-ci-agent.settings.binaryCachesPath":{"declarations":["nixos/modules/services/continuous-integration/hercules-ci-agent/common.nix"],"default":{"_type":"literalExpression","text":"staticSecretsDirectory + \"/binary-caches.json\""},"description":"Path to a JSON file containing binary cache secret keys.\n\nAs these values are confidential, they should not be in the store, but\ncopied over using other means, such as agenix, NixOps\n<literal>deployment.keys</literal>, or manual installation.\n\nThe format is described on <link xlink:href=\"https://docs.hercules-ci.com/hercules-ci-agent/binary-caches-json/\">https://docs.hercules-ci.com/hercules-ci-agent/binary-caches-json/</link>.\n","loc":["services","hercules-ci-agent","settings","binaryCachesPath"],"readOnly":false,"type":"path"},"services.hercules-ci-agent.settings.clusterJoinTokenPath":{"declarations":["nixos/modules/services/continuous-integration/hercules-ci-agent/common.nix"],"default":{"_type":"literalExpression","text":"staticSecretsDirectory + \"/cluster-join-token.key\""},"description":"Location of the cluster-join-token.key file.\n\nYou can retrieve the contents of the file when creating a new agent via\n<link xlink:href=\"https://hercules-ci.com/dashboard\">https://hercules-ci.com/dashboard</link>.\n\nAs this value is confidential, it should not be in the store, but\ninstalled using other means, such as agenix, NixOps\n<literal>deployment.keys</literal>, or manual installation.\n\nThe contents of the file are used for authentication between the agent and the API.\n","loc":["services","hercules-ci-agent","settings","clusterJoinTokenPath"],"readOnly":false,"type":"path"},"services.hercules-ci-agent.settings.concurrentTasks":{"declarations":["nixos/modules/services/continuous-integration/hercules-ci-agent/common.nix"],"default":"auto","description":"Number of tasks to perform simultaneously.\n\nA task is a single derivation build, an evaluation or an effect run.\nAt minimum, you need 2 concurrent tasks for <literal>x86_64-linux</literal>\nin your cluster, to allow for import from derivation.\n\n<literal>concurrentTasks</literal> can be around the CPU core count or lower if memory is\nthe bottleneck.\n\nThe optimal value depends on the resource consumption characteristics of your workload,\nincluding memory usage and in-task parallelism. This is typically determined empirically.\n\nWhen scaling, it is generally better to have a double-size machine than two machines,\nbecause each split of resources causes inefficiencies; particularly with regards\nto build latency because of extra downloads.\n","loc":["services","hercules-ci-agent","settings","concurrentTasks"],"readOnly":false,"type":"positive integer, meaning >0 or value \"auto\" (singular enum)"},"services.hercules-ci-agent.settings.labels":{"declarations":["nixos/modules/services/continuous-integration/hercules-ci-agent/common.nix"],"default":{"_type":"literalExpression","text":"{\n  agent.source = \"...\"; # One of \"nixpkgs\", \"flake\", \"override\"\n  lib.version = \"...\";\n  pkgs.version = \"...\";\n}\n"},"description":"A key-value map of user data.\n\nThis data will be available to organization members in the dashboard and API.\n\nThe values can be of any TOML type that corresponds to a JSON type, but arrays\ncan not contain tables/objects due to limitations of the TOML library. Values\ninvolving arrays of non-primitive types may not be representable currently.\n","loc":["services","hercules-ci-agent","settings","labels"],"readOnly":false,"type":"TOML value"},"services.hercules-ci-agent.settings.secretsJsonPath":{"declarations":["nixos/modules/services/continuous-integration/hercules-ci-agent/common.nix"],"default":{"_type":"literalExpression","text":"staticSecretsDirectory + \"/secrets.json\""},"description":"Path to a JSON file containing secrets for effects.\n\nAs these values are confidential, they should not be in the store, but\ncopied over using other means, such as agenix, NixOps\n<literal>deployment.keys</literal>, or manual installation.\n\nThe format is described on <link xlink:href=\"https://docs.hercules-ci.com/hercules-ci-agent/secrets-json/\">https://docs.hercules-ci.com/hercules-ci-agent/secrets-json/</link>.\n\n","loc":["services","hercules-ci-agent","settings","secretsJsonPath"],"readOnly":false,"type":"path"},"services.hercules-ci-agent.settings.staticSecretsDirectory":{"declarations":["nixos/modules/services/continuous-integration/hercules-ci-agent/common.nix"],"default":{"_type":"literalExpression","text":"baseDirectory + \"/secrets\""},"description":"This is the default directory to look for statically configured secrets like <literal>cluster-join-token.key</literal>.\n\nSee also <literal>clusterJoinTokenPath</literal> and <literal>binaryCachesPath</literal> for fine-grained configuration.\n","loc":["services","hercules-ci-agent","settings","staticSecretsDirectory"],"readOnly":false,"type":"path"},"services.hercules-ci-agent.settings.workDirectory":{"declarations":["nixos/modules/services/continuous-integration/hercules-ci-agent/common.nix"],"default":{"_type":"literalExpression","text":"baseDirectory + \"/work\""},"description":"The directory in which temporary subdirectories are created for task state. This includes sources for Nix evaluation.\n","loc":["services","hercules-ci-agent","settings","workDirectory"],"readOnly":false,"type":"path"},"services.home-assistant.config":{"declarations":["nixos/modules/services/home-automation/home-assistant.nix"],"description":"Your <filename>configuration.yaml</filename> as a Nix attribute set.\n\nYAML functions like <link xlink:href=\"https://www.home-assistant.io/docs/configuration/secrets/\">secrets</link>\ncan be passed as a string and will be unquoted automatically.\n\nUnless this option is explicitly set to <literal>null</literal>\nwe assume your <filename>configuration.yaml</filename> is\nmanaged through this module and thereby overwritten on startup.\n","example":{"_type":"literalExpression","text":"{\n  homeassistant = {\n    name = \"Home\";\n    latitude = \"!secret latitude\";\n    longitude = \"!secret longitude\";\n    elevation = \"!secret elevation\";\n    unit_system = \"metric\";\n    time_zone = \"UTC\";\n  };\n  frontend = {\n    themes = \"!include_dir_merge_named themes\";\n  };\n  http = {};\n  feedreader.urls = [ \"https://nixos.org/blogs.xml\" ];\n}\n"},"loc":["services","home-assistant","config"],"readOnly":false,"type":"null or YAML value"},"services.home-assistant.config.homeassistant.latitude":{"declarations":["nixos/modules/services/home-automation/home-assistant.nix"],"default":null,"description":"Latitude of your location required to calculate the time the sun rises and sets.\n","example":52.3,"loc":["services","home-assistant","config","homeassistant","latitude"],"readOnly":false,"type":"null or floating point number or string"},"services.home-assistant.config.homeassistant.longitude":{"declarations":["nixos/modules/services/home-automation/home-assistant.nix"],"default":null,"description":"Longitude of your location required to calculate the time the sun rises and sets.\n","example":4.9,"loc":["services","home-assistant","config","homeassistant","longitude"],"readOnly":false,"type":"null or floating point number or string"},"services.home-assistant.config.homeassistant.name":{"declarations":["nixos/modules/services/home-automation/home-assistant.nix"],"default":null,"description":"Name of the location where Home Assistant is running.\n","example":"Home","loc":["services","home-assistant","config","homeassistant","name"],"readOnly":false,"type":"null or string"},"services.home-assistant.config.homeassistant.temperature_unit":{"declarations":["nixos/modules/services/home-automation/home-assistant.nix"],"default":null,"description":"Override temperature unit set by unit_system. <literal>C</literal> for Celsius, <literal>F</literal> for Fahrenheit.\n","example":"C","loc":["services","home-assistant","config","homeassistant","temperature_unit"],"readOnly":false,"type":"null or one of \"C\", \"F\""},"services.home-assistant.config.homeassistant.time_zone":{"declarations":["nixos/modules/services/home-automation/home-assistant.nix"],"default":{"_type":"literalExpression","text":"config.time.timeZone or null\n"},"description":"Pick your time zone from the column TZ of Wikipedia’s <link xlink:href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\">list of tz database time zones</link>.\n","example":"Europe/Amsterdam","loc":["services","home-assistant","config","homeassistant","time_zone"],"readOnly":false,"type":"null or string"},"services.home-assistant.config.homeassistant.unit_system":{"declarations":["nixos/modules/services/home-automation/home-assistant.nix"],"default":null,"description":"The unit system to use. This also sets temperature_unit, Celsius for Metric and Fahrenheit for Imperial.\n","example":"metric","loc":["services","home-assistant","config","homeassistant","unit_system"],"readOnly":false,"type":"null or one of \"metric\", \"imperial\""},"services.home-assistant.config.http.server_host":{"declarations":["nixos/modules/services/home-automation/home-assistant.nix"],"default":["0.0.0.0","::"],"description":"Only listen to incoming requests on specific IP/host. The default listed assumes support for IPv4 and IPv6.\n","example":"::1","loc":["services","home-assistant","config","http","server_host"],"readOnly":false,"type":"string or list of strings"},"services.home-assistant.config.http.server_port":{"declarations":["nixos/modules/services/home-automation/home-assistant.nix"],"default":8123,"description":"The port on which to listen.\n","loc":["services","home-assistant","config","http","server_port"],"readOnly":false,"type":"16 bit unsigned integer; between 0 and 65535 (both inclusive)"},"services.home-assistant.config.lovelace.mode":{"declarations":["nixos/modules/services/home-automation/home-assistant.nix"],"default":{"_type":"literalExpression","text":"if cfg.lovelaceConfig != null\n  then \"yaml\"\nelse \"storage\";\n"},"description":"In what mode should the main Lovelace panel be, <literal>yaml</literal> or <literal>storage</literal> (UI managed).\n","example":"yaml","loc":["services","home-assistant","config","lovelace","mode"],"readOnly":false,"type":"one of \"yaml\", \"storage\""},"services.home-assistant.configDir":{"declarations":["nixos/modules/services/home-automation/home-assistant.nix"],"default":"/var/lib/hass","description":"The config directory, where your <filename>configuration.yaml</filename> is located.","loc":["services","home-assistant","configDir"],"readOnly":false,"type":"path"},"services.home-assistant.configWritable":{"declarations":["nixos/modules/services/home-automation/home-assistant.nix"],"default":false,"description":"Whether to make <filename>configuration.yaml</filename> writable.\n\nThis will allow you to edit it from Home Assistant's web interface.\n\nThis only has an effect if <option>config</option> is set.\nHowever, bear in mind that it will be overwritten at every start of the service.\n","loc":["services","home-assistant","configWritable"],"readOnly":false,"type":"boolean"},"services.home-assistant.enable":{"declarations":["nixos/modules/services/home-automation/home-assistant.nix"],"default":false,"description":"Whether to enable Home Assistant. Please note that this installation method is unsupported upstream.","example":true,"loc":["services","home-assistant","enable"],"readOnly":false,"type":"boolean"},"services.home-assistant.extraComponents":{"declarations":["nixos/modules/services/home-automation/home-assistant.nix"],"default":["default_config","met","esphome"],"description":"List of <link xlink:href=\"https://www.home-assistant.io/integrations/\">components</link> that have their dependencies included in the package.\n\nThe component name can be found in the URL, for example <literal>https://www.home-assistant.io/integrations/ffmpeg/</literal> would map to <literal>ffmpeg</literal>.\n","example":{"_type":"literalExpression","text":"[\n  \"analytics\"\n  \"default_config\"\n  \"esphome\"\n  \"my\"\n  \"shopping_list\"\n  \"wled\"\n]\n"},"loc":["services","home-assistant","extraComponents"],"readOnly":false,"type":"list of one of \"abode\", \"accuweather\", \"acer_projector\", \"acmeda\", \"actiontec\", \"adax\", \"adguard\", \"ads\", \"advantage_air\", \"aemet\", \"aftership\", \"agent_dvr\", \"air_quality\", \"airly\", \"airnow\", \"airthings\", \"airtouch4\", \"airvisual\", \"aladdin_connect\", \"alarm_control_panel\", \"alarmdecoder\", \"alert\", \"alexa\", \"almond\", \"alpha_vantage\", \"amazon_polly\", \"ambee\", \"amberelectric\", \"ambiclimate\", \"ambient_station\", \"amcrest\", \"ampio\", \"analytics\", \"android_ip_webcam\", \"androidtv\", \"anel_pwrctrl\", \"anthemav\", \"apache_kafka\", \"apcupsd\", \"api\", \"apple_tv\", \"apprise\", \"aprs\", \"aqualogic\", \"aquostv\", \"arcam_fmj\", \"arest\", \"arlo\", \"arris_tg2492lg\", \"aruba\", \"arwn\", \"aseko_pool_live\", \"asterisk_cdr\", \"asterisk_mbox\", \"asuswrt\", \"atag\", \"aten_pe\", \"atome\", \"august\", \"aurora\", \"aurora_abb_powerone\", \"aussie_broadband\", \"auth\", \"automation\", \"avea\", \"avion\", \"awair\", \"aws\", \"axis\", \"azure_devops\", \"azure_event_hub\", \"azure_service_bus\", \"baidu\", \"balboa\", \"bayesian\", \"bbb_gpio\", \"bbox\", \"beewi_smartclim\", \"bh1750\", \"binary_sensor\", \"bitcoin\", \"bizkaibus\", \"blackbird\", \"blebox\", \"blink\", \"blinksticklight\", \"blinkt\", \"blockchain\", \"bloomsky\", \"blueprint\", \"bluesound\", \"bluetooth_le_tracker\", \"bluetooth_tracker\", \"bme280\", \"bme680\", \"bmp280\", \"bmw_connected_drive\", \"bond\", \"bosch_shc\", \"braviatv\", \"broadlink\", \"brother\", \"brottsplatskartan\", \"browser\", \"brunt\", \"bsblan\", \"bt_home_hub_5\", \"bt_smarthub\", \"buienradar\", \"button\", \"caldav\", \"calendar\", \"camera\", \"canary\", \"cast\", \"cert_expiry\", \"channels\", \"circuit\", \"cisco_ios\", \"cisco_mobility_express\", \"cisco_webex_teams\", \"citybikes\", \"clementine\", \"clickatell\", \"clicksend\", \"clicksend_tts\", \"climacell\", \"climate\", \"cloud\", \"cloudflare\", \"cmus\", \"co2signal\", \"coinbase\", \"color_extractor\", \"comed_hourly_pricing\", \"comfoconnect\", \"command_line\", \"compensation\", \"concord232\", \"config\", \"configurator\", \"control4\", \"conversation\", \"coolmaster\", \"coronavirus\", \"counter\", \"cover\", \"cppm_tracker\", \"cpuspeed\", \"crownstone\", \"cups\", \"currencylayer\", \"daikin\", \"danfoss_air\", \"darksky\", \"datadog\", \"ddwrt\", \"debugpy\", \"deconz\", \"decora\", \"decora_wifi\", \"default_config\", \"delijn\", \"deluge\", \"demo\", \"denon\", \"denonavr\", \"derivative\", \"deutsche_bahn\", \"device_automation\", \"device_sun_light_trigger\", \"device_tracker\", \"devolo_home_control\", \"devolo_home_network\", \"dexcom\", \"dhcp\", \"dht\", \"diagnostics\", \"dialogflow\", \"digital_ocean\", \"digitalloggers\", \"directv\", \"discogs\", \"discord\", \"discovery\", \"dlib_face_detect\", \"dlib_face_identify\", \"dlink\", \"dlna_dmr\", \"dlna_dms\", \"dnsip\", \"dominos\", \"doods\", \"doorbird\", \"dovado\", \"downloader\", \"dsmr\", \"dsmr_reader\", \"dte_energy_bridge\", \"dublin_bus_transport\", \"duckdns\", \"dunehd\", \"dwd_weather_warnings\", \"dweet\", \"dynalite\", \"eafm\", \"ebox\", \"ebusd\", \"ecoal_boiler\", \"ecobee\", \"econet\", \"ecovacs\", \"eddystone_temperature\", \"edimax\", \"edl21\", \"efergy\", \"egardia\", \"eight_sleep\", \"elgato\", \"eliqonline\", \"elkm1\", \"elmax\", \"elv\", \"emby\", \"emoncms\", \"emoncms_history\", \"emonitor\", \"emulated_hue\", \"emulated_kasa\", \"emulated_roku\", \"energy\", \"enigma2\", \"enocean\", \"enphase_envoy\", \"entur_public_transport\", \"environment_canada\", \"envirophat\", \"envisalink\", \"ephember\", \"epson\", \"epsonworkforce\", \"eq3btsmart\", \"esphome\", \"etherscan\", \"eufy\", \"everlights\", \"evil_genius_labs\", \"evohome\", \"ezviz\", \"faa_delays\", \"facebook\", \"facebox\", \"fail2ban\", \"familyhub\", \"fan\", \"fastdotcom\", \"feedreader\", \"ffmpeg\", \"ffmpeg_motion\", \"ffmpeg_noise\", \"fibaro\", \"fido\", \"file\", \"filesize\", \"filter\", \"fints\", \"fireservicerota\", \"firmata\", \"fitbit\", \"fivem\", \"fixer\", \"fjaraskupan\", \"fleetgo\", \"flexit\", \"flic\", \"flick_electric\", \"flipr\", \"flo\", \"flock\", \"flume\", \"flunearyou\", \"flux\", \"flux_led\", \"folder\", \"folder_watcher\", \"foobot\", \"forecast_solar\", \"forked_daapd\", \"fortios\", \"foscam\", \"foursquare\", \"free_mobile\", \"freebox\", \"freedns\", \"freedompro\", \"fritz\", \"fritzbox\", \"fritzbox_callmonitor\", \"fronius\", \"frontend\", \"frontier_silicon\", \"futurenow\", \"garadget\", \"garages_amsterdam\", \"gc100\", \"gdacs\", \"generic\", \"generic_hygrostat\", \"generic_thermostat\", \"geniushub\", \"geo_json_events\", \"geo_location\", \"geo_rss_events\", \"geofency\", \"geonetnz_quakes\", \"geonetnz_volcano\", \"gios\", \"github\", \"gitlab_ci\", \"gitter\", \"glances\", \"goalfeed\", \"goalzero\", \"gogogate2\", \"goodwe\", \"google\", \"google_assistant\", \"google_cloud\", \"google_domains\", \"google_maps\", \"google_pubsub\", \"google_translate\", \"google_travel_time\", \"google_wifi\", \"gpsd\", \"gpslogger\", \"graphite\", \"gree\", \"greeneye_monitor\", \"greenwave\", \"group\", \"growatt_server\", \"gstreamer\", \"gtfs\", \"guardian\", \"habitica\", \"hangouts\", \"harman_kardon_avr\", \"harmony\", \"hassio\", \"haveibeenpwned\", \"hddtemp\", \"hdmi_cec\", \"heatmiser\", \"heos\", \"here_travel_time\", \"hikvision\", \"hikvisioncam\", \"hisense_aehw4a1\", \"history\", \"history_stats\", \"hitron_coda\", \"hive\", \"hlk_sw16\", \"home_connect\", \"home_plus_control\", \"homeassistant\", \"homekit\", \"homekit_controller\", \"homematic\", \"homematicip_cloud\", \"homewizard\", \"homeworks\", \"honeywell\", \"horizon\", \"hp_ilo\", \"html5\", \"http\", \"htu21d\", \"huawei_lte\", \"hue\", \"huisbaasje\", \"humidifier\", \"hunterdouglas_powerview\", \"hvv_departures\", \"hydrawise\", \"hyperion\", \"ialarm\", \"iammeter\", \"iaqualink\", \"icloud\", \"idteck_prox\", \"ifttt\", \"iglo\", \"ign_sismologia\", \"ihc\", \"image\", \"image_processing\", \"imap\", \"imap_email_content\", \"incomfort\", \"influxdb\", \"input_boolean\", \"input_button\", \"input_datetime\", \"input_number\", \"input_select\", \"input_text\", \"insteon\", \"integration\", \"intellifire\", \"intent\", \"intent_script\", \"intesishome\", \"ios\", \"iotawatt\", \"iperf3\", \"ipma\", \"ipp\", \"iqvia\", \"irish_rail_transport\", \"islamic_prayer_times\", \"iss\", \"isy994\", \"itach\", \"itunes\", \"izone\", \"jellyfin\", \"jewish_calendar\", \"joaoapps_join\", \"juicenet\", \"kaiterra\", \"kankun\", \"keba\", \"keenetic_ndms2\", \"kef\", \"keyboard\", \"keyboard_remote\", \"kira\", \"kiwi\", \"kmtronic\", \"knx\", \"kodi\", \"konnected\", \"kostal_plenticore\", \"kraken\", \"kulersky\", \"kwb\", \"lacrosse\", \"lametric\", \"lannouncer\", \"lastfm\", \"launch_library\", \"lcn\", \"lg_netcast\", \"lg_soundbar\", \"life360\", \"lifx\", \"lifx_cloud\", \"light\", \"lightwave\", \"limitlessled\", \"linksys_smart\", \"linode\", \"linux_battery\", \"lirc\", \"litejet\", \"litterrobot\", \"llamalab_automate\", \"local_file\", \"local_ip\", \"locative\", \"lock\", \"logbook\", \"logentries\", \"logger\", \"logi_circle\", \"london_air\", \"london_underground\", \"lookin\", \"lovelace\", \"luci\", \"luftdaten\", \"lupusec\", \"lutron\", \"lutron_caseta\", \"lw12wifi\", \"lyric\", \"magicseaweed\", \"mailbox\", \"mailgun\", \"manual\", \"manual_mqtt\", \"map\", \"marytts\", \"mastodon\", \"matrix\", \"maxcube\", \"mazda\", \"mcp23017\", \"media_extractor\", \"media_player\", \"media_source\", \"mediaroom\", \"melcloud\", \"melissa\", \"meraki\", \"message_bird\", \"met\", \"met_eireann\", \"meteo_france\", \"meteoalarm\", \"meteoclimatic\", \"metoffice\", \"mfi\", \"mhz19\", \"microsoft\", \"microsoft_face\", \"microsoft_face_detect\", \"microsoft_face_identify\", \"miflora\", \"mikrotik\", \"mill\", \"min_max\", \"minecraft_server\", \"minio\", \"mitemp_bt\", \"mjpeg\", \"mobile_app\", \"mochad\", \"modbus\", \"modem_callerid\", \"modern_forms\", \"moehlenhoff_alpha2\", \"mold_indicator\", \"monoprice\", \"moon\", \"motion_blinds\", \"motioneye\", \"mpchc\", \"mpd\", \"mqtt\", \"mqtt_eventstream\", \"mqtt_json\", \"mqtt_room\", \"mqtt_statestream\", \"msteams\", \"mullvad\", \"mutesync\", \"mvglive\", \"my\", \"mycroft\", \"myq\", \"mysensors\", \"mystrom\", \"mythicbeastsdns\", \"nad\", \"nam\", \"namecheapdns\", \"nanoleaf\", \"neato\", \"nederlandse_spoorwegen\", \"ness_alarm\", \"nest\", \"netatmo\", \"netdata\", \"netgear\", \"netgear_lte\", \"netio\", \"network\", \"neurio_energy\", \"nexia\", \"nextbus\", \"nextcloud\", \"nfandroidtv\", \"nightscout\", \"niko_home_control\", \"nilu\", \"nina\", \"nissan_leaf\", \"nmap_tracker\", \"nmbs\", \"no_ip\", \"noaa_tides\", \"norway_air\", \"notify\", \"notify_events\", \"notion\", \"nsw_fuel_station\", \"nsw_rural_fire_service_feed\", \"nuheat\", \"nuki\", \"numato\", \"number\", \"nut\", \"nws\", \"nx584\", \"nzbget\", \"oasa_telematics\", \"obihai\", \"octoprint\", \"oem\", \"ohmconnect\", \"ombi\", \"omnilogic\", \"onboarding\", \"oncue\", \"ondilo_ico\", \"onewire\", \"onkyo\", \"onvif\", \"open_meteo\", \"openalpr_cloud\", \"openalpr_local\", \"opencv\", \"openerz\", \"openevse\", \"openexchangerates\", \"opengarage\", \"openhardwaremonitor\", \"openhome\", \"opensensemap\", \"opensky\", \"opentherm_gw\", \"openuv\", \"openweathermap\", \"opnsense\", \"opple\", \"orangepi_gpio\", \"oru\", \"orvibo\", \"osramlightify\", \"otp\", \"overkiz\", \"ovo_energy\", \"owntracks\", \"ozw\", \"p1_monitor\", \"panasonic_bluray\", \"panasonic_viera\", \"pandora\", \"panel_custom\", \"panel_iframe\", \"pcal9535a\", \"pencom\", \"persistent_notification\", \"person\", \"philips_js\", \"pi4ioe5v9xxxx\", \"pi_hole\", \"picnic\", \"picotts\", \"piglow\", \"pilight\", \"ping\", \"pioneer\", \"pjlink\", \"plaato\", \"plant\", \"plex\", \"plugwise\", \"plum_lightpad\", \"pocketcasts\", \"point\", \"poolsense\", \"powerwall\", \"profiler\", \"progettihwsw\", \"proliphix\", \"prometheus\", \"prosegur\", \"prowl\", \"proximity\", \"proxmoxve\", \"proxy\", \"ps4\", \"pulseaudio_loopback\", \"pure_energie\", \"push\", \"pushbullet\", \"pushover\", \"pushsafer\", \"pvoutput\", \"pvpc_hourly_pricing\", \"pyload\", \"python_script\", \"qbittorrent\", \"qld_bushfire\", \"qnap\", \"qrcode\", \"quantum_gateway\", \"qvr_pro\", \"qwikswitch\", \"rachio\", \"radarr\", \"radio_browser\", \"radiotherm\", \"rainbird\", \"raincloud\", \"rainforest_eagle\", \"rainmachine\", \"random\", \"raspihats\", \"raspyrfm\", \"rdw\", \"recollect_waste\", \"recorder\", \"recswitch\", \"reddit\", \"rejseplanen\", \"remember_the_milk\", \"remote\", \"remote_rpi_gpio\", \"renault\", \"repetier\", \"rest\", \"rest_command\", \"rflink\", \"rfxtrx\", \"ridwell\", \"ring\", \"ripple\", \"risco\", \"rituals_perfume_genie\", \"rmvtransport\", \"rocketchat\", \"roku\", \"roomba\", \"roon\", \"route53\", \"rova\", \"rpi_camera\", \"rpi_gpio\", \"rpi_gpio_pwm\", \"rpi_pfio\", \"rpi_power\", \"rpi_rf\", \"rss_feed_template\", \"rtorrent\", \"rtsp_to_webrtc\", \"ruckus_unleashed\", \"russound_rio\", \"russound_rnet\", \"sabnzbd\", \"safe_mode\", \"saj\", \"samsungtv\", \"satel_integra\", \"scene\", \"schluter\", \"scrape\", \"screenlogic\", \"script\", \"scsgate\", \"search\", \"season\", \"select\", \"sendgrid\", \"sense\", \"sensehat\", \"senseme\", \"sensibo\", \"sensor\", \"sentry\", \"serial\", \"serial_pm\", \"sesame\", \"seven_segments\", \"seventeentrack\", \"sharkiq\", \"shell_command\", \"shelly\", \"shiftr\", \"shodan\", \"shopping_list\", \"sht31\", \"sia\", \"sigfox\", \"sighthound\", \"signal_messenger\", \"simplepush\", \"simplisafe\", \"simulated\", \"sinch\", \"siren\", \"sisyphus\", \"sky_hub\", \"skybeacon\", \"skybell\", \"slack\", \"sleepiq\", \"slide\", \"sma\", \"smappee\", \"smart_meter_texas\", \"smarthab\", \"smartthings\", \"smarttub\", \"smarty\", \"smhi\", \"sms\", \"smtp\", \"snapcast\", \"snips\", \"snmp\", \"sochain\", \"solaredge\", \"solaredge_local\", \"solarlog\", \"solax\", \"soma\", \"somfy\", \"somfy_mylink\", \"sonarr\", \"songpal\", \"sonos\", \"sony_projector\", \"soundtouch\", \"spaceapi\", \"spc\", \"speedtestdotnet\", \"spider\", \"splunk\", \"spotify\", \"sql\", \"squeezebox\", \"srp_energy\", \"ssdp\", \"starline\", \"starlingbank\", \"startca\", \"statistics\", \"statsd\", \"steam_online\", \"steamist\", \"stiebel_eltron\", \"stookalert\", \"stream\", \"streamlabswater\", \"stt\", \"subaru\", \"suez_water\", \"sun\", \"supervisord\", \"supla\", \"surepetcare\", \"swiss_hydrological_data\", \"swiss_public_transport\", \"swisscom\", \"switch\", \"switchbot\", \"switcher_kis\", \"switchmate\", \"syncthing\", \"syncthru\", \"synology_chat\", \"synology_dsm\", \"synology_srm\", \"syslog\", \"system_bridge\", \"system_health\", \"system_log\", \"systemmonitor\", \"tado\", \"tag\", \"tailscale\", \"tank_utility\", \"tankerkoenig\", \"tapsaff\", \"tasmota\", \"tautulli\", \"tcp\", \"ted5000\", \"telegram\", \"telegram_bot\", \"tellduslive\", \"tellstick\", \"telnet\", \"temper\", \"template\", \"tensorflow\", \"tesla_wall_connector\", \"tfiac\", \"thermoworks_smoke\", \"thethingsnetwork\", \"thingspeak\", \"thinkingcleaner\", \"thomson\", \"threshold\", \"tibber\", \"tikteck\", \"tile\", \"time_date\", \"timer\", \"tmb\", \"tod\", \"todoist\", \"tof\", \"tolo\", \"tomato\", \"toon\", \"torque\", \"totalconnect\", \"touchline\", \"tplink\", \"tplink_lte\", \"traccar\", \"trace\", \"tractive\", \"tradfri\", \"trafikverket_train\", \"trafikverket_weatherstation\", \"transmission\", \"transport_nsw\", \"travisci\", \"trend\", \"tts\", \"tuya\", \"twentemilieu\", \"twilio\", \"twilio_call\", \"twilio_sms\", \"twinkly\", \"twitch\", \"twitter\", \"ubus\", \"ue_smart_radio\", \"uk_transport\", \"unifi\", \"unifi_direct\", \"unifiled\", \"unifiprotect\", \"universal\", \"upb\", \"upc_connect\", \"upcloud\", \"updater\", \"upnp\", \"uptime\", \"uptimerobot\", \"usb\", \"uscis\", \"usgs_earthquakes_feed\", \"utility_meter\", \"uvc\", \"vacuum\", \"vallox\", \"vasttrafik\", \"velbus\", \"velux\", \"venstar\", \"vera\", \"verisure\", \"versasense\", \"version\", \"vesync\", \"viaggiatreno\", \"vicare\", \"vilfo\", \"vivotek\", \"vizio\", \"vlc\", \"vlc_telnet\", \"voicerss\", \"volkszaehler\", \"volumio\", \"volvooncall\", \"vultr\", \"w800rf32\", \"wake_on_lan\", \"wallbox\", \"waqi\", \"water_heater\", \"waterfurnace\", \"watson_iot\", \"watson_tts\", \"watttime\", \"waze_travel_time\", \"weather\", \"webhook\", \"webostv\", \"websocket_api\", \"wemo\", \"whirlpool\", \"whois\", \"wiffi\", \"wilight\", \"wirelesstag\", \"withings\", \"wiz\", \"wled\", \"wolflink\", \"workday\", \"worldclock\", \"worldtidesinfo\", \"worxlandroid\", \"wsdot\", \"x10\", \"xbox\", \"xbox_live\", \"xeoma\", \"xiaomi\", \"xiaomi_aqara\", \"xiaomi_miio\", \"xiaomi_tv\", \"xmpp\", \"xs1\", \"yale_smart_alarm\", \"yamaha\", \"yamaha_musiccast\", \"yandex_transport\", \"yandextts\", \"yeelight\", \"yeelightsunflower\", \"yi\", \"youless\", \"zabbix\", \"zamg\", \"zengge\", \"zeroconf\", \"zerproc\", \"zestimate\", \"zha\", \"zhong_hong\", \"ziggo_mediabox_xl\", \"zodiac\", \"zone\", \"zoneminder\", \"zwave\", \"zwave_js\", \"zwave_me\"s"},"services.home-assistant.extraPackages":{"declarations":["nixos/modules/services/home-automation/home-assistant.nix"],"default":{"_type":"literalExpression","text":"python3Packages: with python3Packages; [];\n"},"description":"List of packages to add to propagatedBuildInputs.\n\nA popular example is <package>python3Packages.psycopg2</package>\nfor PostgreSQL support in the recorder component.\n","example":{"_type":"literalExpression","text":"python3Packages: with python3Packages; [\n  # postgresql support\n  psycopg2\n];\n"},"loc":["services","home-assistant","extraPackages"],"readOnly":false,"type":"function that evaluates to a(n) list of packages"},"services.home-assistant.lovelaceConfig":{"declarations":["nixos/modules/services/home-automation/home-assistant.nix"],"default":null,"description":"Your <filename>ui-lovelace.yaml</filename> as a Nix attribute set.\nSetting this option will automatically set <literal>lovelace.mode</literal> to <literal>yaml</literal>.\n\nBeware that setting this option will delete your previous <filename>ui-lovelace.yaml</filename>\n","example":{"_type":"literalExpression","text":"{\n  title = \"My Awesome Home\";\n  views = [ {\n    title = \"Example\";\n    cards = [ {\n      type = \"markdown\";\n      title = \"Lovelace\";\n      content = \"Welcome to your **Lovelace UI**.\";\n    } ];\n  } ];\n}\n"},"loc":["services","home-assistant","lovelaceConfig"],"readOnly":false,"type":"null or YAML value"},"services.home-assistant.lovelaceConfigWritable":{"declarations":["nixos/modules/services/home-automation/home-assistant.nix"],"default":false,"description":"Whether to make <filename>ui-lovelace.yaml</filename> writable.\n\nThis will allow you to edit it from Home Assistant's web interface.\n\nThis only has an effect if <option>lovelaceConfig</option> is set.\nHowever, bear in mind that it will be overwritten at every start of the service.\n","loc":["services","home-assistant","lovelaceConfigWritable"],"readOnly":false,"type":"boolean"},"services.home-assistant.openFirewall":{"declarations":["nixos/modules/services/home-automation/home-assistant.nix"],"default":false,"description":"Whether to open the firewall for the specified port.","loc":["services","home-assistant","openFirewall"],"readOnly":false,"type":"boolean"},"services.home-assistant.package":{"declarations":["nixos/modules/services/home-automation/home-assistant.nix"],"default":{"_type":"literalExpression","text":"pkgs.home-assistant.overrideAttrs (oldAttrs: {\n  doInstallCheck = false;\n})\n"},"description":"The Home Assistant package to use.\n","example":{"_type":"literalExpression","text":"pkgs.home-assistant.override {\n  extraPackages = python3Packages: with python3Packages; [\n    psycopg2\n  ];\n  extraComponents = [\n    \"default_config\"\n    \"esphome\"\n    \"met\"\n  ];\n}\n"},"loc":["services","home-assistant","package"],"readOnly":false,"type":"package"},"services.hylafax.areaCode":{"declarations":["nixos/modules/services/networking/hylafax/options.nix"],"default":null,"description":"Area code for server and all modems.","example":"30","loc":["services","hylafax","areaCode"],"readOnly":false,"type":"null or non-empty string"},"services.hylafax.autostart":{"declarations":["nixos/modules/services/networking/hylafax/options.nix"],"default":true,"description":"Autostart the HylaFAX queue manager at system start.\nIf this is <literal>false</literal>, the queue manager\nwill still be started if there are pending\njobs or if a user tries to connect to it.\n","example":false,"loc":["services","hylafax","autostart"],"readOnly":false,"type":"boolean"},"services.hylafax.commonModemConfig":{"declarations":["nixos/modules/services/networking/hylafax/options.nix"],"description":"Attribute set of default values for\nmodem config files <filename>etc/config.*</filename>.\nValues can be either strings or integers\n(which will be added to the config file verbatimly)\nor lists thereof\n(which will be translated to multiple\nlines with the same configuration key).\nBoolean values are translated to \"Yes\" or \"No\".\nThe default contains some reasonable\nconfiguration to yield an operational system.\n\nThink twice before changing\npaths of fax-processing scripts.\n","example":{"InternationalPrefix":"00","LongDistancePrefix":"0"},"loc":["services","hylafax","commonModemConfig"],"readOnly":false,"type":"attribute set of list of string or signed integer convertible to it or boolean convertible to its or string or signed integer convertible to it or boolean convertible to it convertible to its"},"services.hylafax.countryCode":{"declarations":["nixos/modules/services/networking/hylafax/options.nix"],"default":null,"description":"Country code for server and all modems.","example":"49","loc":["services","hylafax","countryCode"],"readOnly":false,"type":"null or non-empty string"},"services.hylafax.enable":{"declarations":["nixos/modules/services/networking/hylafax/options.nix"],"default":false,"description":"Whether to enable HylaFAX server.","example":true,"loc":["services","hylafax","enable"],"readOnly":false,"type":"boolean"},"services.hylafax.faxcron.enable.frequency":{"declarations":["nixos/modules/services/networking/hylafax/options.nix"],"default":null,"description":"Purge old files from the spooling area with\n<filename>faxcron</filename> with the given frequency\n(see systemd.time(7)).\n","example":"daily","loc":["services","hylafax","faxcron","enable","frequency"],"readOnly":false,"type":"null or non-empty string"},"services.hylafax.faxcron.enable.spoolInit":{"declarations":["nixos/modules/services/networking/hylafax/options.nix"],"default":false,"description":"Whether to enable Purge old files from the spooling area with\n<filename>faxcron</filename>\neach time the spooling area is initialized.\n.","example":true,"loc":["services","hylafax","faxcron","enable","spoolInit"],"readOnly":false,"type":"boolean"},"services.hylafax.faxcron.infoDays":{"declarations":["nixos/modules/services/networking/hylafax/options.nix"],"default":30,"description":"Set the expiration time for data in the\nremote machine information directory in days.\n","loc":["services","hylafax","faxcron","infoDays"],"readOnly":false,"type":"positive integer, meaning >0"},"services.hylafax.faxcron.logDays":{"declarations":["nixos/modules/services/networking/hylafax/options.nix"],"default":30,"description":"Set the expiration time for\nsession trace log files in days.\n","loc":["services","hylafax","faxcron","logDays"],"readOnly":false,"type":"positive integer, meaning >0"},"services.hylafax.faxcron.rcvDays":{"declarations":["nixos/modules/services/networking/hylafax/options.nix"],"default":7,"description":"Set the expiration time for files in\nthe received facsimile queue in days.\n","loc":["services","hylafax","faxcron","rcvDays"],"readOnly":false,"type":"positive integer, meaning >0"},"services.hylafax.faxqConfig":{"declarations":["nixos/modules/services/networking/hylafax/options.nix"],"description":"Attribute set of lines for the global\nfaxq config file <filename>etc/config</filename>.\nValues can be either strings or integers\n(which will be added to the config file verbatimly)\nor lists thereof\n(which will be translated to multiple\nlines with the same configuration key).\nBoolean values are translated to \"Yes\" or \"No\".\nThe default contains some reasonable\nconfiguration to yield an operational system.\n\n","example":{"InternationalPrefix":"00","LongDistancePrefix":"0"},"loc":["services","hylafax","faxqConfig"],"readOnly":false,"type":"attribute set of list of string or signed integer convertible to it or boolean convertible to its or string or signed integer convertible to it or boolean convertible to it convertible to its"},"services.hylafax.faxqclean.archiving":{"declarations":["nixos/modules/services/networking/hylafax/options.nix"],"default":"as-flagged","description":"Enable or suppress job archiving:\n<literal>never</literal> disables job archiving,\n<literal>as-flagged</literal> archives jobs that\nhave been flagged for archiving by sendfax,\n<literal>always</literal> forces archiving of all jobs.\nSee also sendfax(1) and faxqclean(8).\n","example":"always","loc":["services","hylafax","faxqclean","archiving"],"readOnly":false,"type":"one of \"never\", \"as-flagged\", \"always\""},"services.hylafax.faxqclean.docqMinutes":{"declarations":["nixos/modules/services/networking/hylafax/options.nix"],"default":60,"description":"Set the document\nage threshold (in minutes) that controls how long\nunreferenced files may reside in the docq directory.\n","example":{"_type":"literalExpression","text":"24*60"},"loc":["services","hylafax","faxqclean","docqMinutes"],"readOnly":false,"type":"positive integer, meaning >0"},"services.hylafax.faxqclean.doneqMinutes":{"declarations":["nixos/modules/services/networking/hylafax/options.nix"],"default":15,"description":"Set the job\nage threshold (in minutes) that controls how long\njobs may reside in the doneq directory.\n","example":{"_type":"literalExpression","text":"24*60"},"loc":["services","hylafax","faxqclean","doneqMinutes"],"readOnly":false,"type":"positive integer, meaning >0"},"services.hylafax.faxqclean.enable.frequency":{"declarations":["nixos/modules/services/networking/hylafax/options.nix"],"default":null,"description":"Purge old files from the spooling area with\n<filename>faxcron</filename> with the given frequency\n(see systemd.time(7)).\n","example":"daily","loc":["services","hylafax","faxqclean","enable","frequency"],"readOnly":false,"type":"null or non-empty string"},"services.hylafax.faxqclean.enable.spoolInit":{"declarations":["nixos/modules/services/networking/hylafax/options.nix"],"default":false,"description":"Whether to enable Purge old files from the spooling area with\n<filename>faxqclean</filename>\neach time the spooling area is initialized.\n.","example":true,"loc":["services","hylafax","faxqclean","enable","spoolInit"],"readOnly":false,"type":"boolean"},"services.hylafax.hfaxdConfig":{"declarations":["nixos/modules/services/networking/hylafax/options.nix"],"description":"Attribute set of lines for the global\nhfaxd config file <filename>etc/hfaxd.conf</filename>.\nValues can be either strings or integers\n(which will be added to the config file verbatimly)\nor lists thereof\n(which will be translated to multiple\nlines with the same configuration key).\nBoolean values are translated to \"Yes\" or \"No\".\nThe default contains some reasonable\nconfiguration to yield an operational system.\n\n","example":{"RecvqProtection":"0400"},"loc":["services","hylafax","hfaxdConfig"],"readOnly":false,"type":"attribute set of list of string or signed integer convertible to it or boolean convertible to its or string or signed integer convertible to it or boolean convertible to it convertible to its"},"services.hylafax.internationalPrefix":{"declarations":["nixos/modules/services/networking/hylafax/options.nix"],"default":null,"description":"International prefix for server and all modems.","example":"00","loc":["services","hylafax","internationalPrefix"],"readOnly":false,"type":"null or string"},"services.hylafax.longDistancePrefix":{"declarations":["nixos/modules/services/networking/hylafax/options.nix"],"default":null,"description":"Long distance prefix for server and all modems.","example":"0","loc":["services","hylafax","longDistancePrefix"],"readOnly":false,"type":"null or string"},"services.hylafax.modems":{"declarations":["nixos/modules/services/networking/hylafax/options.nix"],"default":{},"description":"Description of installed modems.\nAt least on modem must be defined\nto enable the HylaFAX server.\n","example":{"ttyS1":{"config":{"FAXNumber":"123456","LocalIdentifier":"Smith"},"type":"cirrus"}},"loc":["services","hylafax","modems"],"readOnly":false,"type":"attribute set of submodules"},"services.hylafax.modems.<name>.config":{"declarations":["nixos/modules/services/networking/hylafax/options.nix"],"description":"Attribute set of values for the given modem.\nValues can be either strings or integers\n(which will be added to the config file verbatimly)\nor lists thereof\n(which will be translated to multiple\nlines with the same configuration key).\nBoolean values are translated to \"Yes\" or \"No\".\nThe default contains some reasonable\nconfiguration to yield an operational system.\n\nOptions defined here override options in\n<option>commonModemConfig</option> for this modem.\n","example":{"AreaCode":"49","FAXNumber":"123456","LocalCode":"30","LocalIdentifier":"LostInBerlin"},"loc":["services","hylafax","modems","<name>","config"],"readOnly":false,"type":"attribute set of list of string or signed integer convertible to it or boolean convertible to its or string or signed integer convertible to it or boolean convertible to it convertible to its"},"services.hylafax.modems.<name>.name":{"declarations":["nixos/modules/services/networking/hylafax/options.nix"],"description":"Name of modem device,\nwill be searched for in <filename>/dev</filename>.\n","example":"ttyS1","loc":["services","hylafax","modems","<name>","name"],"readOnly":false,"type":"non-empty string"},"services.hylafax.modems.<name>.type":{"declarations":["nixos/modules/services/networking/hylafax/options.nix"],"description":"Name of modem configuration file,\nwill be searched for in <filename>config</filename>\nin the spooling area directory.\n","example":"cirrus","loc":["services","hylafax","modems","<name>","type"],"readOnly":false,"type":"non-empty string"},"services.hylafax.sendmailPath":{"declarations":["nixos/modules/services/networking/hylafax/options.nix"],"description":"Path to <filename>sendmail</filename> program.\nThe default uses the local sendmail wrapper\n(see <option>config.services.mail.sendmailSetuidWrapper</option>),\notherwise the <filename>false</filename>\nbinary to cause an error if used.\n","example":{"_type":"literalExpression","text":"\"${pkgs.postfix}/bin/sendmail\""},"loc":["services","hylafax","sendmailPath"],"readOnly":false,"type":"path"},"services.hylafax.spoolAreaPath":{"declarations":["nixos/modules/services/networking/hylafax/options.nix"],"default":"/var/spool/fax","description":"The spooling area will be created/maintained\nat the location given here.\n","loc":["services","hylafax","spoolAreaPath"],"readOnly":false,"type":"path"},"services.hylafax.spoolExtraInit":{"declarations":["nixos/modules/services/networking/hylafax/options.nix"],"default":"","description":"Additional shell code that is executed within the\nspooling area directory right after its setup.\n","example":"chmod 0755 .  # everyone may read my faxes","loc":["services","hylafax","spoolExtraInit"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.hylafax.userAccessFile":{"declarations":["nixos/modules/services/networking/hylafax/options.nix"],"default":"/etc/hosts.hfaxd","description":"The <filename>hosts.hfaxd</filename>\nfile entry in the spooling area\nwill be symlinked to the location given here.\nThis file must exist and be\nreadable only by the <literal>uucp</literal> user.\nSee hosts.hfaxd(5) for details.\nThis configuration permits access for all users:\n<literal>\n  environment.etc.\"hosts.hfaxd\" = {\n    mode = \"0600\";\n    user = \"uucp\";\n    text = \".*\";\n  };\n</literal>\nNote that host-based access can be controlled with\n<option>config.systemd.sockets.hylafax-hfaxd.listenStreams</option>;\nby default, only 127.0.0.1 is permitted to connect.\n","loc":["services","hylafax","userAccessFile"],"readOnly":false,"type":"path"},"services.jirafeau.adminPasswordSha256":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":"","description":"SHA-256 of the desired administration password. Leave blank/unset for no password.\n","loc":["services","jirafeau","adminPasswordSha256"],"readOnly":false,"type":"string"},"services.jirafeau.dataDir":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":"/var/lib/jirafeau/data/","description":"Location of Jirafeau storage directory.","loc":["services","jirafeau","dataDir"],"readOnly":false,"type":"path"},"services.jirafeau.enable":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":false,"description":"Whether to enable Jirafeau file upload application..","example":true,"loc":["services","jirafeau","enable"],"readOnly":false,"type":"boolean"},"services.jirafeau.extraConfig":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":"","description":"Jirefeau configuration. Refer to <link xlink:href=\"https://gitlab.com/mojo42/Jirafeau/-/blob/4.3.0/lib/config.original.php\"/> for supported\nvalues.\n","example":"$cfg['style'] = 'courgette';\n$cfg['organisation'] = 'ACME';\n","loc":["services","jirafeau","extraConfig"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.jirafeau.hostName":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":"localhost","description":"URL of instance. Must have trailing slash.","loc":["services","jirafeau","hostName"],"readOnly":false,"type":"string"},"services.jirafeau.maxUploadSizeMegabytes":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":0,"description":"Maximum upload size of accepted files.","loc":["services","jirafeau","maxUploadSizeMegabytes"],"readOnly":false,"type":"signed integer"},"services.jirafeau.maxUploadTimeout":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":"30m","description":"Timeout for reading client request bodies and headers. Refer to\n<link xlink:href=\"http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_timeout\"/> and\n<link xlink:href=\"http://nginx.org/en/docs/http/ngx_http_core_module.html#client_header_timeout\"/> for accepted values.\n","loc":["services","jirafeau","maxUploadTimeout"],"readOnly":false,"type":"string"},"services.jirafeau.nginxConfig":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":{},"description":"Extra configuration for the nginx virtual host of Jirafeau.","example":{"_type":"literalExpression","text":"{\n  serverAliases = [ \"wiki.${config.networking.domain}\" ];\n}\n"},"loc":["services","jirafeau","nginxConfig"],"readOnly":false,"type":"submodule"},"services.jirafeau.nginxConfig.acmeFallbackHost":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":null,"description":"Host which to proxy requests to if acme challenge is not found. Useful\nif you want multiple hosts to be able to verify the same domain name.\n","loc":["services","jirafeau","nginxConfig","acmeFallbackHost"],"readOnly":false,"type":"null or string"},"services.jirafeau.nginxConfig.acmeRoot":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":"/var/lib/acme/acme-challenge","description":"Directory for the acme challenge which is PUBLIC, don't put certs or keys in here.\nSet to null to inherit from config.security.acme.\n","loc":["services","jirafeau","nginxConfig","acmeRoot"],"readOnly":false,"type":"null or string"},"services.jirafeau.nginxConfig.addSSL":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":false,"description":"Whether to enable HTTPS in addition to plain HTTP. This will set defaults for\n<literal>listen</literal> to listen on all interfaces on the respective default\nports (80, 443).\n","loc":["services","jirafeau","nginxConfig","addSSL"],"readOnly":false,"type":"boolean"},"services.jirafeau.nginxConfig.basicAuth":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":{},"description":"Basic Auth protection for a vhost.\n\nWARNING: This is implemented to store the password in plain text in the\nNix store.\n","example":{"_type":"literalExpression","text":"{\n  user = \"password\";\n};\n"},"loc":["services","jirafeau","nginxConfig","basicAuth"],"readOnly":false,"type":"attribute set of strings"},"services.jirafeau.nginxConfig.basicAuthFile":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":null,"description":"Basic Auth password file for a vhost.\nCan be created via: <command>htpasswd -c &lt;filename&gt; &lt;username&gt;</command>.\n\nWARNING: The generate file contains the users' passwords in a\nnon-cryptographically-securely hashed way.\n","loc":["services","jirafeau","nginxConfig","basicAuthFile"],"readOnly":false,"type":"null or path"},"services.jirafeau.nginxConfig.default":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":false,"description":"Makes this vhost the default.\n","loc":["services","jirafeau","nginxConfig","default"],"readOnly":false,"type":"boolean"},"services.jirafeau.nginxConfig.enableACME":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":false,"description":"Whether to ask Let's Encrypt to sign a certificate for this vhost.\nAlternately, you can use an existing certificate through <option>useACMEHost</option>.\n","loc":["services","jirafeau","nginxConfig","enableACME"],"readOnly":false,"type":"boolean"},"services.jirafeau.nginxConfig.extraConfig":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":"","description":"These lines go to the end of the vhost verbatim.\n","loc":["services","jirafeau","nginxConfig","extraConfig"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.jirafeau.nginxConfig.forceSSL":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":false,"description":"Whether to add a separate nginx server block that permanently redirects (301)\nall plain HTTP traffic to HTTPS. This will set defaults for\n<literal>listen</literal> to listen on all interfaces on the respective default\nports (80, 443), where the non-SSL listens are used for the redirect vhosts.\n","loc":["services","jirafeau","nginxConfig","forceSSL"],"readOnly":false,"type":"boolean"},"services.jirafeau.nginxConfig.globalRedirect":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":null,"description":"If set, all requests for this host are redirected permanently to\nthe given hostname.\n","example":"newserver.example.org","loc":["services","jirafeau","nginxConfig","globalRedirect"],"readOnly":false,"type":"null or string"},"services.jirafeau.nginxConfig.http2":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":true,"description":"Whether to enable HTTP 2.\nNote that (as of writing) due to nginx's implementation, to disable\nHTTP 2 you have to disable it on all vhosts that use a given\nIP address / port.\nIf there is one server block configured to enable http2,then it is\nenabled for all server blocks on this IP.\nSee https://stackoverflow.com/a/39466948/263061.\n","loc":["services","jirafeau","nginxConfig","http2"],"readOnly":false,"type":"boolean"},"services.jirafeau.nginxConfig.http3":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":false,"description":"Whether to enable HTTP 3.\nThis requires using <literal>pkgs.nginxQuic</literal> package\nwhich can be achieved by setting <literal>services.nginx.package = pkgs.nginxQuic;</literal>.\nNote that HTTP 3 support is experimental and\n*not* yet recommended for production.\nRead more at https://quic.nginx.org/\n","loc":["services","jirafeau","nginxConfig","http3"],"readOnly":false,"type":"boolean"},"services.jirafeau.nginxConfig.kTLS":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":false,"description":"Whether to enable kTLS support.\nImplementing TLS in the kernel (kTLS) improves performance by significantly\nreducing the need for copying operations between user space and the kernel.\nRequired Nginx version 1.21.4 or later.\n","loc":["services","jirafeau","nginxConfig","kTLS"],"readOnly":false,"type":"boolean"},"services.jirafeau.nginxConfig.listen":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":[],"description":"Listen addresses and ports for this virtual host.\nIPv6 addresses must be enclosed in square brackets.\nNote: this option overrides <literal>addSSL</literal>\nand <literal>onlySSL</literal>.\n\nIf you only want to set the addresses manually and not\nthe ports, take a look at <literal>listenAddresses</literal>\n","example":[{"addr":"195.154.1.1","port":443,"ssl":true},{"addr":"192.154.1.1","port":80}],"loc":["services","jirafeau","nginxConfig","listen"],"readOnly":false,"type":"list of submodules"},"services.jirafeau.nginxConfig.listen.*.addr":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"description":"IP address.","loc":["services","jirafeau","nginxConfig","listen","*","addr"],"readOnly":false,"type":"string"},"services.jirafeau.nginxConfig.listen.*.extraParameters":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":[],"description":"Extra parameters of this listen directive.","example":["reuseport","deferred"],"loc":["services","jirafeau","nginxConfig","listen","*","extraParameters"],"readOnly":false,"type":"list of strings"},"services.jirafeau.nginxConfig.listen.*.port":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":80,"description":"Port number.","loc":["services","jirafeau","nginxConfig","listen","*","port"],"readOnly":false,"type":"signed integer"},"services.jirafeau.nginxConfig.listen.*.ssl":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":false,"description":"Enable SSL.","loc":["services","jirafeau","nginxConfig","listen","*","ssl"],"readOnly":false,"type":"boolean"},"services.jirafeau.nginxConfig.listenAddresses":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":[],"description":"Listen addresses for this virtual host.\nCompared to <literal>listen</literal> this only sets the addreses\nand the ports are choosen automatically.\n\nNote: This option overrides <literal>enableIPv6</literal>\n","example":["127.0.0.1","::1"],"loc":["services","jirafeau","nginxConfig","listenAddresses"],"readOnly":false,"type":"list of strings"},"services.jirafeau.nginxConfig.locations":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":{},"description":"Declarative location config","example":{"_type":"literalExpression","text":"{\n  \"/\" = {\n    proxyPass = \"http://localhost:3000\";\n  };\n};\n"},"loc":["services","jirafeau","nginxConfig","locations"],"readOnly":false,"type":"attribute set of submodules"},"services.jirafeau.nginxConfig.locations.<name>.alias":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":null,"description":"Alias directory for requests.\n","example":"/your/alias/directory","loc":["services","jirafeau","nginxConfig","locations","<name>","alias"],"readOnly":false,"type":"null or path"},"services.jirafeau.nginxConfig.locations.<name>.basicAuth":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":{},"description":"Basic Auth protection for a vhost.\n\nWARNING: This is implemented to store the password in plain text in the\nNix store.\n","example":{"_type":"literalExpression","text":"{\n  user = \"password\";\n};\n"},"loc":["services","jirafeau","nginxConfig","locations","<name>","basicAuth"],"readOnly":false,"type":"attribute set of strings"},"services.jirafeau.nginxConfig.locations.<name>.basicAuthFile":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":null,"description":"Basic Auth password file for a vhost.\nCan be created via: <command>htpasswd -c &lt;filename&gt; &lt;username&gt;</command>.\n\nWARNING: The generate file contains the users' passwords in a\nnon-cryptographically-securely hashed way.\n","loc":["services","jirafeau","nginxConfig","locations","<name>","basicAuthFile"],"readOnly":false,"type":"null or path"},"services.jirafeau.nginxConfig.locations.<name>.extraConfig":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":"","description":"These lines go to the end of the location verbatim.\n","loc":["services","jirafeau","nginxConfig","locations","<name>","extraConfig"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.jirafeau.nginxConfig.locations.<name>.fastcgiParams":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":{},"description":"FastCGI parameters to override.  Unlike in the Nginx\nconfiguration file, overriding only some default parameters\nwon't unset the default values for other parameters.\n","loc":["services","jirafeau","nginxConfig","locations","<name>","fastcgiParams"],"readOnly":false,"type":"attribute set of string or paths"},"services.jirafeau.nginxConfig.locations.<name>.index":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":null,"description":"Adds index directive.\n","example":"index.php index.html","loc":["services","jirafeau","nginxConfig","locations","<name>","index"],"readOnly":false,"type":"null or string"},"services.jirafeau.nginxConfig.locations.<name>.priority":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":1000,"description":"Order of this location block in relation to the others in the vhost.\nThe semantics are the same as with `lib.mkOrder`. Smaller values have\na greater priority.\n","loc":["services","jirafeau","nginxConfig","locations","<name>","priority"],"readOnly":false,"type":"signed integer"},"services.jirafeau.nginxConfig.locations.<name>.proxyPass":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":null,"description":"Adds proxy_pass directive and sets recommended proxy headers if\nrecommendedProxySettings is enabled.\n","example":"http://www.example.org/","loc":["services","jirafeau","nginxConfig","locations","<name>","proxyPass"],"readOnly":false,"type":"null or string"},"services.jirafeau.nginxConfig.locations.<name>.proxyWebsockets":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":false,"description":"Whether to support proxying websocket connections with HTTP/1.1.\n","example":true,"loc":["services","jirafeau","nginxConfig","locations","<name>","proxyWebsockets"],"readOnly":false,"type":"boolean"},"services.jirafeau.nginxConfig.locations.<name>.return":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":null,"description":"Adds a return directive, for e.g. redirections.\n","example":"301 http://example.com$request_uri","loc":["services","jirafeau","nginxConfig","locations","<name>","return"],"readOnly":false,"type":"null or string"},"services.jirafeau.nginxConfig.locations.<name>.root":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":null,"description":"Root directory for requests.\n","example":"/your/root/directory","loc":["services","jirafeau","nginxConfig","locations","<name>","root"],"readOnly":false,"type":"null or path"},"services.jirafeau.nginxConfig.locations.<name>.tryFiles":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":null,"description":"Adds try_files directive.\n","example":"$uri =404","loc":["services","jirafeau","nginxConfig","locations","<name>","tryFiles"],"readOnly":false,"type":"null or string"},"services.jirafeau.nginxConfig.onlySSL":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":false,"description":"Whether to enable HTTPS and reject plain HTTP connections. This will set\ndefaults for <literal>listen</literal> to listen on all interfaces on port 443.\n","loc":["services","jirafeau","nginxConfig","onlySSL"],"readOnly":false,"type":"boolean"},"services.jirafeau.nginxConfig.rejectSSL":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":false,"description":"Whether to listen for and reject all HTTPS connections to this vhost. Useful in\n<link linkend=\"opt-services.nginx.virtualHosts._name_.default\">default</link>\nserver blocks to avoid serving the certificate for another vhost. Uses the\n<literal>ssl_reject_handshake</literal> directive available in nginx versions\n1.19.4 and above.\n","loc":["services","jirafeau","nginxConfig","rejectSSL"],"readOnly":false,"type":"boolean"},"services.jirafeau.nginxConfig.root":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":null,"description":"The path of the web root directory.\n","example":"/data/webserver/docs","loc":["services","jirafeau","nginxConfig","root"],"readOnly":false,"type":"null or path"},"services.jirafeau.nginxConfig.serverAliases":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":[],"description":"Additional names of virtual hosts served by this virtual host configuration.\n","example":["www.example.org","example.org"],"loc":["services","jirafeau","nginxConfig","serverAliases"],"readOnly":false,"type":"list of strings"},"services.jirafeau.nginxConfig.serverName":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":null,"description":"Name of this virtual host. Defaults to attribute name in virtualHosts.\n","example":"example.org","loc":["services","jirafeau","nginxConfig","serverName"],"readOnly":false,"type":"null or string"},"services.jirafeau.nginxConfig.sslCertificate":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"description":"Path to server SSL certificate.","example":"/var/host.cert","loc":["services","jirafeau","nginxConfig","sslCertificate"],"readOnly":false,"type":"path"},"services.jirafeau.nginxConfig.sslCertificateKey":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"description":"Path to server SSL certificate key.","example":"/var/host.key","loc":["services","jirafeau","nginxConfig","sslCertificateKey"],"readOnly":false,"type":"path"},"services.jirafeau.nginxConfig.sslTrustedCertificate":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":null,"description":"Path to root SSL certificate for stapling and client certificates.","example":{"_type":"literalExpression","text":"\"${pkgs.cacert}/etc/ssl/certs/ca-bundle.crt\""},"loc":["services","jirafeau","nginxConfig","sslTrustedCertificate"],"readOnly":false,"type":"null or path"},"services.jirafeau.nginxConfig.useACMEHost":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":null,"description":"A host of an existing Let's Encrypt certificate to use.\nThis is useful if you have many subdomains and want to avoid hitting the\n<link xlink:href=\"https://letsencrypt.org/docs/rate-limits/\">rate limit</link>.\nAlternately, you can generate a certificate through <option>enableACME</option>.\n<emphasis>Note that this option does not create any certificates, nor it does add subdomains to existing ones – you will need to create them manually using  <xref linkend=\"opt-security.acme.certs\"/>.</emphasis>\n","loc":["services","jirafeau","nginxConfig","useACMEHost"],"readOnly":false,"type":"null or string"},"services.jirafeau.package":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":{"_type":"literalExpression","text":"pkgs.jirafeau"},"description":"Jirafeau package to use","loc":["services","jirafeau","package"],"readOnly":false,"type":"package"},"services.jirafeau.poolConfig":{"declarations":["nixos/modules/services/web-apps/jirafeau.nix"],"default":{"pm":"dynamic","pm.max_children":32,"pm.max_requests":500,"pm.max_spare_servers":4,"pm.min_spare_servers":2,"pm.start_servers":2},"description":"Options for Jirafeau PHP pool. See documentation on <literal>php-fpm.conf</literal> for\ndetails on configuration directives.\n","loc":["services","jirafeau","poolConfig"],"readOnly":false,"type":"attribute set of string or signed integer or booleans"},"services.kea.ctrl-agent":{"declarations":["nixos/modules/services/networking/kea.nix"],"default":{},"description":"Kea Control Agent configuration\n","loc":["services","kea","ctrl-agent"],"readOnly":false,"type":"submodule"},"services.kea.ctrl-agent.enable":{"declarations":["nixos/modules/services/networking/kea.nix"],"default":false,"description":"Whether to enable Kea Control Agent.","example":true,"loc":["services","kea","ctrl-agent","enable"],"readOnly":false,"type":"boolean"},"services.kea.ctrl-agent.extraArgs":{"declarations":["nixos/modules/services/networking/kea.nix"],"default":[],"description":"List of additonal arguments to pass to the daemon.\n","loc":["services","kea","ctrl-agent","extraArgs"],"readOnly":false,"type":"list of strings"},"services.kea.ctrl-agent.settings":{"declarations":["nixos/modules/services/networking/kea.nix"],"default":null,"description":"Kea Control Agent configuration as an attribute set, see <link xlink:href=\"https://kea.readthedocs.io/en/kea-2.0.2/arm/agent.html\"/>.\n","loc":["services","kea","ctrl-agent","settings"],"readOnly":false,"type":"JSON value"},"services.kea.dhcp-ddns":{"declarations":["nixos/modules/services/networking/kea.nix"],"default":{},"description":"Kea DHCP-DDNS configuration\n","loc":["services","kea","dhcp-ddns"],"readOnly":false,"type":"submodule"},"services.kea.dhcp-ddns.enable":{"declarations":["nixos/modules/services/networking/kea.nix"],"default":false,"description":"Whether to enable Kea DDNS server.","example":true,"loc":["services","kea","dhcp-ddns","enable"],"readOnly":false,"type":"boolean"},"services.kea.dhcp-ddns.extraArgs":{"declarations":["nixos/modules/services/networking/kea.nix"],"default":[],"description":"List of additonal arguments to pass to the daemon.\n","loc":["services","kea","dhcp-ddns","extraArgs"],"readOnly":false,"type":"list of strings"},"services.kea.dhcp-ddns.settings":{"declarations":["nixos/modules/services/networking/kea.nix"],"default":null,"description":"Kea DHCP-DDNS configuration as an attribute set, see <link xlink:href=\"https://kea.readthedocs.io/en/kea-2.0.2/arm/ddns.html\"/>.\n","example":{"dns-server-timeout":100,"forward-ddns":{"ddns-domains":[]},"ip-address":"127.0.0.1","ncr-format":"JSON","ncr-protocol":"UDP","port":53001,"reverse-ddns":{"ddns-domains":[]},"tsig-keys":[]},"loc":["services","kea","dhcp-ddns","settings"],"readOnly":false,"type":"JSON value"},"services.kea.dhcp4":{"declarations":["nixos/modules/services/networking/kea.nix"],"default":{},"description":"DHCP4 Server configuration\n","loc":["services","kea","dhcp4"],"readOnly":false,"type":"submodule"},"services.kea.dhcp4.enable":{"declarations":["nixos/modules/services/networking/kea.nix"],"default":false,"description":"Whether to enable Kea DHCP4 server.","example":true,"loc":["services","kea","dhcp4","enable"],"readOnly":false,"type":"boolean"},"services.kea.dhcp4.extraArgs":{"declarations":["nixos/modules/services/networking/kea.nix"],"default":[],"description":"List of additonal arguments to pass to the daemon.\n","loc":["services","kea","dhcp4","extraArgs"],"readOnly":false,"type":"list of strings"},"services.kea.dhcp4.settings":{"declarations":["nixos/modules/services/networking/kea.nix"],"default":null,"description":"Kea DHCP4 configuration as an attribute set, see <link xlink:href=\"https://kea.readthedocs.io/en/kea-2.0.2/arm/dhcp4-srv.html\"/>.\n","example":{"interfaces-config":{"interfaces":["eth0"]},"lease-database":{"name":"/var/lib/kea/dhcp4.leases","persist":true,"type":"memfile"},"rebind-timer":2000,"renew-timer":1000,"subnet4":[{"pools":[{"pool":"192.0.2.100 - 192.0.2.240"}],"subnet":"192.0.2.0/24"}],"valid-lifetime":4000},"loc":["services","kea","dhcp4","settings"],"readOnly":false,"type":"JSON value"},"services.kea.dhcp6":{"declarations":["nixos/modules/services/networking/kea.nix"],"default":{},"description":"DHCP6 Server configuration\n","loc":["services","kea","dhcp6"],"readOnly":false,"type":"submodule"},"services.kea.dhcp6.enable":{"declarations":["nixos/modules/services/networking/kea.nix"],"default":false,"description":"Whether to enable Kea DHCP6 server.","example":true,"loc":["services","kea","dhcp6","enable"],"readOnly":false,"type":"boolean"},"services.kea.dhcp6.extraArgs":{"declarations":["nixos/modules/services/networking/kea.nix"],"default":[],"description":"List of additonal arguments to pass to the daemon.\n","loc":["services","kea","dhcp6","extraArgs"],"readOnly":false,"type":"list of strings"},"services.kea.dhcp6.settings":{"declarations":["nixos/modules/services/networking/kea.nix"],"default":null,"description":"Kea DHCP6 configuration as an attribute set, see <link xlink:href=\"https://kea.readthedocs.io/en/kea-2.0.2/arm/dhcp6-srv.html\"/>.\n","example":{"interfaces-config":{"interfaces":["eth0"]},"lease-database":{"name":"/var/lib/kea/dhcp6.leases","persist":true,"type":"memfile"},"preferred-lifetime":3000,"rebind-timer":2000,"renew-timer":1000,"subnet6":[{"pools":[{"pool":"2001:db8:1::1-2001:db8:1::ffff"}],"subnet":"2001:db8:1::/64"}],"valid-lifetime":4000},"loc":["services","kea","dhcp6","settings"],"readOnly":false,"type":"JSON value"},"services.kubernetes.addonManager.addons":{"declarations":["nixos/modules/services/cluster/kubernetes/addon-manager.nix"],"default":{},"description":"Kubernetes addons (any kind of Kubernetes resource can be an addon).","example":{"_type":"literalExpression","text":"{\n  \"my-service\" = {\n    \"apiVersion\" = \"v1\";\n    \"kind\" = \"Service\";\n    \"metadata\" = {\n      \"name\" = \"my-service\";\n      \"namespace\" = \"default\";\n    };\n    \"spec\" = { ... };\n  };\n}\n// import <nixpkgs/nixos/modules/services/cluster/kubernetes/dns.nix> { cfg = config.services.kubernetes; };\n"},"loc":["services","kubernetes","addonManager","addons"],"readOnly":false,"type":"attribute set of attribute set or list of attribute setss"},"services.kubernetes.addonManager.bootstrapAddons":{"declarations":["nixos/modules/services/cluster/kubernetes/addon-manager.nix"],"default":{},"description":"Bootstrap addons are like regular addons, but they are applied with cluster-admin rigths.\nThey are applied at addon-manager startup only.\n","example":{"_type":"literalExpression","text":"{\n  \"my-service\" = {\n    \"apiVersion\" = \"v1\";\n    \"kind\" = \"Service\";\n    \"metadata\" = {\n      \"name\" = \"my-service\";\n      \"namespace\" = \"default\";\n    };\n    \"spec\" = { ... };\n  };\n}\n"},"loc":["services","kubernetes","addonManager","bootstrapAddons"],"readOnly":false,"type":"attribute set of attribute sets"},"services.kubernetes.addonManager.enable":{"declarations":["nixos/modules/services/cluster/kubernetes/addon-manager.nix"],"default":false,"description":"Whether to enable Kubernetes addon manager..","example":true,"loc":["services","kubernetes","addonManager","enable"],"readOnly":false,"type":"boolean"},"services.kubernetes.addons.dns.clusterDomain":{"declarations":["nixos/modules/services/cluster/kubernetes/addons/dns.nix"],"default":"cluster.local","description":"Dns cluster domain","loc":["services","kubernetes","addons","dns","clusterDomain"],"readOnly":false,"type":"string"},"services.kubernetes.addons.dns.clusterIp":{"declarations":["nixos/modules/services/cluster/kubernetes/addons/dns.nix"],"default":{"_type":"literalDocBook","text":"The <literal>x.y.z.254</literal> IP of\n<literal>config.services.kubernetes.apiserver.serviceClusterIpRange</literal>.\n"},"description":"Dns addon clusterIP","loc":["services","kubernetes","addons","dns","clusterIp"],"readOnly":false,"type":"string"},"services.kubernetes.addons.dns.coredns":{"declarations":["nixos/modules/services/cluster/kubernetes/addons/dns.nix"],"default":{"finalImageTag":"1.7.1","imageDigest":"sha256:4a6e0769130686518325b21b0c1d0688b54e7c79244d48e1b15634e98e40c6ef","imageName":"coredns/coredns","sha256":"02r440xcdsgi137k5lmmvp0z5w5fmk8g9mysq5pnysq1wl8sj6mw"},"description":"Docker image to seed for the CoreDNS container.","loc":["services","kubernetes","addons","dns","coredns"],"readOnly":false,"type":"attribute set"},"services.kubernetes.addons.dns.corefile":{"declarations":["nixos/modules/services/cluster/kubernetes/addons/dns.nix"],"default":{"_type":"literalExpression","text":"''\n  .:10053 {\n    errors\n    health :10054\n    kubernetes ${config.services.kubernetes.addons.dns.clusterDomain} in-addr.arpa ip6.arpa {\n      pods insecure\n      fallthrough in-addr.arpa ip6.arpa\n    }\n    prometheus :10055\n    forward . /etc/resolv.conf\n    cache 30\n    loop\n    reload\n    loadbalance\n  }\n''\n"},"description":"Custom coredns corefile configuration.\n\nSee: <link xlink:href=\"https://coredns.io/manual/toc/#configuration\"/>.\n","loc":["services","kubernetes","addons","dns","corefile"],"readOnly":false,"type":"string"},"services.kubernetes.addons.dns.enable":{"declarations":["nixos/modules/services/cluster/kubernetes/addons/dns.nix"],"default":false,"description":"Whether to enable kubernetes dns addon.","example":true,"loc":["services","kubernetes","addons","dns","enable"],"readOnly":false,"type":"boolean"},"services.kubernetes.addons.dns.reconcileMode":{"declarations":["nixos/modules/services/cluster/kubernetes/addons/dns.nix"],"default":"Reconcile","description":"Controls the addon manager reconciliation mode for the DNS addon.\n\nSetting reconcile mode to EnsureExists makes it possible to tailor DNS behavior by editing the coredns ConfigMap.\n\nSee: <link xlink:href=\"https://github.com/kubernetes/kubernetes/blob/master/cluster/addons/addon-manager/README.md\"/>.\n","loc":["services","kubernetes","addons","dns","reconcileMode"],"readOnly":false,"type":"one of \"Reconcile\", \"EnsureExists\""},"services.kubernetes.addons.dns.replicas":{"declarations":["nixos/modules/services/cluster/kubernetes/addons/dns.nix"],"default":2,"description":"Number of DNS pod replicas to deploy in the cluster.","loc":["services","kubernetes","addons","dns","replicas"],"readOnly":false,"type":"signed integer"},"services.kubernetes.apiserver.advertiseAddress":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":null,"description":"Kubernetes apiserver IP address on which to advertise the apiserver\nto members of the cluster. This address must be reachable by the rest\nof the cluster.\n","loc":["services","kubernetes","apiserver","advertiseAddress"],"readOnly":false,"type":"null or string"},"services.kubernetes.apiserver.allowPrivileged":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":false,"description":"Whether to allow privileged containers on Kubernetes.","loc":["services","kubernetes","apiserver","allowPrivileged"],"readOnly":false,"type":"boolean"},"services.kubernetes.apiserver.apiAudiences":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":"api,https://kubernetes.default.svc","description":"Kubernetes apiserver ServiceAccount issuer.\n","loc":["services","kubernetes","apiserver","apiAudiences"],"readOnly":false,"type":"string"},"services.kubernetes.apiserver.authorizationMode":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":["RBAC","Node"],"description":"Kubernetes apiserver authorization mode (AlwaysAllow/AlwaysDeny/ABAC/Webhook/RBAC/Node). See\n<link xlink:href=\"https://kubernetes.io/docs/reference/access-authn-authz/authorization/\"/>\n","loc":["services","kubernetes","apiserver","authorizationMode"],"readOnly":false,"type":"list of one of \"AlwaysAllow\", \"AlwaysDeny\", \"ABAC\", \"Webhook\", \"RBAC\", \"Node\"s"},"services.kubernetes.apiserver.authorizationPolicy":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":[],"description":"Kubernetes apiserver authorization policy file. See\n<link xlink:href=\"https://kubernetes.io/docs/reference/access-authn-authz/authorization/\"/>\n","loc":["services","kubernetes","apiserver","authorizationPolicy"],"readOnly":false,"type":"list of attribute sets"},"services.kubernetes.apiserver.basicAuthFile":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":null,"description":"Kubernetes apiserver basic authentication file. See\n<link xlink:href=\"https://kubernetes.io/docs/reference/access-authn-authz/authentication\"/>\n","loc":["services","kubernetes","apiserver","basicAuthFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.apiserver.bindAddress":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":"0.0.0.0","description":"The IP address on which to listen for the --secure-port port.\nThe associated interface(s) must be reachable by the rest\nof the cluster, and by CLI/web clients.\n","loc":["services","kubernetes","apiserver","bindAddress"],"readOnly":false,"type":"string"},"services.kubernetes.apiserver.clientCaFile":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":{"_type":"literalExpression","text":"config.services.kubernetes.caFile"},"description":"Kubernetes apiserver CA file for client auth.","loc":["services","kubernetes","apiserver","clientCaFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.apiserver.disableAdmissionPlugins":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":[],"description":"Kubernetes admission control plugins to disable. See\n<link xlink:href=\"https://kubernetes.io/docs/admin/admission-controllers/\"/>\n","loc":["services","kubernetes","apiserver","disableAdmissionPlugins"],"readOnly":false,"type":"list of strings"},"services.kubernetes.apiserver.enable":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":false,"description":"Whether to enable Kubernetes apiserver.","example":true,"loc":["services","kubernetes","apiserver","enable"],"readOnly":false,"type":"boolean"},"services.kubernetes.apiserver.enableAdmissionPlugins":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":["NamespaceLifecycle","LimitRanger","ServiceAccount","ResourceQuota","DefaultStorageClass","DefaultTolerationSeconds","NodeRestriction"],"description":"Kubernetes admission control plugins to enable. See\n<link xlink:href=\"https://kubernetes.io/docs/admin/admission-controllers/\"/>\n","example":["NamespaceLifecycle","NamespaceExists","LimitRanger","SecurityContextDeny","ServiceAccount","ResourceQuota","PodSecurityPolicy","NodeRestriction","DefaultStorageClass"],"loc":["services","kubernetes","apiserver","enableAdmissionPlugins"],"readOnly":false,"type":"list of strings"},"services.kubernetes.apiserver.etcd.caFile":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":{"_type":"literalExpression","text":"config.services.kubernetes.caFile"},"description":"Etcd ca file.","loc":["services","kubernetes","apiserver","etcd","caFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.apiserver.etcd.certFile":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":null,"description":"Etcd cert file.","loc":["services","kubernetes","apiserver","etcd","certFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.apiserver.etcd.keyFile":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":null,"description":"Etcd key file.","loc":["services","kubernetes","apiserver","etcd","keyFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.apiserver.etcd.servers":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":["http://127.0.0.1:2379"],"description":"List of etcd servers.","loc":["services","kubernetes","apiserver","etcd","servers"],"readOnly":false,"type":"list of strings"},"services.kubernetes.apiserver.extraOpts":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":"","description":"Kubernetes apiserver extra command line options.","loc":["services","kubernetes","apiserver","extraOpts"],"readOnly":false,"type":"strings concatenated with \" \""},"services.kubernetes.apiserver.extraSANs":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":[],"description":"Extra x509 Subject Alternative Names to be added to the kubernetes apiserver tls cert.","loc":["services","kubernetes","apiserver","extraSANs"],"readOnly":false,"type":"list of strings"},"services.kubernetes.apiserver.featureGates":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":{"_type":"literalExpression","text":"config.services.kubernetes.featureGates"},"description":"List set of feature gates","loc":["services","kubernetes","apiserver","featureGates"],"readOnly":false,"type":"list of strings"},"services.kubernetes.apiserver.insecureBindAddress":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":"127.0.0.1","description":"The IP address on which to serve the --insecure-port.","loc":["services","kubernetes","apiserver","insecureBindAddress"],"readOnly":false,"type":"string"},"services.kubernetes.apiserver.insecurePort":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":0,"description":"Kubernetes apiserver insecure listening port. (0 = disabled)","loc":["services","kubernetes","apiserver","insecurePort"],"readOnly":false,"type":"signed integer"},"services.kubernetes.apiserver.kubeletClientCaFile":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":{"_type":"literalExpression","text":"config.services.kubernetes.caFile"},"description":"Path to a cert file for connecting to kubelet.","loc":["services","kubernetes","apiserver","kubeletClientCaFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.apiserver.kubeletClientCertFile":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":null,"description":"Client certificate to use for connections to kubelet.","loc":["services","kubernetes","apiserver","kubeletClientCertFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.apiserver.kubeletClientKeyFile":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":null,"description":"Key to use for connections to kubelet.","loc":["services","kubernetes","apiserver","kubeletClientKeyFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.apiserver.preferredAddressTypes":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":null,"description":"List of the preferred NodeAddressTypes to use for kubelet connections.","loc":["services","kubernetes","apiserver","preferredAddressTypes"],"readOnly":false,"type":"null or string"},"services.kubernetes.apiserver.proxyClientCertFile":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":null,"description":"Client certificate to use for connections to proxy.","loc":["services","kubernetes","apiserver","proxyClientCertFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.apiserver.proxyClientKeyFile":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":null,"description":"Key to use for connections to proxy.","loc":["services","kubernetes","apiserver","proxyClientKeyFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.apiserver.runtimeConfig":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":"authentication.k8s.io/v1beta1=true","description":"Api runtime configuration. See\n<link xlink:href=\"https://kubernetes.io/docs/tasks/administer-cluster/cluster-management/\"/>\n","example":"api/all=false,api/v1=true","loc":["services","kubernetes","apiserver","runtimeConfig"],"readOnly":false,"type":"string"},"services.kubernetes.apiserver.securePort":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":6443,"description":"Kubernetes apiserver secure port.","loc":["services","kubernetes","apiserver","securePort"],"readOnly":false,"type":"signed integer"},"services.kubernetes.apiserver.serviceAccountIssuer":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":"https://kubernetes.default.svc","description":"Kubernetes apiserver ServiceAccount issuer.\n","loc":["services","kubernetes","apiserver","serviceAccountIssuer"],"readOnly":false,"type":"string"},"services.kubernetes.apiserver.serviceAccountKeyFile":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"description":"File containing PEM-encoded x509 RSA or ECDSA private or public keys,\nused to verify ServiceAccount tokens. The specified file can contain\nmultiple keys, and the flag can be specified multiple times with\ndifferent files. If unspecified, --tls-private-key-file is used.\nMust be specified when --service-account-signing-key is provided\n","loc":["services","kubernetes","apiserver","serviceAccountKeyFile"],"readOnly":false,"type":"path"},"services.kubernetes.apiserver.serviceAccountSigningKeyFile":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"description":"Path to the file that contains the current private key of the service\naccount token issuer. The issuer will sign issued ID tokens with this\nprivate key.\n","loc":["services","kubernetes","apiserver","serviceAccountSigningKeyFile"],"readOnly":false,"type":"path"},"services.kubernetes.apiserver.serviceClusterIpRange":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":"10.0.0.0/24","description":"A CIDR notation IP range from which to assign service cluster IPs.\nThis must not overlap with any IP ranges assigned to nodes for pods.\n","loc":["services","kubernetes","apiserver","serviceClusterIpRange"],"readOnly":false,"type":"string"},"services.kubernetes.apiserver.storageBackend":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":"etcd3","description":"Kubernetes apiserver storage backend.\n","loc":["services","kubernetes","apiserver","storageBackend"],"readOnly":false,"type":"one of \"etcd2\", \"etcd3\""},"services.kubernetes.apiserver.tlsCertFile":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":null,"description":"Kubernetes apiserver certificate file.","loc":["services","kubernetes","apiserver","tlsCertFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.apiserver.tlsKeyFile":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":null,"description":"Kubernetes apiserver private key file.","loc":["services","kubernetes","apiserver","tlsKeyFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.apiserver.tokenAuthFile":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":null,"description":"Kubernetes apiserver token authentication file. See\n<link xlink:href=\"https://kubernetes.io/docs/reference/access-authn-authz/authentication\"/>\n","loc":["services","kubernetes","apiserver","tokenAuthFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.apiserver.verbosity":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":null,"description":"Optional glog verbosity level for logging statements. See\n<link xlink:href=\"https://github.com/kubernetes/community/blob/master/contributors/devel/logging.md\"/>\n","loc":["services","kubernetes","apiserver","verbosity"],"readOnly":false,"type":"null or signed integer"},"services.kubernetes.apiserver.webhookConfig":{"declarations":["nixos/modules/services/cluster/kubernetes/apiserver.nix"],"default":null,"description":"Kubernetes apiserver Webhook config file. It uses the kubeconfig file format.\nSee <link xlink:href=\"https://kubernetes.io/docs/reference/access-authn-authz/webhook/\"/>\n","loc":["services","kubernetes","apiserver","webhookConfig"],"readOnly":false,"type":"null or path"},"services.kubernetes.apiserverAddress":{"declarations":["nixos/modules/services/cluster/kubernetes/default.nix"],"description":"Clusterwide accessible address for the kubernetes apiserver,\nincluding protocol and optional port.\n","example":"https://kubernetes-apiserver.example.com:6443","loc":["services","kubernetes","apiserverAddress"],"readOnly":false,"type":"string"},"services.kubernetes.caFile":{"declarations":["nixos/modules/services/cluster/kubernetes/default.nix"],"default":null,"description":"Default kubernetes certificate authority","loc":["services","kubernetes","caFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.clusterCidr":{"declarations":["nixos/modules/services/cluster/kubernetes/default.nix"],"default":"10.1.0.0/16","description":"Kubernetes controller manager and proxy CIDR Range for Pods in cluster.","loc":["services","kubernetes","clusterCidr"],"readOnly":false,"type":"null or string"},"services.kubernetes.controllerManager.allocateNodeCIDRs":{"declarations":["nixos/modules/services/cluster/kubernetes/controller-manager.nix"],"default":true,"description":"Whether to automatically allocate CIDR ranges for cluster nodes.","loc":["services","kubernetes","controllerManager","allocateNodeCIDRs"],"readOnly":false,"type":"boolean"},"services.kubernetes.controllerManager.bindAddress":{"declarations":["nixos/modules/services/cluster/kubernetes/controller-manager.nix"],"default":"127.0.0.1","description":"Kubernetes controller manager listening address.","loc":["services","kubernetes","controllerManager","bindAddress"],"readOnly":false,"type":"string"},"services.kubernetes.controllerManager.clusterCidr":{"declarations":["nixos/modules/services/cluster/kubernetes/controller-manager.nix"],"default":{"_type":"literalExpression","text":"config.services.kubernetes.clusterCidr"},"description":"Kubernetes CIDR Range for Pods in cluster.","loc":["services","kubernetes","controllerManager","clusterCidr"],"readOnly":false,"type":"string"},"services.kubernetes.controllerManager.enable":{"declarations":["nixos/modules/services/cluster/kubernetes/controller-manager.nix"],"default":false,"description":"Whether to enable Kubernetes controller manager.","example":true,"loc":["services","kubernetes","controllerManager","enable"],"readOnly":false,"type":"boolean"},"services.kubernetes.controllerManager.extraOpts":{"declarations":["nixos/modules/services/cluster/kubernetes/controller-manager.nix"],"default":"","description":"Kubernetes controller manager extra command line options.","loc":["services","kubernetes","controllerManager","extraOpts"],"readOnly":false,"type":"strings concatenated with \" \""},"services.kubernetes.controllerManager.featureGates":{"declarations":["nixos/modules/services/cluster/kubernetes/controller-manager.nix"],"default":{"_type":"literalExpression","text":"config.services.kubernetes.featureGates"},"description":"List set of feature gates","loc":["services","kubernetes","controllerManager","featureGates"],"readOnly":false,"type":"list of strings"},"services.kubernetes.controllerManager.insecurePort":{"declarations":["nixos/modules/services/cluster/kubernetes/controller-manager.nix"],"default":0,"description":"Kubernetes controller manager insecure listening port.","loc":["services","kubernetes","controllerManager","insecurePort"],"readOnly":false,"type":"signed integer"},"services.kubernetes.controllerManager.kubeconfig.caFile":{"declarations":["nixos/modules/services/cluster/kubernetes/controller-manager.nix"],"default":{"_type":"literalExpression","text":"config.services.kubernetes.caFile"},"description":"Kubernetes controller manager certificate authority file used to connect to kube-apiserver.","loc":["services","kubernetes","controllerManager","kubeconfig","caFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.controllerManager.kubeconfig.certFile":{"declarations":["nixos/modules/services/cluster/kubernetes/controller-manager.nix"],"default":null,"description":"Kubernetes controller manager client certificate file used to connect to kube-apiserver.","loc":["services","kubernetes","controllerManager","kubeconfig","certFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.controllerManager.kubeconfig.keyFile":{"declarations":["nixos/modules/services/cluster/kubernetes/controller-manager.nix"],"default":null,"description":"Kubernetes controller manager client key file used to connect to kube-apiserver.","loc":["services","kubernetes","controllerManager","kubeconfig","keyFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.controllerManager.kubeconfig.server":{"declarations":["nixos/modules/services/cluster/kubernetes/controller-manager.nix"],"description":"Kubernetes controller manager kube-apiserver server address.","loc":["services","kubernetes","controllerManager","kubeconfig","server"],"readOnly":false,"type":"string"},"services.kubernetes.controllerManager.leaderElect":{"declarations":["nixos/modules/services/cluster/kubernetes/controller-manager.nix"],"default":true,"description":"Whether to start leader election before executing main loop.","loc":["services","kubernetes","controllerManager","leaderElect"],"readOnly":false,"type":"boolean"},"services.kubernetes.controllerManager.rootCaFile":{"declarations":["nixos/modules/services/cluster/kubernetes/controller-manager.nix"],"default":{"_type":"literalExpression","text":"config.services.kubernetes.caFile"},"description":"Kubernetes controller manager certificate authority file included in\nservice account's token secret.\n","loc":["services","kubernetes","controllerManager","rootCaFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.controllerManager.securePort":{"declarations":["nixos/modules/services/cluster/kubernetes/controller-manager.nix"],"default":10252,"description":"Kubernetes controller manager secure listening port.","loc":["services","kubernetes","controllerManager","securePort"],"readOnly":false,"type":"signed integer"},"services.kubernetes.controllerManager.serviceAccountKeyFile":{"declarations":["nixos/modules/services/cluster/kubernetes/controller-manager.nix"],"default":null,"description":"Kubernetes controller manager PEM-encoded private RSA key file used to\nsign service account tokens\n","loc":["services","kubernetes","controllerManager","serviceAccountKeyFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.controllerManager.tlsCertFile":{"declarations":["nixos/modules/services/cluster/kubernetes/controller-manager.nix"],"default":null,"description":"Kubernetes controller-manager certificate file.","loc":["services","kubernetes","controllerManager","tlsCertFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.controllerManager.tlsKeyFile":{"declarations":["nixos/modules/services/cluster/kubernetes/controller-manager.nix"],"default":null,"description":"Kubernetes controller-manager private key file.","loc":["services","kubernetes","controllerManager","tlsKeyFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.controllerManager.verbosity":{"declarations":["nixos/modules/services/cluster/kubernetes/controller-manager.nix"],"default":null,"description":"Optional glog verbosity level for logging statements. See\n<link xlink:href=\"https://github.com/kubernetes/community/blob/master/contributors/devel/logging.md\"/>\n","loc":["services","kubernetes","controllerManager","verbosity"],"readOnly":false,"type":"null or signed integer"},"services.kubernetes.dataDir":{"declarations":["nixos/modules/services/cluster/kubernetes/default.nix"],"default":"/var/lib/kubernetes","description":"Kubernetes root directory for managing kubelet files.","loc":["services","kubernetes","dataDir"],"readOnly":false,"type":"path"},"services.kubernetes.easyCerts":{"declarations":["nixos/modules/services/cluster/kubernetes/default.nix"],"default":false,"description":"Automatically setup x509 certificates and keys for the entire cluster.","loc":["services","kubernetes","easyCerts"],"readOnly":false,"type":"boolean"},"services.kubernetes.featureGates":{"declarations":["nixos/modules/services/cluster/kubernetes/default.nix"],"default":[],"description":"List set of feature gates.","loc":["services","kubernetes","featureGates"],"readOnly":false,"type":"list of strings"},"services.kubernetes.flannel.enable":{"declarations":["nixos/modules/services/cluster/kubernetes/flannel.nix"],"default":false,"description":"Whether to enable enable flannel networking.","example":true,"loc":["services","kubernetes","flannel","enable"],"readOnly":false,"type":"boolean"},"services.kubernetes.kubeconfig.caFile":{"declarations":["nixos/modules/services/cluster/kubernetes/default.nix"],"default":{"_type":"literalExpression","text":"config.services.kubernetes.caFile"},"description":"Default kubeconfig certificate authority file used to connect to kube-apiserver.","loc":["services","kubernetes","kubeconfig","caFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.kubeconfig.certFile":{"declarations":["nixos/modules/services/cluster/kubernetes/default.nix"],"default":null,"description":"Default kubeconfig client certificate file used to connect to kube-apiserver.","loc":["services","kubernetes","kubeconfig","certFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.kubeconfig.keyFile":{"declarations":["nixos/modules/services/cluster/kubernetes/default.nix"],"default":null,"description":"Default kubeconfig client key file used to connect to kube-apiserver.","loc":["services","kubernetes","kubeconfig","keyFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.kubeconfig.server":{"declarations":["nixos/modules/services/cluster/kubernetes/default.nix"],"description":"Default kubeconfig kube-apiserver server address.","loc":["services","kubernetes","kubeconfig","server"],"readOnly":false,"type":"string"},"services.kubernetes.kubelet.address":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":"0.0.0.0","description":"Kubernetes kubelet info server listening address.","loc":["services","kubernetes","kubelet","address"],"readOnly":false,"type":"string"},"services.kubernetes.kubelet.clientCaFile":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":{"_type":"literalExpression","text":"config.services.kubernetes.caFile"},"description":"Kubernetes apiserver CA file for client authentication.","loc":["services","kubernetes","kubelet","clientCaFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.kubelet.clusterDns":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":"10.1.0.1","description":"Use alternative DNS.","loc":["services","kubernetes","kubelet","clusterDns"],"readOnly":false,"type":"string"},"services.kubernetes.kubelet.clusterDomain":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":{"_type":"literalExpression","text":"config.services.kubernetes.addons.dns.clusterDomain"},"description":"Use alternative domain.","loc":["services","kubernetes","kubelet","clusterDomain"],"readOnly":false,"type":"string"},"services.kubernetes.kubelet.cni.config":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":[],"description":"Kubernetes CNI configuration.","example":{"_type":"literalExpression","text":"[{\n  \"cniVersion\": \"0.3.1\",\n  \"name\": \"mynet\",\n  \"type\": \"bridge\",\n  \"bridge\": \"cni0\",\n  \"isGateway\": true,\n  \"ipMasq\": true,\n  \"ipam\": {\n      \"type\": \"host-local\",\n      \"subnet\": \"10.22.0.0/16\",\n      \"routes\": [\n          { \"dst\": \"0.0.0.0/0\" }\n      ]\n  }\n} {\n  \"cniVersion\": \"0.3.1\",\n  \"type\": \"loopback\"\n}]\n"},"loc":["services","kubernetes","kubelet","cni","config"],"readOnly":false,"type":"list of attribute sets"},"services.kubernetes.kubelet.cni.configDir":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":null,"description":"Path to Kubernetes CNI configuration directory.","loc":["services","kubernetes","kubelet","cni","configDir"],"readOnly":false,"type":"null or path"},"services.kubernetes.kubelet.cni.packages":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":[],"description":"List of network plugin packages to install.","loc":["services","kubernetes","kubelet","cni","packages"],"readOnly":false,"type":"list of packages"},"services.kubernetes.kubelet.containerRuntime":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":"remote","description":"Which container runtime type to use","loc":["services","kubernetes","kubelet","containerRuntime"],"readOnly":false,"type":"one of \"docker\", \"remote\""},"services.kubernetes.kubelet.containerRuntimeEndpoint":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":"unix:///run/containerd/containerd.sock","description":"Endpoint at which to find the container runtime api interface/socket","loc":["services","kubernetes","kubelet","containerRuntimeEndpoint"],"readOnly":false,"type":"string"},"services.kubernetes.kubelet.enable":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":false,"description":"Whether to enable Kubernetes kubelet..","example":true,"loc":["services","kubernetes","kubelet","enable"],"readOnly":false,"type":"boolean"},"services.kubernetes.kubelet.extraOpts":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":"","description":"Kubernetes kubelet extra command line options.","loc":["services","kubernetes","kubelet","extraOpts"],"readOnly":false,"type":"strings concatenated with \" \""},"services.kubernetes.kubelet.featureGates":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":{"_type":"literalExpression","text":"config.services.kubernetes.featureGates"},"description":"List set of feature gates","loc":["services","kubernetes","kubelet","featureGates"],"readOnly":false,"type":"list of strings"},"services.kubernetes.kubelet.healthz.bind":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":"127.0.0.1","description":"Kubernetes kubelet healthz listening address.","loc":["services","kubernetes","kubelet","healthz","bind"],"readOnly":false,"type":"string"},"services.kubernetes.kubelet.healthz.port":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":10248,"description":"Kubernetes kubelet healthz port.","loc":["services","kubernetes","kubelet","healthz","port"],"readOnly":false,"type":"signed integer"},"services.kubernetes.kubelet.hostname":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":{"_type":"literalExpression","text":"config.networking.hostName"},"description":"Kubernetes kubelet hostname override.","loc":["services","kubernetes","kubelet","hostname"],"readOnly":false,"type":"string"},"services.kubernetes.kubelet.kubeconfig.caFile":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":{"_type":"literalExpression","text":"config.services.kubernetes.caFile"},"description":"Kubelet certificate authority file used to connect to kube-apiserver.","loc":["services","kubernetes","kubelet","kubeconfig","caFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.kubelet.kubeconfig.certFile":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":null,"description":"Kubelet client certificate file used to connect to kube-apiserver.","loc":["services","kubernetes","kubelet","kubeconfig","certFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.kubelet.kubeconfig.keyFile":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":null,"description":"Kubelet client key file used to connect to kube-apiserver.","loc":["services","kubernetes","kubelet","kubeconfig","keyFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.kubelet.kubeconfig.server":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"description":"Kubelet kube-apiserver server address.","loc":["services","kubernetes","kubelet","kubeconfig","server"],"readOnly":false,"type":"string"},"services.kubernetes.kubelet.manifests":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":{},"description":"List of manifests to bootstrap with kubelet (only pods can be created as manifest entry)","loc":["services","kubernetes","kubelet","manifests"],"readOnly":false,"type":"attribute set of attribute sets"},"services.kubernetes.kubelet.networkPlugin":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":"kubenet","description":"Network plugin to use by Kubernetes.","loc":["services","kubernetes","kubelet","networkPlugin"],"readOnly":false,"type":"null or one of \"cni\", \"kubenet\""},"services.kubernetes.kubelet.nodeIp":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":null,"description":"IP address of the node. If set, kubelet will use this IP address for the node.","loc":["services","kubernetes","kubelet","nodeIp"],"readOnly":false,"type":"null or string"},"services.kubernetes.kubelet.port":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":10250,"description":"Kubernetes kubelet info server listening port.","loc":["services","kubernetes","kubelet","port"],"readOnly":false,"type":"signed integer"},"services.kubernetes.kubelet.registerNode":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":true,"description":"Whether to auto register kubelet with API server.","loc":["services","kubernetes","kubelet","registerNode"],"readOnly":false,"type":"boolean"},"services.kubernetes.kubelet.seedDockerImages":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":[],"description":"List of docker images to preload on system","loc":["services","kubernetes","kubelet","seedDockerImages"],"readOnly":false,"type":"list of packages"},"services.kubernetes.kubelet.taints":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":{},"description":"Node taints (https://kubernetes.io/docs/concepts/configuration/assign-pod-node/).","loc":["services","kubernetes","kubelet","taints"],"readOnly":false,"type":"attribute set of submodules"},"services.kubernetes.kubelet.taints.<name>.effect":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"description":"Effect of taint.","example":"NoSchedule","loc":["services","kubernetes","kubelet","taints","<name>","effect"],"readOnly":false,"type":"one of \"NoSchedule\", \"PreferNoSchedule\", \"NoExecute\""},"services.kubernetes.kubelet.taints.<name>.key":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":{"_type":"literalDocBook","text":"Name of this submodule."},"description":"Key of taint.","loc":["services","kubernetes","kubelet","taints","<name>","key"],"readOnly":false,"type":"string"},"services.kubernetes.kubelet.taints.<name>.value":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"description":"Value of taint.","loc":["services","kubernetes","kubelet","taints","<name>","value"],"readOnly":false,"type":"string"},"services.kubernetes.kubelet.tlsCertFile":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":null,"description":"File containing x509 Certificate for HTTPS.","loc":["services","kubernetes","kubelet","tlsCertFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.kubelet.tlsKeyFile":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":null,"description":"File containing x509 private key matching tlsCertFile.","loc":["services","kubernetes","kubelet","tlsKeyFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.kubelet.unschedulable":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":false,"description":"Whether to set node taint to unschedulable=true as it is the case of node that has only master role.","loc":["services","kubernetes","kubelet","unschedulable"],"readOnly":false,"type":"boolean"},"services.kubernetes.kubelet.verbosity":{"declarations":["nixos/modules/services/cluster/kubernetes/kubelet.nix"],"default":null,"description":"Optional glog verbosity level for logging statements. See\n<link xlink:href=\"https://github.com/kubernetes/community/blob/master/contributors/devel/logging.md\"/>\n","loc":["services","kubernetes","kubelet","verbosity"],"readOnly":false,"type":"null or signed integer"},"services.kubernetes.lib":{"declarations":["nixos/modules/services/cluster/kubernetes/default.nix"],"default":{"mkCert":"<function>","mkKubeConfig":"<function>","mkKubeConfigOptions":"<function>"},"description":"Common functions for the kubernetes modules.","loc":["services","kubernetes","lib"],"readOnly":false,"type":"attribute set"},"services.kubernetes.masterAddress":{"declarations":["nixos/modules/services/cluster/kubernetes/default.nix"],"description":"Clusterwide available network address or hostname for the kubernetes master server.","example":"master.example.com","loc":["services","kubernetes","masterAddress"],"readOnly":false,"type":"string"},"services.kubernetes.package":{"declarations":["nixos/modules/services/cluster/kubernetes/default.nix"],"default":{"_type":"literalExpression","text":"pkgs.kubernetes"},"description":"Kubernetes package to use.","loc":["services","kubernetes","package"],"readOnly":false,"type":"package"},"services.kubernetes.path":{"declarations":["nixos/modules/services/cluster/kubernetes/default.nix"],"default":[],"description":"Packages added to the services' PATH environment variable. Both the bin and sbin subdirectories of each package are added.","loc":["services","kubernetes","path"],"readOnly":false,"type":"list of packages"},"services.kubernetes.pki.caCertPathPrefix":{"declarations":["nixos/modules/services/cluster/kubernetes/pki.nix"],"default":{"_type":"literalExpression","text":"\"${config.services.cfssl.dataDir}/ca\""},"description":"Path-prefrix for the CA-certificate to be used for cfssl signing.\nSuffixes \".pem\" and \"-key.pem\" will be automatically appended for\nthe public and private keys respectively.\n","loc":["services","kubernetes","pki","caCertPathPrefix"],"readOnly":false,"type":"string"},"services.kubernetes.pki.caSpec":{"declarations":["nixos/modules/services/cluster/kubernetes/pki.nix"],"default":{"CN":"kubernetes-cluster-ca","L":"auto-generated","O":"NixOS","OU":"services.kubernetes.pki.caSpec"},"description":"Certificate specification for the auto-generated CAcert.","loc":["services","kubernetes","pki","caSpec"],"readOnly":false,"type":"attribute set"},"services.kubernetes.pki.certs":{"declarations":["nixos/modules/services/cluster/kubernetes/pki.nix"],"default":{},"description":"List of certificate specs to feed to cert generator.","loc":["services","kubernetes","pki","certs"],"readOnly":false,"type":"attribute set"},"services.kubernetes.pki.cfsslAPIExtraSANs":{"declarations":["nixos/modules/services/cluster/kubernetes/pki.nix"],"default":[],"description":"Extra x509 Subject Alternative Names to be added to the cfssl API webserver TLS cert.\n","example":["subdomain.example.com"],"loc":["services","kubernetes","pki","cfsslAPIExtraSANs"],"readOnly":false,"type":"list of strings"},"services.kubernetes.pki.enable":{"declarations":["nixos/modules/services/cluster/kubernetes/pki.nix"],"default":false,"description":"Whether to enable easyCert issuer service.","example":true,"loc":["services","kubernetes","pki","enable"],"readOnly":false,"type":"boolean"},"services.kubernetes.pki.etcClusterAdminKubeconfig":{"declarations":["nixos/modules/services/cluster/kubernetes/pki.nix"],"default":null,"description":"Symlink a kubeconfig with cluster-admin privileges to environment path\n(/etc/&lt;path&gt;).\n","loc":["services","kubernetes","pki","etcClusterAdminKubeconfig"],"readOnly":false,"type":"null or string"},"services.kubernetes.pki.genCfsslAPICerts":{"declarations":["nixos/modules/services/cluster/kubernetes/pki.nix"],"default":true,"description":"Whether to automatically generate cfssl API webserver TLS cert and key,\nif they don't exist.\n","loc":["services","kubernetes","pki","genCfsslAPICerts"],"readOnly":false,"type":"boolean"},"services.kubernetes.pki.genCfsslAPIToken":{"declarations":["nixos/modules/services/cluster/kubernetes/pki.nix"],"default":true,"description":"Whether to automatically generate cfssl API-token secret,\nif they doesn't exist.\n","loc":["services","kubernetes","pki","genCfsslAPIToken"],"readOnly":false,"type":"boolean"},"services.kubernetes.pki.genCfsslCACert":{"declarations":["nixos/modules/services/cluster/kubernetes/pki.nix"],"default":true,"description":"Whether to automatically generate cfssl CA certificate and key,\nif they don't exist.\n","loc":["services","kubernetes","pki","genCfsslCACert"],"readOnly":false,"type":"boolean"},"services.kubernetes.pki.pkiTrustOnBootstrap":{"declarations":["nixos/modules/services/cluster/kubernetes/pki.nix"],"default":true,"description":"Whether to always trust remote cfssl server upon initial PKI bootstrap.","loc":["services","kubernetes","pki","pkiTrustOnBootstrap"],"readOnly":false,"type":"boolean"},"services.kubernetes.proxy.bindAddress":{"declarations":["nixos/modules/services/cluster/kubernetes/proxy.nix"],"default":"0.0.0.0","description":"Kubernetes proxy listening address.","loc":["services","kubernetes","proxy","bindAddress"],"readOnly":false,"type":"string"},"services.kubernetes.proxy.enable":{"declarations":["nixos/modules/services/cluster/kubernetes/proxy.nix"],"default":false,"description":"Whether to enable Kubernetes proxy.","example":true,"loc":["services","kubernetes","proxy","enable"],"readOnly":false,"type":"boolean"},"services.kubernetes.proxy.extraOpts":{"declarations":["nixos/modules/services/cluster/kubernetes/proxy.nix"],"default":"","description":"Kubernetes proxy extra command line options.","loc":["services","kubernetes","proxy","extraOpts"],"readOnly":false,"type":"strings concatenated with \" \""},"services.kubernetes.proxy.featureGates":{"declarations":["nixos/modules/services/cluster/kubernetes/proxy.nix"],"default":{"_type":"literalExpression","text":"config.services.kubernetes.featureGates"},"description":"List set of feature gates","loc":["services","kubernetes","proxy","featureGates"],"readOnly":false,"type":"list of strings"},"services.kubernetes.proxy.hostname":{"declarations":["nixos/modules/services/cluster/kubernetes/proxy.nix"],"default":{"_type":"literalExpression","text":"config.networking.hostName"},"description":"Kubernetes proxy hostname override.","loc":["services","kubernetes","proxy","hostname"],"readOnly":false,"type":"string"},"services.kubernetes.proxy.kubeconfig.caFile":{"declarations":["nixos/modules/services/cluster/kubernetes/proxy.nix"],"default":{"_type":"literalExpression","text":"config.services.kubernetes.caFile"},"description":"Kubernetes proxy certificate authority file used to connect to kube-apiserver.","loc":["services","kubernetes","proxy","kubeconfig","caFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.proxy.kubeconfig.certFile":{"declarations":["nixos/modules/services/cluster/kubernetes/proxy.nix"],"default":null,"description":"Kubernetes proxy client certificate file used to connect to kube-apiserver.","loc":["services","kubernetes","proxy","kubeconfig","certFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.proxy.kubeconfig.keyFile":{"declarations":["nixos/modules/services/cluster/kubernetes/proxy.nix"],"default":null,"description":"Kubernetes proxy client key file used to connect to kube-apiserver.","loc":["services","kubernetes","proxy","kubeconfig","keyFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.proxy.kubeconfig.server":{"declarations":["nixos/modules/services/cluster/kubernetes/proxy.nix"],"description":"Kubernetes proxy kube-apiserver server address.","loc":["services","kubernetes","proxy","kubeconfig","server"],"readOnly":false,"type":"string"},"services.kubernetes.proxy.verbosity":{"declarations":["nixos/modules/services/cluster/kubernetes/proxy.nix"],"default":null,"description":"Optional glog verbosity level for logging statements. See\n<link xlink:href=\"https://github.com/kubernetes/community/blob/master/contributors/devel/logging.md\"/>\n","loc":["services","kubernetes","proxy","verbosity"],"readOnly":false,"type":"null or signed integer"},"services.kubernetes.roles":{"declarations":["nixos/modules/services/cluster/kubernetes/default.nix"],"default":[],"description":"Kubernetes role that this machine should take.\n\nMaster role will enable etcd, apiserver, scheduler, controller manager\naddon manager, flannel and proxy services.\nNode role will enable flannel, docker, kubelet and proxy services.\n","loc":["services","kubernetes","roles"],"readOnly":false,"type":"list of one of \"master\", \"node\"s"},"services.kubernetes.scheduler.address":{"declarations":["nixos/modules/services/cluster/kubernetes/scheduler.nix"],"default":"127.0.0.1","description":"Kubernetes scheduler listening address.","loc":["services","kubernetes","scheduler","address"],"readOnly":false,"type":"string"},"services.kubernetes.scheduler.enable":{"declarations":["nixos/modules/services/cluster/kubernetes/scheduler.nix"],"default":false,"description":"Whether to enable Kubernetes scheduler.","example":true,"loc":["services","kubernetes","scheduler","enable"],"readOnly":false,"type":"boolean"},"services.kubernetes.scheduler.extraOpts":{"declarations":["nixos/modules/services/cluster/kubernetes/scheduler.nix"],"default":"","description":"Kubernetes scheduler extra command line options.","loc":["services","kubernetes","scheduler","extraOpts"],"readOnly":false,"type":"strings concatenated with \" \""},"services.kubernetes.scheduler.featureGates":{"declarations":["nixos/modules/services/cluster/kubernetes/scheduler.nix"],"default":{"_type":"literalExpression","text":"config.services.kubernetes.featureGates"},"description":"List set of feature gates","loc":["services","kubernetes","scheduler","featureGates"],"readOnly":false,"type":"list of strings"},"services.kubernetes.scheduler.kubeconfig.caFile":{"declarations":["nixos/modules/services/cluster/kubernetes/scheduler.nix"],"default":{"_type":"literalExpression","text":"config.services.kubernetes.caFile"},"description":"Kubernetes scheduler certificate authority file used to connect to kube-apiserver.","loc":["services","kubernetes","scheduler","kubeconfig","caFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.scheduler.kubeconfig.certFile":{"declarations":["nixos/modules/services/cluster/kubernetes/scheduler.nix"],"default":null,"description":"Kubernetes scheduler client certificate file used to connect to kube-apiserver.","loc":["services","kubernetes","scheduler","kubeconfig","certFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.scheduler.kubeconfig.keyFile":{"declarations":["nixos/modules/services/cluster/kubernetes/scheduler.nix"],"default":null,"description":"Kubernetes scheduler client key file used to connect to kube-apiserver.","loc":["services","kubernetes","scheduler","kubeconfig","keyFile"],"readOnly":false,"type":"null or path"},"services.kubernetes.scheduler.kubeconfig.server":{"declarations":["nixos/modules/services/cluster/kubernetes/scheduler.nix"],"description":"Kubernetes scheduler kube-apiserver server address.","loc":["services","kubernetes","scheduler","kubeconfig","server"],"readOnly":false,"type":"string"},"services.kubernetes.scheduler.leaderElect":{"declarations":["nixos/modules/services/cluster/kubernetes/scheduler.nix"],"default":true,"description":"Whether to start leader election before executing main loop.","loc":["services","kubernetes","scheduler","leaderElect"],"readOnly":false,"type":"boolean"},"services.kubernetes.scheduler.port":{"declarations":["nixos/modules/services/cluster/kubernetes/scheduler.nix"],"default":10251,"description":"Kubernetes scheduler listening port.","loc":["services","kubernetes","scheduler","port"],"readOnly":false,"type":"signed integer"},"services.kubernetes.scheduler.verbosity":{"declarations":["nixos/modules/services/cluster/kubernetes/scheduler.nix"],"default":null,"description":"Optional glog verbosity level for logging statements. See\n<link xlink:href=\"https://github.com/kubernetes/community/blob/master/contributors/devel/logging.md\"/>\n","loc":["services","kubernetes","scheduler","verbosity"],"readOnly":false,"type":"null or signed integer"},"services.kubernetes.secretsPath":{"declarations":["nixos/modules/services/cluster/kubernetes/default.nix"],"default":{"_type":"literalExpression","text":"config.services.kubernetes.dataDir + \"/secrets\"\n"},"description":"Default location for kubernetes secrets. Not a store location.","loc":["services","kubernetes","secretsPath"],"readOnly":false,"type":"path"},"services.matrix-appservice-irc.enable":{"declarations":["nixos/modules/services/misc/matrix-appservice-irc.nix"],"default":false,"description":"Whether to enable the Matrix/IRC bridge.","example":true,"loc":["services","matrix-appservice-irc","enable"],"readOnly":false,"type":"boolean"},"services.matrix-appservice-irc.localpart":{"declarations":["nixos/modules/services/misc/matrix-appservice-irc.nix"],"default":"appservice-irc","description":"The user_id localpart to assign to the appservice","loc":["services","matrix-appservice-irc","localpart"],"readOnly":false,"type":"string"},"services.matrix-appservice-irc.needBindingCap":{"declarations":["nixos/modules/services/misc/matrix-appservice-irc.nix"],"default":false,"description":"Whether the daemon needs to bind to ports below 1024 (e.g. for the ident service)","loc":["services","matrix-appservice-irc","needBindingCap"],"readOnly":false,"type":"boolean"},"services.matrix-appservice-irc.passwordEncryptionKeyLength":{"declarations":["nixos/modules/services/misc/matrix-appservice-irc.nix"],"default":4096,"description":"Length of the key to encrypt IRC passwords with","example":8192,"loc":["services","matrix-appservice-irc","passwordEncryptionKeyLength"],"readOnly":false,"type":"unsigned integer, meaning >=0"},"services.matrix-appservice-irc.port":{"declarations":["nixos/modules/services/misc/matrix-appservice-irc.nix"],"default":8009,"description":"The port to listen on","loc":["services","matrix-appservice-irc","port"],"readOnly":false,"type":"16 bit unsigned integer; between 0 and 65535 (both inclusive)"},"services.matrix-appservice-irc.registrationUrl":{"declarations":["nixos/modules/services/misc/matrix-appservice-irc.nix"],"description":"The URL where the application service is listening for homeserver requests,\nfrom the Matrix homeserver perspective.\n","example":"http://localhost:8009","loc":["services","matrix-appservice-irc","registrationUrl"],"readOnly":false,"type":"string"},"services.matrix-appservice-irc.settings":{"declarations":["nixos/modules/services/misc/matrix-appservice-irc.nix"],"default":{},"description":"Configuration for the appservice, see\n<link xlink:href=\"https://github.com/matrix-org/matrix-appservice-irc/blob/0.32.1/config.sample.yaml\"/>\nfor supported values\n","loc":["services","matrix-appservice-irc","settings"],"readOnly":false,"type":"JSON value"},"services.matrix-appservice-irc.settings.database":{"declarations":["nixos/modules/services/misc/matrix-appservice-irc.nix"],"default":{},"description":"Configuration for the database","loc":["services","matrix-appservice-irc","settings","database"],"readOnly":false,"type":"JSON value"},"services.matrix-appservice-irc.settings.database.connectionString":{"declarations":["nixos/modules/services/misc/matrix-appservice-irc.nix"],"default":"nedb://var/lib/matrix-appservice-irc/data","description":"The database connection string","example":"postgres://username:password@host:port/databasename","loc":["services","matrix-appservice-irc","settings","database","connectionString"],"readOnly":false,"type":"string"},"services.matrix-appservice-irc.settings.database.engine":{"declarations":["nixos/modules/services/misc/matrix-appservice-irc.nix"],"default":"nedb","description":"Which database engine to use","example":"postgres","loc":["services","matrix-appservice-irc","settings","database","engine"],"readOnly":false,"type":"string"},"services.matrix-appservice-irc.settings.homeserver":{"declarations":["nixos/modules/services/misc/matrix-appservice-irc.nix"],"default":{},"description":"Homeserver configuration","loc":["services","matrix-appservice-irc","settings","homeserver"],"readOnly":false,"type":"JSON value"},"services.matrix-appservice-irc.settings.homeserver.domain":{"declarations":["nixos/modules/services/misc/matrix-appservice-irc.nix"],"description":"The 'domain' part for user IDs on this home server. Usually\n(but not always) is the \"domain name\" part of the homeserver URL.\n","loc":["services","matrix-appservice-irc","settings","homeserver","domain"],"readOnly":false,"type":"string"},"services.matrix-appservice-irc.settings.homeserver.url":{"declarations":["nixos/modules/services/misc/matrix-appservice-irc.nix"],"description":"The URL to the home server for client-server API calls","loc":["services","matrix-appservice-irc","settings","homeserver","url"],"readOnly":false,"type":"string"},"services.matrix-appservice-irc.settings.ircService":{"declarations":["nixos/modules/services/misc/matrix-appservice-irc.nix"],"default":{},"description":"IRC bridge configuration","loc":["services","matrix-appservice-irc","settings","ircService"],"readOnly":false,"type":"JSON value"},"services.matrix-appservice-irc.settings.ircService.passwordEncryptionKeyPath":{"declarations":["nixos/modules/services/misc/matrix-appservice-irc.nix"],"default":"/var/lib/matrix-appservice-irc/passkey.pem","description":"Location of the key with which IRC passwords are encrypted\nfor storage. Will be generated on first run if not present.\n","loc":["services","matrix-appservice-irc","settings","ircService","passwordEncryptionKeyPath"],"readOnly":false,"type":"string"},"services.matrix-appservice-irc.settings.ircService.servers":{"declarations":["nixos/modules/services/misc/matrix-appservice-irc.nix"],"description":"IRC servers to connect to","loc":["services","matrix-appservice-irc","settings","ircService","servers"],"readOnly":false,"type":"JSON value"},"services.matrix-synapse.configFile":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"description":"Path to the configuration file on the target system. Useful to configure e.g. workers\nthat also need this.\n","loc":["services","matrix-synapse","configFile"],"readOnly":true,"type":"string"},"services.matrix-synapse.dataDir":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":"/var/lib/matrix-synapse","description":"The directory where matrix-synapse stores its stateful data such as\ncertificates, media and uploads.\n","loc":["services","matrix-synapse","dataDir"],"readOnly":false,"type":"string"},"services.matrix-synapse.enable":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":false,"description":"Whether to enable matrix.org synapse.","example":true,"loc":["services","matrix-synapse","enable"],"readOnly":false,"type":"boolean"},"services.matrix-synapse.extraConfigFiles":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":[],"description":"Extra config files to include.\n\nThe configuration files will be included based on the command line\nargument --config-path. This allows to configure secrets without\nhaving to go through the Nix store, e.g. based on deployment keys if\nNixOps is in use.\n","loc":["services","matrix-synapse","extraConfigFiles"],"readOnly":false,"type":"list of paths"},"services.matrix-synapse.package":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":{"_type":"literalExpression","text":"pkgs.matrix-synapse"},"description":"Overridable attribute of the matrix synapse server package to use.\n","loc":["services","matrix-synapse","package"],"readOnly":false,"type":"package"},"services.matrix-synapse.plugins":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":[],"description":"List of additional Matrix plugins to make available.\n","example":{"_type":"literalExpression","text":"with config.services.matrix-synapse.package.plugins; [\n  matrix-synapse-ldap3\n  matrix-synapse-pam\n];\n"},"loc":["services","matrix-synapse","plugins"],"readOnly":false,"type":"list of packages"},"services.matrix-synapse.settings":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":{},"description":"The primary synapse configuration. See the\n<link xlink:href=\"https://github.com/matrix-org/synapse/blob/v1.54.0/docs/sample_config.yaml\">sample configuration</link>\nfor possible values.\n\nSecrets should be passed in by using the <literal>extraConfigFiles</literal> option.\n","loc":["services","matrix-synapse","settings"],"readOnly":false,"type":"YAML value"},"services.matrix-synapse.settings.app_service_config_files":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":[],"description":"A list of application service config file to use\n","loc":["services","matrix-synapse","settings","app_service_config_files"],"readOnly":false,"type":"list of paths"},"services.matrix-synapse.settings.database.args.database":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":{"_type":"literalExpression","text":"{\n  sqlite3 = \"${services.matrix-synapse.dataDir}/homeserver.db\";\n  psycopg2 = \"matrix-synapse\";\n}.${services.matrix-synapse.settings.database.name};\n"},"description":"Name of the database when using the psycopg2 backend,\npath to the database location when using sqlite3.\n","loc":["services","matrix-synapse","settings","database","args","database"],"readOnly":false,"type":"string"},"services.matrix-synapse.settings.database.args.user":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":"matrix-synapse","description":"Username to connect with psycopg2, set to null\nwhen using sqlite3.\n","loc":["services","matrix-synapse","settings","database","args","user"],"readOnly":false,"type":"null or string"},"services.matrix-synapse.settings.database.name":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":{"_type":"literalExpression","text":"if versionAtLeast config.system.stateVersion \"18.03\"\nthen \"psycopg2\"\nelse \"sqlite3\"\n"},"description":"The database engine name. Can be sqlite3 or psycopg2.\n","loc":["services","matrix-synapse","settings","database","name"],"readOnly":false,"type":"one of \"sqlite3\", \"psycopg2\""},"services.matrix-synapse.settings.dynamic_thumbnails":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":false,"description":"Whether to generate new thumbnails on the fly to precisely match\nthe resolution requested by the client. If true then whenever\na new resolution is requested by the client the server will\ngenerate a new thumbnail. If false the server will pick a thumbnail\nfrom a precalculated list.\n","example":true,"loc":["services","matrix-synapse","settings","dynamic_thumbnails"],"readOnly":false,"type":"boolean"},"services.matrix-synapse.settings.enable_metrics":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":false,"description":"Enable collection and rendering of performance metrics\n","loc":["services","matrix-synapse","settings","enable_metrics"],"readOnly":false,"type":"boolean"},"services.matrix-synapse.settings.enable_registration":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":false,"description":"Enable registration for new users.\n","loc":["services","matrix-synapse","settings","enable_registration"],"readOnly":false,"type":"boolean"},"services.matrix-synapse.settings.listeners":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":[{"bind_addresses":["127.0.0.1"],"port":8008,"resources":[{"compress":true,"names":["client"]},{"compress":false,"names":["federation"]}],"tls":false,"type":"http","x_forwarded":true}],"description":"List of ports that Synapse should listen on, their purpose and their configuration.\n","loc":["services","matrix-synapse","settings","listeners"],"readOnly":false,"type":"list of submodules"},"services.matrix-synapse.settings.listeners.*.bind_addresses":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":["::1","127.0.0.1"],"description":"IP addresses to bind the listener to.\n","example":{"_type":"literalExpression","text":"[\n  \"::\"\n  \"0.0.0.0\"\n]\n"},"loc":["services","matrix-synapse","settings","listeners","*","bind_addresses"],"readOnly":false,"type":"list of strings"},"services.matrix-synapse.settings.listeners.*.port":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"description":"The port to listen for HTTP(S) requests on.\n","example":8448,"loc":["services","matrix-synapse","settings","listeners","*","port"],"readOnly":false,"type":"16 bit unsigned integer; between 0 and 65535 (both inclusive)"},"services.matrix-synapse.settings.listeners.*.resources":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"description":"List of HTTP resources to serve on this listener.\n","loc":["services","matrix-synapse","settings","listeners","*","resources"],"readOnly":false,"type":"list of submodules"},"services.matrix-synapse.settings.listeners.*.resources.*.compress":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"description":"Should synapse compress HTTP responses to clients that support it?\nThis should be disabled if running synapse behind a load balancer\nthat can do automatic compression.\n","loc":["services","matrix-synapse","settings","listeners","*","resources","*","compress"],"readOnly":false,"type":"boolean"},"services.matrix-synapse.settings.listeners.*.resources.*.names":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"description":"List of resources to host on this listener.\n","example":["client"],"loc":["services","matrix-synapse","settings","listeners","*","resources","*","names"],"readOnly":false,"type":"list of one of \"client\", \"consent\", \"federation\", \"keys\", \"media\", \"metrics\", \"openid\", \"replication\", \"static\"s"},"services.matrix-synapse.settings.listeners.*.tls":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":true,"description":"Whether to enable TLS on the listener socket.\n","example":false,"loc":["services","matrix-synapse","settings","listeners","*","tls"],"readOnly":false,"type":"boolean"},"services.matrix-synapse.settings.listeners.*.type":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":"http","description":"The type of the listener, usually http.\n","example":"metrics","loc":["services","matrix-synapse","settings","listeners","*","type"],"readOnly":false,"type":"one of \"http\", \"manhole\", \"metrics\", \"replication\""},"services.matrix-synapse.settings.listeners.*.x_forwarded":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":false,"description":"Use the X-Forwarded-For (XFF) header as the client IP and not the\nactual client IP.\n","example":true,"loc":["services","matrix-synapse","settings","listeners","*","x_forwarded"],"readOnly":false,"type":"boolean"},"services.matrix-synapse.settings.log_config":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":"/nix/store/m7d1vp64j16mccrmbph8v1s9rwxzdhbd-matrix-synapse-log_config.yaml","description":"The file that holds the logging configuration.\n","loc":["services","matrix-synapse","settings","log_config"],"readOnly":false,"type":"path"},"services.matrix-synapse.settings.macaroon_secret_key":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":null,"description":"Secret key for authentication tokens. If none is specified,\nthe registration_shared_secret is used, if one is given; otherwise,\na secret key is derived from the signing key.\n\nSecrets should be passed in via <literal>extraConfigFiles</literal>!\n","loc":["services","matrix-synapse","settings","macaroon_secret_key"],"readOnly":false,"type":"null or string"},"services.matrix-synapse.settings.max_image_pixels":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":"32M","description":"Maximum number of pixels that will be thumbnailed\n","example":"64M","loc":["services","matrix-synapse","settings","max_image_pixels"],"readOnly":false,"type":"string"},"services.matrix-synapse.settings.max_upload_size":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":"50M","description":"The largest allowed upload size in bytes\n","example":"100M","loc":["services","matrix-synapse","settings","max_upload_size"],"readOnly":false,"type":"string"},"services.matrix-synapse.settings.media_store_path":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":"/var/lib/matrix-synapse/media_store","description":"Directory where uploaded images and attachments are stored.\n","loc":["services","matrix-synapse","settings","media_store_path"],"readOnly":false,"type":"path"},"services.matrix-synapse.settings.pid_file":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":"/run/matrix-synapse.pid","description":"The file to store the PID in.\n","loc":["services","matrix-synapse","settings","pid_file"],"readOnly":true,"type":"path"},"services.matrix-synapse.settings.presence.enabled":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":true,"description":"Whether to enable presence tracking.\n\nPresence tracking allows users to see the state (e.g online/offline)\nof other local and remote users.\n","example":false,"loc":["services","matrix-synapse","settings","presence","enabled"],"readOnly":false,"type":"boolean"},"services.matrix-synapse.settings.public_baseurl":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":null,"description":"The public-facing base URL for the client API (not including _matrix/...)\n","example":"https://example.com:8448/","loc":["services","matrix-synapse","settings","public_baseurl"],"readOnly":false,"type":"null or string"},"services.matrix-synapse.settings.registration_shared_secret":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":null,"description":"If set, allows registration by anyone who also has the shared\nsecret, even if registration is otherwise disabled.\n\nSecrets should be passed in via <literal>extraConfigFiles</literal>!\n","loc":["services","matrix-synapse","settings","registration_shared_secret"],"readOnly":false,"type":"null or string"},"services.matrix-synapse.settings.report_stats":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":false,"description":"Whether or not to report anonymized homeserver usage statistics.\n","loc":["services","matrix-synapse","settings","report_stats"],"readOnly":false,"type":"boolean"},"services.matrix-synapse.settings.server_name":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":{"_type":"literalExpression","text":"config.networking.hostName"},"description":"The domain name of the server, with optional explicit port.\nThis is used by remote servers to look up the server address.\nThis is also the last part of your UserID.\n\nThe server_name cannot be changed later so it is important to configure this correctly before you start Synapse.\n","example":"example.com","loc":["services","matrix-synapse","settings","server_name"],"readOnly":false,"type":"string"},"services.matrix-synapse.settings.signing_key_path":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":"/var/lib/matrix-synapse/homeserver.signing.key","description":"Path to the signing key to sign messages with.\n","loc":["services","matrix-synapse","settings","signing_key_path"],"readOnly":false,"type":"path"},"services.matrix-synapse.settings.tls_certificate_path":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":null,"description":"PEM encoded X509 certificate for TLS.\nYou can replace the self-signed certificate that synapse\nautogenerates on launch with your own SSL certificate + key pair\nif you like.  Any required intermediary certificates can be\nappended after the primary certificate in hierarchical order.\n","example":"/var/lib/acme/example.com/fullchain.pem","loc":["services","matrix-synapse","settings","tls_certificate_path"],"readOnly":false,"type":"null or string"},"services.matrix-synapse.settings.tls_private_key_path":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":null,"description":"PEM encoded private key for TLS. Specify null if synapse is not\nspeaking TLS directly.\n","example":"/var/lib/acme/example.com/key.pem","loc":["services","matrix-synapse","settings","tls_private_key_path"],"readOnly":false,"type":"null or string"},"services.matrix-synapse.settings.trusted_key_servers":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":[{"server_name":"matrix.org","verify_keys":{"ed25519:auto":"Noi6WqcDj0QmPxCNQqgezwTlBKrfqehY1u2FyWP9uYw"}}],"description":"The trusted servers to download signing keys from.\n","loc":["services","matrix-synapse","settings","trusted_key_servers"],"readOnly":false,"type":"list of submodules"},"services.matrix-synapse.settings.trusted_key_servers.*.server_name":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"description":"Hostname of the trusted server.\n","example":"matrix.org","loc":["services","matrix-synapse","settings","trusted_key_servers","*","server_name"],"readOnly":false,"type":"string"},"services.matrix-synapse.settings.trusted_key_servers.*.verify_keys":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":null,"description":"Attribute set from key id to base64 encoded public key.\n\nIf specified synapse will check that the response is signed\nby at least one of the given keys.\n","example":{"_type":"literalExpression","text":"{\n  \"ed25519:auto\" = \"Noi6WqcDj0QmPxCNQqgezwTlBKrfqehY1u2FyWP9uYw\";\n}\n"},"loc":["services","matrix-synapse","settings","trusted_key_servers","*","verify_keys"],"readOnly":false,"type":"null or attribute set of strings"},"services.matrix-synapse.settings.turn_shared_secret":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":"","description":"The shared secret used to compute passwords for the TURN server.\n\nSecrets should be passed in via <literal>extraConfigFiles</literal>!\n","example":{"_type":"literalExpression","text":"config.services.coturn.static-auth-secret\n"},"loc":["services","matrix-synapse","settings","turn_shared_secret"],"readOnly":false,"type":"string"},"services.matrix-synapse.settings.turn_uris":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":[],"description":"The public URIs of the TURN server to give to clients\n","example":["turn:turn.example.com:3487?transport=udp","turn:turn.example.com:3487?transport=tcp","turns:turn.example.com:5349?transport=udp","turns:turn.example.com:5349?transport=tcp"],"loc":["services","matrix-synapse","settings","turn_uris"],"readOnly":false,"type":"list of strings"},"services.matrix-synapse.settings.url_preview_enabled":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":true,"description":"Is the preview URL API enabled?  If enabled, you *must* specify an\nexplicit url_preview_ip_range_blacklist of IPs that the spider is\ndenied from accessing.\n","example":false,"loc":["services","matrix-synapse","settings","url_preview_enabled"],"readOnly":false,"type":"boolean"},"services.matrix-synapse.settings.url_preview_ip_range_blacklist":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":["10.0.0.0/8","100.64.0.0/10","127.0.0.0/8","169.254.0.0/16","172.16.0.0/12","192.0.0.0/24","192.0.2.0/24","192.168.0.0/16","192.88.99.0/24","198.18.0.0/15","198.51.100.0/24","2001:db8::/32","203.0.113.0/24","224.0.0.0/4","::1/128","fc00::/7","fe80::/10","fec0::/10","ff00::/8"],"description":"List of IP address CIDR ranges that the URL preview spider is denied\nfrom accessing.\n","loc":["services","matrix-synapse","settings","url_preview_ip_range_blacklist"],"readOnly":false,"type":"list of strings"},"services.matrix-synapse.settings.url_preview_ip_range_whitelist":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":[],"description":"List of IP address CIDR ranges that the URL preview spider is allowed\nto access even if they are specified in url_preview_ip_range_blacklist.\n","loc":["services","matrix-synapse","settings","url_preview_ip_range_whitelist"],"readOnly":false,"type":"list of strings"},"services.matrix-synapse.settings.url_preview_url_blacklist":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":[],"description":"Optional list of URL matches that the URL preview spider is\ndenied from accessing.\n","loc":["services","matrix-synapse","settings","url_preview_url_blacklist"],"readOnly":false,"type":"list of strings"},"services.matrix-synapse.withJemalloc":{"declarations":["nixos/modules/services/matrix/matrix-synapse.nix"],"default":false,"description":"Whether to preload jemalloc to reduce memory fragmentation and overall usage.\n","loc":["services","matrix-synapse","withJemalloc"],"readOnly":false,"type":"boolean"},"services.nghttpx.backend-address-family":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":"auto","description":"Specify address family of backend connections. If \"auto\" is\ngiven, both IPv4 and IPv6 are considered. If \"IPv4\" is given,\nonly IPv4 address is considered. If \"IPv6\" is given, only IPv6\naddress is considered.\n\nPlease see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx--backend-address-family\n","loc":["services","nghttpx","backend-address-family"],"readOnly":false,"type":"one of \"auto\", \"IPv4\", \"IPv6\""},"services.nghttpx.backends":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"description":"A list of backend specifications.\n","example":[{"params":{"proto":"http/1.1","redirect-if-not-tls":true},"patterns":["/"],"server":{"host":"172.16.0.22","port":8443}}],"loc":["services","nghttpx","backends"],"readOnly":false,"type":"list of submodules"},"services.nghttpx.backends.*.params":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":null,"description":"Parameters to configure a backend.\n","example":{"proto":"h2","tls":true},"loc":["services","nghttpx","backends","*","params"],"readOnly":false,"type":"null or submodule"},"services.nghttpx.backends.*.params.affinity":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":"none","description":"If \"ip\" is given, client IP based session affinity is\nenabled. If \"none\" is given, session affinity is disabled.\n\nSession affinity is enabled (by nghttpx) per-backend\npattern. If at least one backend has a non-\"none\" affinity,\nthen session affinity is enabled for all backend servers\nsharing the same pattern.\n\nIt is advised to set affinity on all backends explicitly if\nsession affinity is desired. The session affinity may break if\none of the backend gets unreachable, or backend settings are\nreloaded or replaced by API.\n\nPlease see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b\nfor more detail.\n","loc":["services","nghttpx","backends","*","params","affinity"],"readOnly":false,"type":"one of \"ip\", \"none\""},"services.nghttpx.backends.*.params.dns":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":false,"description":"Name resolution of a backends host name is done at start up,\nor configuration reload. If \"dns\" is true, name resolution\ntakes place dynamically.\n\nThis is useful if a backends address changes frequently. If\n\"dns\" is true, name resolution of a backend's host name at\nstart up, or configuration reload is skipped.\n\nPlease see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b\nfor more detail.\n","loc":["services","nghttpx","backends","*","params","dns"],"readOnly":false,"type":"boolean"},"services.nghttpx.backends.*.params.fall":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":0,"description":"If nghttpx cannot connect to the backend N times in a row, the\nbackend is assumed to be offline and is excluded from load\nbalancing. If N is 0 the backend is never excluded from load\nbalancing.\n\nPlease see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b\nfor more detail.\n","loc":["services","nghttpx","backends","*","params","fall"],"readOnly":false,"type":"signed integer"},"services.nghttpx.backends.*.params.proto":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":"http/1.1","description":"This option configures the protocol the backend server expects\nto use.\n\nPlease see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b\nfor more detail.\n","loc":["services","nghttpx","backends","*","params","proto"],"readOnly":false,"type":"one of \"h2\", \"http/1.1\""},"services.nghttpx.backends.*.params.redirect-if-not-tls":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":false,"description":"If true, a backend match requires the frontend connection be\nTLS encrypted. If it is not, nghttpx responds to the request\nwith a 308 status code and https URI the client should use\ninstead in the Location header.\n\nThe port number in the redirect URI is 443 by default and can\nbe changed using 'services.nghttpx.redirect-https-port'\noption.\n\nIf at least one backend has \"redirect-if-not-tls\" set to true,\nthis feature is enabled for all backend servers with the same\npattern. It is advised to set \"redirect-if-no-tls\" parameter\nto all backends explicitly if this feature is desired.\n\nPlease see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b\nfor more detail.\n","loc":["services","nghttpx","backends","*","params","redirect-if-not-tls"],"readOnly":false,"type":"boolean"},"services.nghttpx.backends.*.params.rise":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":0,"description":"If the backend is excluded from load balancing, nghttpx will\nperiodically attempt to make a connection to the backend. If\nthe connection is successful N times in a row the backend is\nre-included in load balancing. If N is 0 a backend is never\nreconsidered for load balancing once it falls.\n\nPlease see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b\nfor more detail.\n","loc":["services","nghttpx","backends","*","params","rise"],"readOnly":false,"type":"signed integer"},"services.nghttpx.backends.*.params.sni":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":null,"description":"Override the TLS SNI field value. This value (in nghttpx)\ndefaults to the host value of the backend configuration.\n\nPlease see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b\nfor more detail.\n","loc":["services","nghttpx","backends","*","params","sni"],"readOnly":false,"type":"null or string"},"services.nghttpx.backends.*.params.tls":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":false,"description":"This option determines whether nghttpx will negotiate its\nconnection with a backend server using TLS or not. The burden\nis on the backend server to provide the TLS certificate!\n\nPlease see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b\nfor more detail.\n","loc":["services","nghttpx","backends","*","params","tls"],"readOnly":false,"type":"boolean"},"services.nghttpx.backends.*.patterns":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":[],"description":"List of nghttpx backend patterns.\n\nPlease see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b\nfor more information on the pattern syntax and nghttpxs behavior.\n","example":["*.host.net/v1/","host.org/v2/mypath","/somepath"],"loc":["services","nghttpx","backends","*","patterns"],"readOnly":false,"type":"list of strings"},"services.nghttpx.backends.*.server":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":{"host":"127.0.0.1","port":80},"description":"Backend server location specified as either a host:port pair\nor a unix domain docket.\n","example":{"host":"127.0.0.1","port":8888},"loc":["services","nghttpx","backends","*","server"],"readOnly":false,"type":"submodule or path"},"services.nghttpx.backlog":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":65536,"description":"Listen backlog size.\n\nPlease see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx--backlog\n","loc":["services","nghttpx","backlog"],"readOnly":false,"type":"signed integer"},"services.nghttpx.enable":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":false,"description":"Whether to enable nghttpx.","example":true,"loc":["services","nghttpx","enable"],"readOnly":false,"type":"boolean"},"services.nghttpx.extraConfig":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":"","description":"Extra configuration options to be appended to the generated\nconfiguration file.\n","loc":["services","nghttpx","extraConfig"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.nghttpx.frontends":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"description":"A list of frontend listener specifications.\n","example":[{"params":{"tls":"no-tls"},"server":{"host":"*","port":80}}],"loc":["services","nghttpx","frontends"],"readOnly":false,"type":"list of submodules"},"services.nghttpx.frontends.*.params":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":null,"description":"Parameters to configure a backend.\n","example":{"tls":"tls"},"loc":["services","nghttpx","frontends","*","params"],"readOnly":false,"type":"null or submodule"},"services.nghttpx.frontends.*.params.api":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":false,"description":"Enable API access for this frontend. This enables you to\ndynamically modify nghttpx at run-time therefore this feature\nis disabled by default and should be turned on with care.\n\nPlease see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-f\nfor more detail.\n","loc":["services","nghttpx","frontends","*","params","api"],"readOnly":false,"type":"boolean"},"services.nghttpx.frontends.*.params.healthmon":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":false,"description":"Make this frontend a health monitor endpoint. Any request\nreceived on this frontend is responded to with a 200 OK.\n\nPlease see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-f\nfor more detail.\n","loc":["services","nghttpx","frontends","*","params","healthmon"],"readOnly":false,"type":"boolean"},"services.nghttpx.frontends.*.params.proxyproto":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":false,"description":"Accept PROXY protocol version 1 on frontend connection.\n\nPlease see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-f\nfor more detail.\n","loc":["services","nghttpx","frontends","*","params","proxyproto"],"readOnly":false,"type":"boolean"},"services.nghttpx.frontends.*.params.sni-fwd":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":false,"description":"When performing a match to select a backend server, SNI host\nname received from the client is used instead of the request\nhost. See --backend option about the pattern match.\n\nPlease see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-f\nfor more detail.\n","loc":["services","nghttpx","frontends","*","params","sni-fwd"],"readOnly":false,"type":"boolean"},"services.nghttpx.frontends.*.params.tls":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":"tls","description":"Enable or disable TLS. If true (enabled) the key and\ncertificate must be configured for nghttpx.\n\nPlease see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-f\nfor more detail.\n","loc":["services","nghttpx","frontends","*","params","tls"],"readOnly":false,"type":"one of \"tls\", \"no-tls\""},"services.nghttpx.frontends.*.server":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":{"host":"127.0.0.1","port":80},"description":"Frontend server interface binding specification as either a\nhost:port pair or a unix domain docket.\n\nNB: a host of \"*\" listens on all interfaces and includes IPv6\naddresses.\n","example":{"host":"127.0.0.1","port":8888},"loc":["services","nghttpx","frontends","*","server"],"readOnly":false,"type":"submodule or path"},"services.nghttpx.rlimit-nofile":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":0,"description":"Set maximum number of open files (RLIMIT_NOFILE) to &lt;N&gt;. If 0\nis given, nghttpx does not set the limit.\n\nPlease see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx--rlimit-nofile\n","loc":["services","nghttpx","rlimit-nofile"],"readOnly":false,"type":"signed integer"},"services.nghttpx.single-process":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":false,"description":"Run this program in a single process mode for debugging\npurpose. Without this option, nghttpx creates at least 2\nprocesses: master and worker processes. If this option is\nused, master and worker are unified into a single\nprocess. nghttpx still spawns additional process if neverbleed\nis used. In the single process mode, the signal handling\nfeature is disabled.\n\nPlease see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx--single-process\n","loc":["services","nghttpx","single-process"],"readOnly":false,"type":"boolean"},"services.nghttpx.single-thread":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":false,"description":"Run everything in one thread inside the worker process. This\nfeature is provided for better debugging experience, or for\nthe platforms which lack thread support. If threading is\ndisabled, this option is always enabled.\n\nPlease see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx--single-thread\n","loc":["services","nghttpx","single-thread"],"readOnly":false,"type":"boolean"},"services.nghttpx.tls":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":null,"description":"TLS certificate and key paths. Note that this does not enable\nTLS for a frontend listener, to do so, a frontend\nspecification must set <literal>params.tls</literal> to true.\n","example":{"crt":"/etc/ssl/certs/server.crt","key":"/etc/ssl/keys/server.key"},"loc":["services","nghttpx","tls"],"readOnly":false,"type":"null or submodule"},"services.nghttpx.tls.crt":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":"/etc/ssl/certs/server.crt","description":"Path to the TLS certificate file.\n","example":"/etc/ssl/certs/mycert.crt","loc":["services","nghttpx","tls","crt"],"readOnly":false,"type":"string"},"services.nghttpx.tls.key":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":"/etc/ssl/keys/server.key","description":"Path to the TLS key file.\n","example":"/etc/ssl/keys/mykeyfile.key","loc":["services","nghttpx","tls","key"],"readOnly":false,"type":"string"},"services.nghttpx.workers":{"declarations":["nixos/modules/services/networking/nghttpx/nghttpx-options.nix"],"default":1,"description":"Set the number of worker threads.\n\nPlease see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-n\n","loc":["services","nghttpx","workers"],"readOnly":false,"type":"signed integer"},"services.pantheon.apps.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/pantheon.nix"],"default":false,"description":"Whether to enable Pantheon default applications.","example":true,"loc":["services","pantheon","apps","enable"],"readOnly":false,"type":"boolean"},"services.pantheon.contractor.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/pantheon.nix"],"default":false,"description":"Whether to enable contractor, a desktop-wide extension service used by Pantheon.","example":true,"loc":["services","pantheon","contractor","enable"],"readOnly":false,"type":"boolean"},"services.pipewire.alsa.enable":{"declarations":["nixos/modules/services/desktops/pipewire/pipewire.nix"],"default":false,"description":"Whether to enable ALSA support.","example":true,"loc":["services","pipewire","alsa","enable"],"readOnly":false,"type":"boolean"},"services.pipewire.alsa.support32Bit":{"declarations":["nixos/modules/services/desktops/pipewire/pipewire.nix"],"default":false,"description":"Whether to enable 32-bit ALSA support on 64-bit systems.","example":true,"loc":["services","pipewire","alsa","support32Bit"],"readOnly":false,"type":"boolean"},"services.pipewire.config.client":{"declarations":["nixos/modules/services/desktops/pipewire/pipewire.nix"],"default":{},"description":"Configuration for pipewire clients. For details see\nhttps://gitlab.freedesktop.org/pipewire/pipewire/-/blob/0.3.48/src/daemon/client.conf.in\n","loc":["services","pipewire","config","client"],"readOnly":false,"type":"JSON value"},"services.pipewire.config.client-rt":{"declarations":["nixos/modules/services/desktops/pipewire/pipewire.nix"],"default":{},"description":"Configuration for realtime pipewire clients. For details see\nhttps://gitlab.freedesktop.org/pipewire/pipewire/-/blob/0.3.48/src/daemon/client-rt.conf.in\n","loc":["services","pipewire","config","client-rt"],"readOnly":false,"type":"JSON value"},"services.pipewire.config.jack":{"declarations":["nixos/modules/services/desktops/pipewire/pipewire.nix"],"default":{},"description":"Configuration for the pipewire daemon's jack module. For details see\nhttps://gitlab.freedesktop.org/pipewire/pipewire/-/blob/0.3.48/src/daemon/jack.conf.in\n","loc":["services","pipewire","config","jack"],"readOnly":false,"type":"JSON value"},"services.pipewire.config.pipewire":{"declarations":["nixos/modules/services/desktops/pipewire/pipewire.nix"],"default":{},"description":"Configuration for the pipewire daemon. For details see\nhttps://gitlab.freedesktop.org/pipewire/pipewire/-/blob/0.3.48/src/daemon/pipewire.conf.in\n","loc":["services","pipewire","config","pipewire"],"readOnly":false,"type":"JSON value"},"services.pipewire.config.pipewire-pulse":{"declarations":["nixos/modules/services/desktops/pipewire/pipewire.nix"],"default":{},"description":"Configuration for the pipewire-pulse daemon. For details see\nhttps://gitlab.freedesktop.org/pipewire/pipewire/-/blob/0.3.48/src/daemon/pipewire-pulse.conf.in\n","loc":["services","pipewire","config","pipewire-pulse"],"readOnly":false,"type":"JSON value"},"services.pipewire.enable":{"declarations":["nixos/modules/services/desktops/pipewire/pipewire.nix"],"default":false,"description":"Whether to enable pipewire service.","example":true,"loc":["services","pipewire","enable"],"readOnly":false,"type":"boolean"},"services.pipewire.jack.enable":{"declarations":["nixos/modules/services/desktops/pipewire/pipewire.nix"],"default":false,"description":"Whether to enable JACK audio emulation.","example":true,"loc":["services","pipewire","jack","enable"],"readOnly":false,"type":"boolean"},"services.pipewire.media-session.config.alsa-monitor":{"declarations":["nixos/modules/services/desktops/pipewire/pipewire-media-session.nix"],"default":{},"description":"Configuration for the alsa monitor. For details see\nhttps://gitlab.freedesktop.org/pipewire/media-session/-/blob/0.4.1/src/daemon/media-session.d/alsa-monitor.conf\n","loc":["services","pipewire","media-session","config","alsa-monitor"],"readOnly":false,"type":"JSON value"},"services.pipewire.media-session.config.bluez-monitor":{"declarations":["nixos/modules/services/desktops/pipewire/pipewire-media-session.nix"],"default":{},"description":"Configuration for the bluez5 monitor. For details see\nhttps://gitlab.freedesktop.org/pipewire/media-session/-/blob/0.4.1/src/daemon/media-session.d/bluez-monitor.conf\n","loc":["services","pipewire","media-session","config","bluez-monitor"],"readOnly":false,"type":"JSON value"},"services.pipewire.media-session.config.media-session":{"declarations":["nixos/modules/services/desktops/pipewire/pipewire-media-session.nix"],"default":{},"description":"Configuration for the media session core. For details see\nhttps://gitlab.freedesktop.org/pipewire/media-session/-/blob/0.4.1/src/daemon/media-session.d/media-session.conf\n","loc":["services","pipewire","media-session","config","media-session"],"readOnly":false,"type":"JSON value"},"services.pipewire.media-session.config.v4l2-monitor":{"declarations":["nixos/modules/services/desktops/pipewire/pipewire-media-session.nix"],"default":{},"description":"Configuration for the V4L2 monitor. For details see\nhttps://gitlab.freedesktop.org/pipewire/media-session/-/blob/0.4.1/src/daemon/media-session.d/v4l2-monitor.conf\n","loc":["services","pipewire","media-session","config","v4l2-monitor"],"readOnly":false,"type":"JSON value"},"services.pipewire.media-session.enable":{"declarations":["nixos/modules/services/desktops/pipewire/pipewire-media-session.nix"],"default":false,"description":"Whether to enable the deprecated example Pipewire session manager","loc":["services","pipewire","media-session","enable"],"readOnly":false,"type":"boolean"},"services.pipewire.media-session.package":{"declarations":["nixos/modules/services/desktops/pipewire/pipewire-media-session.nix"],"default":{"_type":"literalExpression","text":"pkgs.pipewire-media-session"},"description":"The pipewire-media-session derivation to use.\n","loc":["services","pipewire","media-session","package"],"readOnly":false,"type":"package"},"services.pipewire.package":{"declarations":["nixos/modules/services/desktops/pipewire/pipewire.nix"],"default":{"_type":"literalExpression","text":"pkgs.pipewire"},"description":"The pipewire derivation to use.\n","loc":["services","pipewire","package"],"readOnly":false,"type":"package"},"services.pipewire.pulse.enable":{"declarations":["nixos/modules/services/desktops/pipewire/pipewire.nix"],"default":false,"description":"Whether to enable PulseAudio server emulation.","example":true,"loc":["services","pipewire","pulse","enable"],"readOnly":false,"type":"boolean"},"services.pipewire.socketActivation":{"declarations":["nixos/modules/services/desktops/pipewire/pipewire.nix"],"default":true,"description":"Automatically run pipewire when connections are made to the pipewire socket.\n","loc":["services","pipewire","socketActivation"],"readOnly":false,"type":"boolean"},"services.pipewire.systemWide":{"declarations":["nixos/modules/services/desktops/pipewire/pipewire.nix"],"default":false,"description":"If true, a system-wide PipeWire service and socket is enabled\nallowing all users in the \"pipewire\" group to use it simultaneously.\nIf false, then user units are used instead, restricting access to\nonly one user.\n\nEnabling system-wide PipeWire is however not recommended and disabled\nby default according to\nhttps://github.com/PipeWire/pipewire/blob/master/NEWS\n","loc":["services","pipewire","systemWide"],"readOnly":false,"type":"boolean"},"services.powerdns-admin.config":{"declarations":["nixos/modules/services/web-apps/powerdns-admin.nix"],"default":"","description":"Configuration python file.\nSee <link xlink:href=\"https://github.com/ngoduykhanh/PowerDNS-Admin/blob/v0.2.4/configs/development.py\">the example configuration</link>\nfor options.\n","example":"BIND_ADDRESS = '127.0.0.1'\nPORT = 8000\nSQLALCHEMY_DATABASE_URI = 'postgresql://powerdnsadmin@/powerdnsadmin?host=/run/postgresql'\n","loc":["services","powerdns-admin","config"],"readOnly":false,"type":"string"},"services.powerdns-admin.enable":{"declarations":["nixos/modules/services/web-apps/powerdns-admin.nix"],"default":false,"description":"Whether to enable the PowerDNS web interface.","example":true,"loc":["services","powerdns-admin","enable"],"readOnly":false,"type":"boolean"},"services.powerdns-admin.extraArgs":{"declarations":["nixos/modules/services/web-apps/powerdns-admin.nix"],"default":[],"description":"Extra arguments passed to powerdns-admin.\n","example":{"_type":"literalExpression","text":"[ \"-b\" \"127.0.0.1:8000\" ]\n"},"loc":["services","powerdns-admin","extraArgs"],"readOnly":false,"type":"list of strings"},"services.powerdns-admin.saltFile":{"declarations":["nixos/modules/services/web-apps/powerdns-admin.nix"],"description":"The salt used for serialization.\nThis should be set, otherwise the default is used.\nSet this to null to ignore this setting and configure it through another way.\n","example":"/etc/powerdns-admin/salt","loc":["services","powerdns-admin","saltFile"],"readOnly":false,"type":"null or path"},"services.powerdns-admin.secretKeyFile":{"declarations":["nixos/modules/services/web-apps/powerdns-admin.nix"],"description":"The secret used to create cookies.\nThis needs to be set, otherwise the default is used and everyone can forge valid login cookies.\nSet this to null to ignore this setting and configure it through another way.\n","example":"/etc/powerdns-admin/secret","loc":["services","powerdns-admin","secretKeyFile"],"readOnly":false,"type":"null or path"},"services.vaultwarden.backupDir":{"declarations":["nixos/modules/services/security/vaultwarden/default.nix"],"default":null,"description":"The directory under which vaultwarden will backup its persistent data.\n","loc":["services","vaultwarden","backupDir"],"readOnly":false,"type":"null or string"},"services.vaultwarden.config":{"declarations":["nixos/modules/services/security/vaultwarden/default.nix"],"default":{},"description":"The configuration of vaultwarden is done through environment variables,\ntherefore the names are converted from camel case (e.g. disable2FARemember)\nto upper case snake case (e.g. DISABLE_2FA_REMEMBER).\nIn this conversion digits (0-9) are handled just like upper case characters,\nso foo2 would be converted to FOO_2.\nNames already in this format remain unchanged, so FOO2 remains FOO2 if passed as such,\neven though foo2 would have been converted to FOO_2.\nThis allows working around any potential future conflicting naming conventions.\n\nBased on the attributes passed to this config option an environment file will be generated\nthat is passed to vaultwarden's systemd service.\n\nThe available configuration options can be found in\n<link xlink:href=\"https://github.com/dani-garcia/vaultwarden/blob/1.24.0/.env.template\">the environment template file</link>.\n","example":{"_type":"literalExpression","text":"{\n  domain = \"https://bw.domain.tld:8443\";\n  signupsAllowed = true;\n  rocketPort = 8222;\n  rocketLog = \"critical\";\n}\n"},"loc":["services","vaultwarden","config"],"readOnly":false,"type":"attribute set of null or boolean or signed integer or strings"},"services.vaultwarden.dbBackend":{"declarations":["nixos/modules/services/security/vaultwarden/default.nix"],"default":"sqlite","description":"Which database backend vaultwarden will be using.\n","loc":["services","vaultwarden","dbBackend"],"readOnly":false,"type":"one of \"sqlite\", \"mysql\", \"postgresql\""},"services.vaultwarden.enable":{"declarations":["nixos/modules/services/security/vaultwarden/default.nix"],"default":false,"description":"Whether to enable vaultwarden.","example":true,"loc":["services","vaultwarden","enable"],"readOnly":false,"type":"boolean"},"services.vaultwarden.environmentFile":{"declarations":["nixos/modules/services/security/vaultwarden/default.nix"],"default":null,"description":"Additional environment file as defined in <citerefentry>\n<refentrytitle>systemd.exec</refentrytitle><manvolnum>5</manvolnum>\n</citerefentry>.\n\nSecrets like <envar>ADMIN_TOKEN</envar> and <envar>SMTP_PASSWORD</envar>\nmay be passed to the service without adding them to the world-readable Nix store.\n\nNote that this file needs to be available on the host on which\n<literal>vaultwarden</literal> is running.\n","example":"/root/vaultwarden.env","loc":["services","vaultwarden","environmentFile"],"readOnly":false,"type":"null or path"},"services.vaultwarden.package":{"declarations":["nixos/modules/services/security/vaultwarden/default.nix"],"default":{"_type":"literalExpression","text":"pkgs.vaultwarden"},"description":"Vaultwarden package to use.","loc":["services","vaultwarden","package"],"readOnly":false,"type":"package"},"services.vaultwarden.webVaultPackage":{"declarations":["nixos/modules/services/security/vaultwarden/default.nix"],"default":{"_type":"literalExpression","text":"pkgs.vaultwarden-vault"},"description":"Web vault package to use.","loc":["services","vaultwarden","webVaultPackage"],"readOnly":false,"type":"package"},"services.xserver.autoRepeatDelay":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":null,"description":"Sets the autorepeat delay (length of time in milliseconds that a key must be depressed before autorepeat starts).\n","loc":["services","xserver","autoRepeatDelay"],"readOnly":false,"type":"null or signed integer"},"services.xserver.autoRepeatInterval":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":null,"description":"Sets the autorepeat interval (length of time in milliseconds that should elapse between autorepeat-generated keystrokes).\n","loc":["services","xserver","autoRepeatInterval"],"readOnly":false,"type":"null or signed integer"},"services.xserver.autorun":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":true,"description":"Whether to start the X server automatically.\n","loc":["services","xserver","autorun"],"readOnly":false,"type":"boolean"},"services.xserver.config":{"declarations":["nixos/modules/services/x11/xserver.nix"],"description":"The contents of the configuration file of the X server\n(<filename>xorg.conf</filename>).\n\nThis option is set by multiple modules, and the configs are\nconcatenated together.\n\nIn Xorg configs the last config entries take precedence,\nso you may want to use <literal>lib.mkAfter</literal> on this option\nto override NixOS's defaults.\n","loc":["services","xserver","config"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.xserver.defaultDepth":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":0,"description":"Default colour depth.","example":8,"loc":["services","xserver","defaultDepth"],"readOnly":false,"type":"signed integer"},"services.xserver.desktopManager.cde.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/cde.nix"],"default":false,"description":"Whether to enable Common Desktop Environment.","example":true,"loc":["services","xserver","desktopManager","cde","enable"],"readOnly":false,"type":"boolean"},"services.xserver.desktopManager.cde.extraPackages":{"declarations":["nixos/modules/services/x11/desktop-managers/cde.nix"],"default":{"_type":"literalExpression","text":"with pkgs.xorg; [\n  xclock bitmap xlsfonts xfd xrefresh xload xwininfo xdpyinfo xwd xwud\n]\n"},"description":"Extra packages to be installed system wide.\n","loc":["services","xserver","desktopManager","cde","extraPackages"],"readOnly":false,"type":"list of packages"},"services.xserver.desktopManager.cinnamon.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/cinnamon.nix"],"default":false,"description":"Whether to enable the cinnamon desktop manager.","example":true,"loc":["services","xserver","desktopManager","cinnamon","enable"],"readOnly":false,"type":"boolean"},"services.xserver.desktopManager.cinnamon.extraGSettingsOverridePackages":{"declarations":["nixos/modules/services/x11/desktop-managers/cinnamon.nix"],"default":[],"description":"List of packages for which gsettings are overridden.","loc":["services","xserver","desktopManager","cinnamon","extraGSettingsOverridePackages"],"readOnly":false,"type":"list of paths"},"services.xserver.desktopManager.cinnamon.extraGSettingsOverrides":{"declarations":["nixos/modules/services/x11/desktop-managers/cinnamon.nix"],"default":"","description":"Additional gsettings overrides.","loc":["services","xserver","desktopManager","cinnamon","extraGSettingsOverrides"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.xserver.desktopManager.cinnamon.sessionPath":{"declarations":["nixos/modules/services/x11/desktop-managers/cinnamon.nix"],"default":[],"description":"Additional list of packages to be added to the session search path.\nUseful for GSettings-conditional autostart.\n\nNote that this should be a last resort; patching the package is preferred (see GPaste).\n","example":{"_type":"literalExpression","text":"[ pkgs.gnome.gpaste ]"},"loc":["services","xserver","desktopManager","cinnamon","sessionPath"],"readOnly":false,"type":"list of packages"},"services.xserver.desktopManager.default":{"declarations":["nixos/modules/services/x11/desktop-managers/default.nix"],"default":null,"description":"<emphasis role=\"strong\">Deprecated</emphasis>, please use <xref linkend=\"opt-services.xserver.displayManager.defaultSession\"/> instead.\n\nDefault desktop manager loaded if none have been chosen.\n","example":"none","loc":["services","xserver","desktopManager","default"],"readOnly":false,"type":"null or string"},"services.xserver.desktopManager.enlightenment.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/enlightenment.nix"],"default":false,"description":"Enable the Enlightenment desktop environment.","loc":["services","xserver","desktopManager","enlightenment","enable"],"readOnly":false,"type":"boolean"},"services.xserver.desktopManager.gnome.debug":{"declarations":["nixos/modules/services/x11/desktop-managers/gnome.nix"],"default":false,"description":"Whether to enable gnome-session debug messages.","example":true,"loc":["services","xserver","desktopManager","gnome","debug"],"readOnly":false,"type":"boolean"},"services.xserver.desktopManager.gnome.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/gnome.nix"],"default":false,"description":"Enable GNOME desktop manager.","loc":["services","xserver","desktopManager","gnome","enable"],"readOnly":false,"type":"boolean"},"services.xserver.desktopManager.gnome.extraGSettingsOverridePackages":{"declarations":["nixos/modules/services/x11/desktop-managers/gnome.nix"],"default":[],"description":"List of packages for which gsettings are overridden.","loc":["services","xserver","desktopManager","gnome","extraGSettingsOverridePackages"],"readOnly":false,"type":"list of paths"},"services.xserver.desktopManager.gnome.extraGSettingsOverrides":{"declarations":["nixos/modules/services/x11/desktop-managers/gnome.nix"],"default":"","description":"Additional gsettings overrides.","loc":["services","xserver","desktopManager","gnome","extraGSettingsOverrides"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.xserver.desktopManager.gnome.flashback.customSessions":{"declarations":["nixos/modules/services/x11/desktop-managers/gnome.nix"],"default":[],"description":"Other GNOME Flashback sessions to enable.","loc":["services","xserver","desktopManager","gnome","flashback","customSessions"],"readOnly":false,"type":"list of submodules"},"services.xserver.desktopManager.gnome.flashback.customSessions.*.enableGnomePanel":{"declarations":["nixos/modules/services/x11/desktop-managers/gnome.nix"],"default":true,"description":"Whether to enable the GNOME panel in this session.","example":false,"loc":["services","xserver","desktopManager","gnome","flashback","customSessions","*","enableGnomePanel"],"readOnly":false,"type":"boolean"},"services.xserver.desktopManager.gnome.flashback.customSessions.*.wmCommand":{"declarations":["nixos/modules/services/x11/desktop-managers/gnome.nix"],"description":"The executable of the window manager to use.","example":{"_type":"literalExpression","text":"\"${pkgs.haskellPackages.xmonad}/bin/xmonad\""},"loc":["services","xserver","desktopManager","gnome","flashback","customSessions","*","wmCommand"],"readOnly":false,"type":"string"},"services.xserver.desktopManager.gnome.flashback.customSessions.*.wmLabel":{"declarations":["nixos/modules/services/x11/desktop-managers/gnome.nix"],"description":"The name of the window manager to show in the session chooser.","example":"XMonad","loc":["services","xserver","desktopManager","gnome","flashback","customSessions","*","wmLabel"],"readOnly":false,"type":"string"},"services.xserver.desktopManager.gnome.flashback.customSessions.*.wmName":{"declarations":["nixos/modules/services/x11/desktop-managers/gnome.nix"],"description":"A unique identifier for the window manager.","example":"xmonad","loc":["services","xserver","desktopManager","gnome","flashback","customSessions","*","wmName"],"readOnly":false,"type":"string matching the pattern [a-zA-Z0-9_-]+"},"services.xserver.desktopManager.gnome.flashback.enableMetacity":{"declarations":["nixos/modules/services/x11/desktop-managers/gnome.nix"],"default":false,"description":"Whether to enable the standard GNOME Flashback session with Metacity.","example":true,"loc":["services","xserver","desktopManager","gnome","flashback","enableMetacity"],"readOnly":false,"type":"boolean"},"services.xserver.desktopManager.gnome.flashback.panelModulePackages":{"declarations":["nixos/modules/services/x11/desktop-managers/gnome.nix"],"default":{"_type":"literalExpression","text":"[ pkgs.gnome.gnome-applets ]"},"description":"Packages containing modules that should be made available to <literal>gnome-panel</literal> (usually for applets).\n\nIf you're packaging something to use here, please install the modules in <literal>$out/lib/gnome-panel/modules</literal>.\n","loc":["services","xserver","desktopManager","gnome","flashback","panelModulePackages"],"readOnly":false,"type":"list of paths"},"services.xserver.desktopManager.gnome.sessionPath":{"declarations":["nixos/modules/services/x11/desktop-managers/gnome.nix"],"default":[],"description":"Additional list of packages to be added to the session search path.\nUseful for GNOME Shell extensions or GSettings-conditional autostart.\n\nNote that this should be a last resort; patching the package is preferred (see GPaste).\n","example":{"_type":"literalExpression","text":"[ pkgs.gnome.gpaste ]"},"loc":["services","xserver","desktopManager","gnome","sessionPath"],"readOnly":false,"type":"list of packages"},"services.xserver.desktopManager.kodi.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/kodi.nix"],"default":false,"description":"Enable the kodi multimedia center.","loc":["services","xserver","desktopManager","kodi","enable"],"readOnly":false,"type":"boolean"},"services.xserver.desktopManager.kodi.package":{"declarations":["nixos/modules/services/x11/desktop-managers/kodi.nix"],"default":{"_type":"literalExpression","text":"pkgs.kodi"},"description":"Package that should be used for Kodi.\n","example":{"_type":"literalExpression","text":"pkgs.kodi.withPackages (p: with p; [ jellyfin pvr-iptvsimple vfs-sftp ])"},"loc":["services","xserver","desktopManager","kodi","package"],"readOnly":false,"type":"package"},"services.xserver.desktopManager.lumina.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/lumina.nix"],"default":false,"description":"Enable the Lumina desktop manager","loc":["services","xserver","desktopManager","lumina","enable"],"readOnly":false,"type":"boolean"},"services.xserver.desktopManager.lxqt.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/lxqt.nix"],"default":false,"description":"Enable the LXQt desktop manager","loc":["services","xserver","desktopManager","lxqt","enable"],"readOnly":false,"type":"boolean"},"services.xserver.desktopManager.mate.debug":{"declarations":["nixos/modules/services/x11/desktop-managers/mate.nix"],"default":false,"description":"Whether to enable mate-session debug messages.","example":true,"loc":["services","xserver","desktopManager","mate","debug"],"readOnly":false,"type":"boolean"},"services.xserver.desktopManager.mate.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/mate.nix"],"default":false,"description":"Enable the MATE desktop environment","loc":["services","xserver","desktopManager","mate","enable"],"readOnly":false,"type":"boolean"},"services.xserver.desktopManager.pantheon.debug":{"declarations":["nixos/modules/services/x11/desktop-managers/pantheon.nix"],"default":false,"description":"Whether to enable gnome-session debug messages.","example":true,"loc":["services","xserver","desktopManager","pantheon","debug"],"readOnly":false,"type":"boolean"},"services.xserver.desktopManager.pantheon.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/pantheon.nix"],"default":false,"description":"Enable the pantheon desktop manager","loc":["services","xserver","desktopManager","pantheon","enable"],"readOnly":false,"type":"boolean"},"services.xserver.desktopManager.pantheon.extraGSettingsOverridePackages":{"declarations":["nixos/modules/services/x11/desktop-managers/pantheon.nix"],"default":[],"description":"List of packages for which gsettings are overridden.","loc":["services","xserver","desktopManager","pantheon","extraGSettingsOverridePackages"],"readOnly":false,"type":"list of paths"},"services.xserver.desktopManager.pantheon.extraGSettingsOverrides":{"declarations":["nixos/modules/services/x11/desktop-managers/pantheon.nix"],"default":"","description":"Additional gsettings overrides.","loc":["services","xserver","desktopManager","pantheon","extraGSettingsOverrides"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.xserver.desktopManager.pantheon.extraSwitchboardPlugs":{"declarations":["nixos/modules/services/x11/desktop-managers/pantheon.nix"],"default":null,"description":"Plugs to add to Switchboard.","loc":["services","xserver","desktopManager","pantheon","extraSwitchboardPlugs"],"readOnly":false,"type":"null or list of packages"},"services.xserver.desktopManager.pantheon.extraWingpanelIndicators":{"declarations":["nixos/modules/services/x11/desktop-managers/pantheon.nix"],"default":null,"description":"Indicators to add to Wingpanel.","loc":["services","xserver","desktopManager","pantheon","extraWingpanelIndicators"],"readOnly":false,"type":"null or list of packages"},"services.xserver.desktopManager.pantheon.sessionPath":{"declarations":["nixos/modules/services/x11/desktop-managers/pantheon.nix"],"default":[],"description":"Additional list of packages to be added to the session search path.\nUseful for GSettings-conditional autostart.\n\nNote that this should be a last resort; patching the package is preferred (see GPaste).\n","example":{"_type":"literalExpression","text":"[ pkgs.gnome.gpaste ]"},"loc":["services","xserver","desktopManager","pantheon","sessionPath"],"readOnly":false,"type":"list of packages"},"services.xserver.desktopManager.plasma5.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/plasma5.nix"],"default":false,"description":"Enable the Plasma 5 (KDE 5) desktop environment.","loc":["services","xserver","desktopManager","plasma5","enable"],"readOnly":false,"type":"boolean"},"services.xserver.desktopManager.plasma5.mobile.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/plasma5.nix"],"default":false,"description":"Enable support for running the Plasma Mobile shell.\n","loc":["services","xserver","desktopManager","plasma5","mobile","enable"],"readOnly":false,"type":"boolean"},"services.xserver.desktopManager.plasma5.mobile.installRecommendedSoftware":{"declarations":["nixos/modules/services/x11/desktop-managers/plasma5.nix"],"default":true,"description":"Installs software recommended for use with Plasma Mobile, but which\nis not strictly required for Plasma Mobile to run.\n","loc":["services","xserver","desktopManager","plasma5","mobile","installRecommendedSoftware"],"readOnly":false,"type":"boolean"},"services.xserver.desktopManager.plasma5.phononBackend":{"declarations":["nixos/modules/services/x11/desktop-managers/plasma5.nix"],"default":"gstreamer","description":"Phonon audio backend to install.","example":"vlc","loc":["services","xserver","desktopManager","plasma5","phononBackend"],"readOnly":false,"type":"one of \"gstreamer\", \"vlc\""},"services.xserver.desktopManager.plasma5.runUsingSystemd":{"declarations":["nixos/modules/services/x11/desktop-managers/plasma5.nix"],"default":false,"description":"Use systemd to manage the Plasma session","loc":["services","xserver","desktopManager","plasma5","runUsingSystemd"],"readOnly":false,"type":"boolean"},"services.xserver.desktopManager.plasma5.supportDDC":{"declarations":["nixos/modules/services/x11/desktop-managers/plasma5.nix"],"default":false,"description":"Support setting monitor brightness via DDC.\n</para>\n<para>\nThis is not needed for controlling brightness of the internal monitor\nof a laptop and as it is considered experimental by upstream, it is\ndisabled by default.\n","loc":["services","xserver","desktopManager","plasma5","supportDDC"],"readOnly":false,"type":"boolean"},"services.xserver.desktopManager.plasma5.useQtScaling":{"declarations":["nixos/modules/services/x11/desktop-managers/plasma5.nix"],"default":false,"description":"Enable HiDPI scaling in Qt.","loc":["services","xserver","desktopManager","plasma5","useQtScaling"],"readOnly":false,"type":"boolean"},"services.xserver.desktopManager.retroarch.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/retroarch.nix"],"default":false,"description":"Whether to enable RetroArch.","example":true,"loc":["services","xserver","desktopManager","retroarch","enable"],"readOnly":false,"type":"boolean"},"services.xserver.desktopManager.retroarch.extraArgs":{"declarations":["nixos/modules/services/x11/desktop-managers/retroarch.nix"],"default":[],"description":"Extra arguments to pass to RetroArch.","example":["--verbose","--host"],"loc":["services","xserver","desktopManager","retroarch","extraArgs"],"readOnly":false,"type":"list of strings"},"services.xserver.desktopManager.retroarch.package":{"declarations":["nixos/modules/services/x11/desktop-managers/retroarch.nix"],"default":{"_type":"literalExpression","text":"pkgs.retroarch"},"description":"RetroArch package to use.","example":{"_type":"literalExpression","text":"pkgs.retroarch-full"},"loc":["services","xserver","desktopManager","retroarch","package"],"readOnly":false,"type":"package"},"services.xserver.desktopManager.surf-display.defaultWwwUri":{"declarations":["nixos/modules/services/x11/desktop-managers/surf-display.nix"],"default":{"_type":"literalExpression","text":"\"${pkgs.surf-display}/share/surf-display/empty-page.html\""},"description":"Default URI to display.","example":"https://www.example.com/","loc":["services","xserver","desktopManager","surf-display","defaultWwwUri"],"readOnly":false,"type":"string"},"services.xserver.desktopManager.surf-display.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/surf-display.nix"],"default":false,"description":"Whether to enable surf-display as a kiosk browser session.","example":true,"loc":["services","xserver","desktopManager","surf-display","enable"],"readOnly":false,"type":"boolean"},"services.xserver.desktopManager.surf-display.extraConfig":{"declarations":["nixos/modules/services/x11/desktop-managers/surf-display.nix"],"default":"","description":"Extra configuration options to append to <literal>/etc/default/surf-display</literal>.\n","example":"# Enforce fixed resolution for all displays (default: not set):\nDEFAULT_RESOLUTION=\"1920x1080\"\n\n# HTTP proxy URL, if needed (default: not set).\nHTTP_PROXY_URL=\"http://webcache:3128\"\n\n# Configure individual display screens with host specific parameters:\nDISPLAYS['display-host-0']=\"www_uri=https://www.displayserver.comany.net/display-1/index.html\"\nDISPLAYS['display-host-1']=\"www_uri=https://www.displayserver.comany.net/display-2/index.html\"\nDISPLAYS['display-host-2']=\"www_uri=https://www.displayserver.comany.net/display-3/index.html|res=1920x1280\"\nDISPLAYS['display-host-3']=\"www_uri=https://www.displayserver.comany.net/display-4/index.html\"|res=1280x1024\"\nDISPLAYS['display-host-local-file']=\"www_uri=file:///usr/share/doc/surf-display/empty-page.html\"\n","loc":["services","xserver","desktopManager","surf-display","extraConfig"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.xserver.desktopManager.surf-display.hideIdlePointer":{"declarations":["nixos/modules/services/x11/desktop-managers/surf-display.nix"],"default":"yes","description":"Hide idle mouse pointer.","example":"no","loc":["services","xserver","desktopManager","surf-display","hideIdlePointer"],"readOnly":false,"type":"string"},"services.xserver.desktopManager.surf-display.inactivityInterval":{"declarations":["nixos/modules/services/x11/desktop-managers/surf-display.nix"],"default":300,"description":"Setting for internal inactivity timer to restart surf-display if the\nuser goes inactive/idle to get a fresh session for the next user of\nthe kiosk.\n\nIf this value is set to zero, the whole feature of restarting due to\ninactivity is disabled.\n","example":0,"loc":["services","xserver","desktopManager","surf-display","inactivityInterval"],"readOnly":false,"type":"signed integer"},"services.xserver.desktopManager.surf-display.pointerButtonMap":{"declarations":["nixos/modules/services/x11/desktop-managers/surf-display.nix"],"default":"1 0 0 4 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0","description":"Disable right and middle pointer device click in browser sessions\nwhile keeping scrolling wheels' functionality intact. See pointer\nsubcommand on <literal>man xmodmap</literal> for details.\n","loc":["services","xserver","desktopManager","surf-display","pointerButtonMap"],"readOnly":false,"type":"string"},"services.xserver.desktopManager.surf-display.screensaverSettings":{"declarations":["nixos/modules/services/x11/desktop-managers/surf-display.nix"],"default":"","description":"Screensaver settings, see <literal>man 1 xset</literal> for possible options.\n","loc":["services","xserver","desktopManager","surf-display","screensaverSettings"],"readOnly":false,"type":"strings concatenated with \" \""},"services.xserver.desktopManager.wallpaper.combineScreens":{"declarations":["nixos/modules/services/x11/desktop-managers/default.nix"],"default":false,"description":"When set to <literal>true</literal> the wallpaper will stretch across all screens.\nWhen set to <literal>false</literal> the wallpaper is duplicated to all screens.\n","loc":["services","xserver","desktopManager","wallpaper","combineScreens"],"readOnly":false,"type":"boolean"},"services.xserver.desktopManager.wallpaper.mode":{"declarations":["nixos/modules/services/x11/desktop-managers/default.nix"],"default":"scale","description":"The file <filename>~/.background-image</filename> is used as a background image.\nThis option specifies the placement of this image onto your desktop.\n\nPossible values:\n<literal>center</literal>: Center the image on the background. If it is too small, it will be surrounded by a black border.\n<literal>fill</literal>: Like <literal>scale</literal>, but preserves aspect ratio by zooming the image until it fits. Either a horizontal or a vertical part of the image will be cut off.\n<literal>max</literal>: Like <literal>fill</literal>, but scale the image to the maximum size that fits the screen with black borders on one side.\n<literal>scale</literal>: Fit the file into the background without repeating it, cutting off stuff or using borders. But the aspect ratio is not preserved either.\n<literal>tile</literal>: Tile (repeat) the image in case it is too small for the screen.\n","example":"fill","loc":["services","xserver","desktopManager","wallpaper","mode"],"readOnly":false,"type":"one of \"center\", \"fill\", \"max\", \"scale\", \"tile\""},"services.xserver.desktopManager.xfce.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/xfce.nix"],"default":false,"description":"Enable the Xfce desktop environment.","loc":["services","xserver","desktopManager","xfce","enable"],"readOnly":false,"type":"boolean"},"services.xserver.desktopManager.xfce.enableXfwm":{"declarations":["nixos/modules/services/x11/desktop-managers/xfce.nix"],"default":true,"description":"Enable the XFWM (default) window manager.","loc":["services","xserver","desktopManager","xfce","enableXfwm"],"readOnly":false,"type":"boolean"},"services.xserver.desktopManager.xfce.noDesktop":{"declarations":["nixos/modules/services/x11/desktop-managers/xfce.nix"],"default":false,"description":"Don't install XFCE desktop components (xfdesktop and panel).","loc":["services","xserver","desktopManager","xfce","noDesktop"],"readOnly":false,"type":"boolean"},"services.xserver.desktopManager.xfce.thunarPlugins":{"declarations":["nixos/modules/services/x11/desktop-managers/xfce.nix"],"default":[],"description":"A list of plugin that should be installed with Thunar.\n","example":{"_type":"literalExpression","text":"[ pkgs.xfce.thunar-archive-plugin ]"},"loc":["services","xserver","desktopManager","xfce","thunarPlugins"],"readOnly":false,"type":"list of packages"},"services.xserver.desktopManager.xterm.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/xterm.nix"],"default":{"_type":"literalExpression","text":"versionOlder config.system.stateVersion \"19.09\" && config.services.xserver.enable;"},"description":"Enable a xterm terminal as a desktop manager.","loc":["services","xserver","desktopManager","xterm","enable"],"readOnly":false,"type":"boolean"},"services.xserver.deviceSection":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Contents of the first Device section of the X server configuration file.","example":"VideoRAM 131072","loc":["services","xserver","deviceSection"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.xserver.display":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":0,"description":"Display number for the X server.","loc":["services","xserver","display"],"readOnly":false,"type":"null or signed integer"},"services.xserver.displayManager.autoLogin":{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":{},"description":"Auto login configuration attrset.\n","loc":["services","xserver","displayManager","autoLogin"],"readOnly":false,"type":"submodule"},"services.xserver.displayManager.autoLogin.enable":{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":{"_type":"literalExpression","text":"config.services.xserver.displayManager.autoLogin.user != null"},"description":"Automatically log in as <option>autoLogin.user</option>.\n","loc":["services","xserver","displayManager","autoLogin","enable"],"readOnly":false,"type":"boolean"},"services.xserver.displayManager.autoLogin.user":{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":null,"description":"User to be used for the automatic login.\n","loc":["services","xserver","displayManager","autoLogin","user"],"readOnly":false,"type":"null or string"},"services.xserver.displayManager.defaultSession":{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":{"_type":"literalDocBook","text":"Taken from display manager settings or window manager settings, if either is set.\n"},"description":"Graphical session to pre-select in the session chooser (only effective for GDM, LightDM and SDDM).\n\nOn GDM, LightDM and SDDM, it will also be used as a session for auto-login.\n","example":"gnome","loc":["services","xserver","displayManager","defaultSession"],"readOnly":false,"type":"session name"},"services.xserver.displayManager.hiddenUsers":{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":["nobody"],"description":"A list of users which will not be shown in the display manager.\n","loc":["services","xserver","displayManager","hiddenUsers"],"readOnly":false,"type":"list of strings"},"services.xserver.displayManager.job.environment":{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":{},"description":"Additional environment variables needed by the display manager.","loc":["services","xserver","displayManager","job","environment"],"readOnly":false,"type":"attribute set of unspecifieds"},"services.xserver.displayManager.job.execCmd":{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"description":"Command to start the display manager.","example":{"_type":"literalExpression","text":"\"${pkgs.lightdm}/bin/lightdm\""},"loc":["services","xserver","displayManager","job","execCmd"],"readOnly":false,"type":"string"},"services.xserver.displayManager.job.logToFile":{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":false,"description":"Whether the display manager redirects the output of the\nsession script to <filename>~/.xsession-errors</filename>.\n","loc":["services","xserver","displayManager","job","logToFile"],"readOnly":false,"type":"boolean"},"services.xserver.displayManager.job.logToJournal":{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":true,"description":"Whether the display manager redirects the output of the\nsession script to the systemd journal.\n","loc":["services","xserver","displayManager","job","logToJournal"],"readOnly":false,"type":"boolean"},"services.xserver.displayManager.job.preStart":{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":"","description":"Script executed before the display manager is started.","example":"rm -f /var/log/my-display-manager.log","loc":["services","xserver","displayManager","job","preStart"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.xserver.displayManager.session":{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":[],"description":"List of sessions supported with the command used to start each\nsession.  Each session script can set the\n<varname>waitPID</varname> shell variable to make this script\nwait until the end of the user session.  Each script is used\nto define either a window manager or a desktop manager.  These\ncan be differentiated by setting the attribute\n<varname>manage</varname> either to <literal>\"window\"</literal>\nor <literal>\"desktop\"</literal>.\n\nThe list of desktop manager and window manager should appear\ninside the display manager with the desktop manager name\nfollowed by the window manager name.\n","example":{"_type":"literalExpression","text":"[ { manage = \"desktop\";\n    name = \"xterm\";\n    start = ''\n      ${pkgs.xterm}/bin/xterm -ls &\n      waitPID=$!\n    '';\n  }\n]\n"},"loc":["services","xserver","displayManager","session"],"readOnly":false,"type":"unspecified"},"services.xserver.displayManager.sessionCommands":{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":"","description":"Shell commands executed just before the window or desktop manager is\nstarted. These commands are not currently sourced for Wayland sessions.\n","example":"xmessage \"Hello World!\" &\n","loc":["services","xserver","displayManager","sessionCommands"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.xserver.displayManager.sessionPackages":{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":[],"description":"A list of packages containing x11 or wayland session files to be passed to the display manager.\n","loc":["services","xserver","displayManager","sessionPackages"],"readOnly":false,"type":"list of package with provided sessionss"},"services.xserver.displayManager.setupCommands":{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":"","description":"Shell commands executed just after the X server has started.\n\nThis option is only effective for display managers for which this feature\nis supported; currently these are LightDM, GDM and SDDM.\n","loc":["services","xserver","displayManager","setupCommands"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.xserver.displayManager.xserverArgs":{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":[],"description":"List of arguments for the X server.","example":["-ac","-logverbose","-verbose","-nolisten tcp"],"loc":["services","xserver","displayManager","xserverArgs"],"readOnly":false,"type":"list of strings"},"services.xserver.displayManager.xserverBin":{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"description":"Path to the X server used by display managers.","loc":["services","xserver","displayManager","xserverBin"],"readOnly":false,"type":"path"},"services.xserver.dpi":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":null,"description":"Force global DPI resolution to use for X server. It's recommended to\nuse this only when DPI is detected incorrectly; also consider using\n<literal>Monitor</literal> section in configuration file instead.\n","loc":["services","xserver","dpi"],"readOnly":false,"type":"null or signed integer"},"services.xserver.enable":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":false,"description":"Whether to enable the X server.\n","loc":["services","xserver","enable"],"readOnly":false,"type":"boolean"},"services.xserver.enableCtrlAltBackspace":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":false,"description":"Whether to enable the DontZap option, which binds Ctrl+Alt+Backspace\nto forcefully kill X. This can lead to data loss and is disabled\nby default.\n","loc":["services","xserver","enableCtrlAltBackspace"],"readOnly":false,"type":"boolean"},"services.xserver.enableTCP":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":false,"description":"Whether to allow the X server to accept TCP connections.\n","loc":["services","xserver","enableTCP"],"readOnly":false,"type":"boolean"},"services.xserver.exportConfiguration":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":false,"description":"Whether to symlink the X server configuration under\n<filename>/etc/X11/xorg.conf</filename>.\n","loc":["services","xserver","exportConfiguration"],"readOnly":false,"type":"boolean"},"services.xserver.extraConfig":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Additional contents (sections) included in the X server configuration file","loc":["services","xserver","extraConfig"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.xserver.extraDisplaySettings":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Lines to be added to every Display subsection of the Screen section.","example":"Virtual 2048 2048","loc":["services","xserver","extraDisplaySettings"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.xserver.filesSection":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Contents of the first <literal>Files</literal> section of the X server configuration file.","example":"FontPath \"/path/to/my/fonts\"","loc":["services","xserver","filesSection"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.xserver.fontPath":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":null,"description":"Set the X server FontPath. Defaults to null, which\nmeans the compiled in defaults will be used. See\nman xorg.conf for details.\n","example":"unix/:7100","loc":["services","xserver","fontPath"],"readOnly":false,"type":"null or string"},"services.xserver.inputClassSections":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":[],"description":"Content of additional InputClass sections of the X server configuration file.","example":{"_type":"literalExpression","text":"[ ''\n    Identifier      \"Trackpoint Wheel Emulation\"\n    MatchProduct    \"ThinkPad USB Keyboard with TrackPoint\"\n    Option          \"EmulateWheel\"          \"true\"\n    Option          \"EmulateWheelButton\"    \"2\"\n    Option          \"Emulate3Buttons\"       \"false\"\n  ''\n]\n"},"loc":["services","xserver","inputClassSections"],"readOnly":false,"type":"list of strings concatenated with \"\\n\"s"},"services.xserver.layout":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"us","description":"Keyboard layout, or multiple keyboard layouts separated by commas.\n","loc":["services","xserver","layout"],"readOnly":false,"type":"string"},"services.xserver.logFile":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"/dev/null","description":"Controls the file Xorg logs to.\n\nThe default of <literal>/dev/null</literal> is set so that systemd services (like <literal>displayManagers</literal>) only log to the journal and don't create their own log files.\n\nSetting this to <literal>null</literal> will not pass the <literal>-logfile</literal> argument to Xorg which allows it to log to its default logfile locations instead (see <literal>man Xorg</literal>). You probably only want this behaviour when running Xorg manually (e.g. via <literal>startx</literal>).\n","example":"/var/log/Xorg.0.log","loc":["services","xserver","logFile"],"readOnly":false,"type":"null or string"},"services.xserver.moduleSection":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Contents of the Module section of the X server configuration file.","example":"SubSection \"extmod\"\nEndSubsection\n","loc":["services","xserver","moduleSection"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.xserver.modules":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":[],"description":"Packages to be added to the module search path of the X server.","example":{"_type":"literalExpression","text":"[ pkgs.xf86_input_wacom ]"},"loc":["services","xserver","modules"],"readOnly":false,"type":"list of paths"},"services.xserver.monitorSection":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Contents of the first Monitor section of the X server configuration file.","example":"HorizSync 28-49","loc":["services","xserver","monitorSection"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.xserver.resolutions":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":[],"description":"The screen resolutions for the X server.  The first element\nis the default resolution.  If this list is empty, the X\nserver will automatically configure the resolution.\n","example":[{"x":1600,"y":1200},{"x":1024,"y":786}],"loc":["services","xserver","resolutions"],"readOnly":false,"type":"list of attribute sets"},"services.xserver.screenSection":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Contents of the first Screen section of the X server configuration file.","example":"Option \"RandRRotation\" \"on\"\n","loc":["services","xserver","screenSection"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.xserver.serverFlagsSection":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Contents of the ServerFlags section of the X server configuration file.","example":"Option \"BlankTime\" \"0\"\nOption \"StandbyTime\" \"0\"\nOption \"SuspendTime\" \"0\"\nOption \"OffTime\" \"0\"\n","loc":["services","xserver","serverFlagsSection"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.xserver.serverLayoutSection":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Contents of the ServerLayout section of the X server configuration file.","example":"Option \"AIGLX\" \"true\"\n","loc":["services","xserver","serverLayoutSection"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.xserver.terminateOnReset":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":true,"description":"Whether to terminate X upon server reset.\n","loc":["services","xserver","terminateOnReset"],"readOnly":false,"type":"boolean"},"services.xserver.tty":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":7,"description":"Virtual console for the X server.","loc":["services","xserver","tty"],"readOnly":false,"type":"null or signed integer"},"services.xserver.updateDbusEnvironment":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":false,"description":"Whether to update the DBus activation environment after launching the\ndesktop manager.\n","loc":["services","xserver","updateDbusEnvironment"],"readOnly":false,"type":"boolean"},"services.xserver.useGlamor":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":false,"description":"Whether to use the Glamor module for 2D acceleration,\nif possible.\n","loc":["services","xserver","useGlamor"],"readOnly":false,"type":"boolean"},"services.xserver.verbose":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":3,"description":"Controls verbosity of X logging.\n","example":7,"loc":["services","xserver","verbose"],"readOnly":false,"type":"null or signed integer"},"services.xserver.videoDriver":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":null,"description":"The name of the video driver for your graphics card.  This\noption is obsolete; please set the\n<option>services.xserver.videoDrivers</option> instead.\n","example":"i810","loc":["services","xserver","videoDriver"],"readOnly":false,"type":"null or string"},"services.xserver.videoDrivers":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":["amdgpu","radeon","nouveau","modesetting","fbdev"],"description":"The names of the video drivers the configuration\nsupports. They will be tried in order until one that\nsupports your card is found.\nDon't combine those with \"incompatible\" OpenGL implementations,\ne.g. free ones (mesa-based) with proprietary ones.\n\nFor unfree \"nvidia*\", the supported GPU lists are on\nhttps://www.nvidia.com/object/unix.html\n","example":["nvidia","nvidiaLegacy390","nvidiaLegacy340","nvidiaLegacy304","amdgpu-pro"],"loc":["services","xserver","videoDrivers"],"readOnly":false,"relatedPackages":"<itemizedlist><listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videoamdgpu&amp;sort=relevance&amp;query=xorg.xf86videoamdgpu\">\n      <literal>amdgpu aka pkgs.xorg.xf86videoamdgpu</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videoapm&amp;sort=relevance&amp;query=xorg.xf86videoapm\">\n      <literal>apm aka pkgs.xorg.xf86videoapm</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videoark&amp;sort=relevance&amp;query=xorg.xf86videoark\">\n      <literal>ark aka pkgs.xorg.xf86videoark</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videoast&amp;sort=relevance&amp;query=xorg.xf86videoast\">\n      <literal>ast aka pkgs.xorg.xf86videoast</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videoati&amp;sort=relevance&amp;query=xorg.xf86videoati\">\n      <literal>ati aka pkgs.xorg.xf86videoati</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videochips&amp;sort=relevance&amp;query=xorg.xf86videochips\">\n      <literal>chips aka pkgs.xorg.xf86videochips</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videocirrus&amp;sort=relevance&amp;query=xorg.xf86videocirrus\">\n      <literal>cirrus aka pkgs.xorg.xf86videocirrus</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videodummy&amp;sort=relevance&amp;query=xorg.xf86videodummy\">\n      <literal>dummy aka pkgs.xorg.xf86videodummy</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videofbdev&amp;sort=relevance&amp;query=xorg.xf86videofbdev\">\n      <literal>fbdev aka pkgs.xorg.xf86videofbdev</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videogeode&amp;sort=relevance&amp;query=xorg.xf86videogeode\">\n      <literal>geode aka pkgs.xorg.xf86videogeode</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videoglide&amp;sort=relevance&amp;query=xorg.xf86videoglide\">\n      <literal>glide aka pkgs.xorg.xf86videoglide</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videoglint&amp;sort=relevance&amp;query=xorg.xf86videoglint\">\n      <literal>glint aka pkgs.xorg.xf86videoglint</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videoi128&amp;sort=relevance&amp;query=xorg.xf86videoi128\">\n      <literal>i128 aka pkgs.xorg.xf86videoi128</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videoi740&amp;sort=relevance&amp;query=xorg.xf86videoi740\">\n      <literal>i740 aka pkgs.xorg.xf86videoi740</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videointel&amp;sort=relevance&amp;query=xorg.xf86videointel\">\n      <literal>intel aka pkgs.xorg.xf86videointel</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videomga&amp;sort=relevance&amp;query=xorg.xf86videomga\">\n      <literal>mga aka pkgs.xorg.xf86videomga</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videoneomagic&amp;sort=relevance&amp;query=xorg.xf86videoneomagic\">\n      <literal>neomagic aka pkgs.xorg.xf86videoneomagic</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videonewport&amp;sort=relevance&amp;query=xorg.xf86videonewport\">\n      <literal>newport aka pkgs.xorg.xf86videonewport</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videonouveau&amp;sort=relevance&amp;query=xorg.xf86videonouveau\">\n      <literal>nouveau aka pkgs.xorg.xf86videonouveau</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videonv&amp;sort=relevance&amp;query=xorg.xf86videonv\">\n      <literal>nv aka pkgs.xorg.xf86videonv</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videoomap&amp;sort=relevance&amp;query=xorg.xf86videoomap\">\n      <literal>omap aka pkgs.xorg.xf86videoomap</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videoopenchrome&amp;sort=relevance&amp;query=xorg.xf86videoopenchrome\">\n      <literal>openchrome aka pkgs.xorg.xf86videoopenchrome</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videoqxl&amp;sort=relevance&amp;query=xorg.xf86videoqxl\">\n      <literal>qxl aka pkgs.xorg.xf86videoqxl</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videor128&amp;sort=relevance&amp;query=xorg.xf86videor128\">\n      <literal>r128 aka pkgs.xorg.xf86videor128</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videorendition&amp;sort=relevance&amp;query=xorg.xf86videorendition\">\n      <literal>rendition aka pkgs.xorg.xf86videorendition</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videos3virge&amp;sort=relevance&amp;query=xorg.xf86videos3virge\">\n      <literal>s3virge aka pkgs.xorg.xf86videos3virge</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videosavage&amp;sort=relevance&amp;query=xorg.xf86videosavage\">\n      <literal>savage aka pkgs.xorg.xf86videosavage</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videosiliconmotion&amp;sort=relevance&amp;query=xorg.xf86videosiliconmotion\">\n      <literal>siliconmotion aka pkgs.xorg.xf86videosiliconmotion</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videosis&amp;sort=relevance&amp;query=xorg.xf86videosis\">\n      <literal>sis aka pkgs.xorg.xf86videosis</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videosisusb&amp;sort=relevance&amp;query=xorg.xf86videosisusb\">\n      <literal>sisusb aka pkgs.xorg.xf86videosisusb</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videosuncg6&amp;sort=relevance&amp;query=xorg.xf86videosuncg6\">\n      <literal>suncg6 aka pkgs.xorg.xf86videosuncg6</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videosunffb&amp;sort=relevance&amp;query=xorg.xf86videosunffb\">\n      <literal>sunffb aka pkgs.xorg.xf86videosunffb</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videosunleo&amp;sort=relevance&amp;query=xorg.xf86videosunleo\">\n      <literal>sunleo aka pkgs.xorg.xf86videosunleo</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videotdfx&amp;sort=relevance&amp;query=xorg.xf86videotdfx\">\n      <literal>tdfx aka pkgs.xorg.xf86videotdfx</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videotga&amp;sort=relevance&amp;query=xorg.xf86videotga\">\n      <literal>tga aka pkgs.xorg.xf86videotga</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videotrident&amp;sort=relevance&amp;query=xorg.xf86videotrident\">\n      <literal>trident aka pkgs.xorg.xf86videotrident</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videov4l&amp;sort=relevance&amp;query=xorg.xf86videov4l\">\n      <literal>v4l aka pkgs.xorg.xf86videov4l</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videovboxvideo&amp;sort=relevance&amp;query=xorg.xf86videovboxvideo\">\n      <literal>vboxvideo aka pkgs.xorg.xf86videovboxvideo</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videovesa&amp;sort=relevance&amp;query=xorg.xf86videovesa\">\n      <literal>vesa aka pkgs.xorg.xf86videovesa</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videovmware&amp;sort=relevance&amp;query=xorg.xf86videovmware\">\n      <literal>vmware aka pkgs.xorg.xf86videovmware</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videovoodoo&amp;sort=relevance&amp;query=xorg.xf86videovoodoo\">\n      <literal>voodoo aka pkgs.xorg.xf86videovoodoo</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videowsfb&amp;sort=relevance&amp;query=xorg.xf86videowsfb\">\n      <literal>wsfb aka pkgs.xorg.xf86videowsfb</literal>\n    </link>\n  </para>\n  \n</listitem>\n\n<listitem>\n  <para>\n    <link xlink:href=\"https://search.nixos.org/packages?show=xorg.xf86videoxgi&amp;sort=relevance&amp;query=xorg.xf86videoxgi\">\n      <literal>xgi aka pkgs.xorg.xf86videoxgi</literal>\n    </link>\n  </para>\n  \n</listitem>\n</itemizedlist>","type":"list of strings"},"services.xserver.virtualScreen":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":null,"description":"Virtual screen size for Xrandr.\n","example":{"x":2048,"y":2048},"loc":["services","xserver","virtualScreen"],"readOnly":false,"type":"null or attribute set"},"services.xserver.windowManager.2bwm.enable":{"declarations":["nixos/modules/services/x11/window-managers/2bwm.nix"],"default":false,"description":"Whether to enable 2bwm.","example":true,"loc":["services","xserver","windowManager","2bwm","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.afterstep.enable":{"declarations":["nixos/modules/services/x11/window-managers/afterstep.nix"],"default":false,"description":"Whether to enable afterstep.","example":true,"loc":["services","xserver","windowManager","afterstep","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.berry.enable":{"declarations":["nixos/modules/services/x11/window-managers/berry.nix"],"default":false,"description":"Whether to enable berry.","example":true,"loc":["services","xserver","windowManager","berry","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.bspwm.configFile":{"declarations":["nixos/modules/services/x11/window-managers/bspwm.nix"],"default":null,"description":"Path to the bspwm configuration file.\nIf null, $HOME/.config/bspwm/bspwmrc will be used.\n","example":{"_type":"literalExpression","text":"\"${pkgs.bspwm}/share/doc/bspwm/examples/bspwmrc\""},"loc":["services","xserver","windowManager","bspwm","configFile"],"readOnly":false,"type":"null or path"},"services.xserver.windowManager.bspwm.enable":{"declarations":["nixos/modules/services/x11/window-managers/bspwm.nix"],"default":false,"description":"Whether to enable bspwm.","example":true,"loc":["services","xserver","windowManager","bspwm","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.bspwm.package":{"declarations":["nixos/modules/services/x11/window-managers/bspwm.nix"],"default":{"_type":"literalExpression","text":"pkgs.bspwm"},"description":"bspwm package to use.\n","example":{"_type":"literalExpression","text":"pkgs.bspwm-unstable"},"loc":["services","xserver","windowManager","bspwm","package"],"readOnly":false,"type":"package"},"services.xserver.windowManager.bspwm.sxhkd.configFile":{"declarations":["nixos/modules/services/x11/window-managers/bspwm.nix"],"default":null,"description":"Path to the sxhkd configuration file.\nIf null, $HOME/.config/sxhkd/sxhkdrc will be used.\n","example":{"_type":"literalExpression","text":"\"${pkgs.bspwm}/share/doc/bspwm/examples/sxhkdrc\""},"loc":["services","xserver","windowManager","bspwm","sxhkd","configFile"],"readOnly":false,"type":"null or path"},"services.xserver.windowManager.bspwm.sxhkd.package":{"declarations":["nixos/modules/services/x11/window-managers/bspwm.nix"],"default":{"_type":"literalExpression","text":"pkgs.sxhkd"},"description":"sxhkd package to use.\n","example":{"_type":"literalExpression","text":"pkgs.sxhkd-unstable"},"loc":["services","xserver","windowManager","bspwm","sxhkd","package"],"readOnly":false,"type":"package"},"services.xserver.windowManager.clfswm.enable":{"declarations":["nixos/modules/services/x11/window-managers/clfswm.nix"],"default":false,"description":"Whether to enable clfswm.","example":true,"loc":["services","xserver","windowManager","clfswm","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.clfswm.package":{"declarations":["nixos/modules/services/x11/window-managers/clfswm.nix"],"default":{"_type":"literalExpression","text":"pkgs.lispPackages.clfswm"},"description":"clfswm package to use.\n","loc":["services","xserver","windowManager","clfswm","package"],"readOnly":false,"type":"package"},"services.xserver.windowManager.cwm.enable":{"declarations":["nixos/modules/services/x11/window-managers/cwm.nix"],"default":false,"description":"Whether to enable cwm.","example":true,"loc":["services","xserver","windowManager","cwm","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.default":{"declarations":["nixos/modules/services/x11/window-managers/default.nix"],"default":null,"description":"<emphasis role=\"strong\">Deprecated</emphasis>, please use <xref linkend=\"opt-services.xserver.displayManager.defaultSession\"/> instead.\n\nDefault window manager loaded if none have been chosen.\n","example":"wmii","loc":["services","xserver","windowManager","default"],"readOnly":false,"type":"null or string"},"services.xserver.windowManager.dwm.enable":{"declarations":["nixos/modules/services/x11/window-managers/dwm.nix"],"default":false,"description":"Whether to enable dwm.","example":true,"loc":["services","xserver","windowManager","dwm","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.e16.enable":{"declarations":["nixos/modules/services/x11/window-managers/e16.nix"],"default":false,"description":"Whether to enable e16.","example":true,"loc":["services","xserver","windowManager","e16","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.evilwm.enable":{"declarations":["nixos/modules/services/x11/window-managers/evilwm.nix"],"default":false,"description":"Whether to enable evilwm.","example":true,"loc":["services","xserver","windowManager","evilwm","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.exwm.enable":{"declarations":["nixos/modules/services/x11/window-managers/exwm.nix"],"default":false,"description":"Whether to enable exwm.","example":true,"loc":["services","xserver","windowManager","exwm","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.exwm.enableDefaultConfig":{"declarations":["nixos/modules/services/x11/window-managers/exwm.nix"],"default":true,"description":"Enable an uncustomised exwm configuration.","loc":["services","xserver","windowManager","exwm","enableDefaultConfig"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.exwm.extraPackages":{"declarations":["nixos/modules/services/x11/window-managers/exwm.nix"],"default":{"_type":"literalExpression","text":"epkgs: []"},"description":"Extra packages available to Emacs. The value must be a\nfunction which receives the attrset defined in\n<varname>emacs.pkgs</varname> as the sole argument.\n","example":{"_type":"literalExpression","text":"epkgs: [\n  epkgs.emms\n  epkgs.magit\n  epkgs.proofgeneral\n]\n"},"loc":["services","xserver","windowManager","exwm","extraPackages"],"readOnly":false,"type":"function that evaluates to a(n) list of packages"},"services.xserver.windowManager.exwm.loadScript":{"declarations":["nixos/modules/services/x11/window-managers/exwm.nix"],"default":"(require 'exwm)","description":"Emacs lisp code to be run after loading the user's init\nfile. If enableDefaultConfig is true, this will be run\nbefore loading the default config.\n","example":"(require 'exwm)\n(exwm-enable)\n","loc":["services","xserver","windowManager","exwm","loadScript"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.xserver.windowManager.fluxbox.enable":{"declarations":["nixos/modules/services/x11/window-managers/fluxbox.nix"],"default":false,"description":"Whether to enable fluxbox.","example":true,"loc":["services","xserver","windowManager","fluxbox","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.fvwm.enable":{"declarations":["nixos/modules/services/x11/window-managers/fvwm.nix"],"default":false,"description":"Whether to enable Fvwm window manager.","example":true,"loc":["services","xserver","windowManager","fvwm","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.fvwm.gestures":{"declarations":["nixos/modules/services/x11/window-managers/fvwm.nix"],"default":false,"description":"Whether or not to enable libstroke for gesture support","loc":["services","xserver","windowManager","fvwm","gestures"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.herbstluftwm.configFile":{"declarations":["nixos/modules/services/x11/window-managers/herbstluftwm.nix"],"default":null,"description":"Path to the herbstluftwm configuration file.  If left at the\ndefault value, $XDG_CONFIG_HOME/herbstluftwm/autostart will\nbe used.\n","loc":["services","xserver","windowManager","herbstluftwm","configFile"],"readOnly":false,"type":"null or path"},"services.xserver.windowManager.herbstluftwm.enable":{"declarations":["nixos/modules/services/x11/window-managers/herbstluftwm.nix"],"default":false,"description":"Whether to enable herbstluftwm.","example":true,"loc":["services","xserver","windowManager","herbstluftwm","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.herbstluftwm.package":{"declarations":["nixos/modules/services/x11/window-managers/herbstluftwm.nix"],"default":{"_type":"literalExpression","text":"pkgs.herbstluftwm"},"description":"Herbstluftwm package to use.\n","loc":["services","xserver","windowManager","herbstluftwm","package"],"readOnly":false,"type":"package"},"services.xserver.windowManager.i3.configFile":{"declarations":["nixos/modules/services/x11/window-managers/i3.nix"],"default":null,"description":"Path to the i3 configuration file.\nIf left at the default value, $HOME/.i3/config will be used.\n","loc":["services","xserver","windowManager","i3","configFile"],"readOnly":false,"type":"null or path"},"services.xserver.windowManager.i3.enable":{"declarations":["nixos/modules/services/x11/window-managers/i3.nix"],"default":false,"description":"Whether to enable i3 window manager.","example":true,"loc":["services","xserver","windowManager","i3","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.i3.extraPackages":{"declarations":["nixos/modules/services/x11/window-managers/i3.nix"],"default":{"_type":"literalExpression","text":"with pkgs; [\n  dmenu\n  i3status\n  i3lock\n]\n"},"description":"Extra packages to be installed system wide.\n","loc":["services","xserver","windowManager","i3","extraPackages"],"readOnly":false,"type":"list of packages"},"services.xserver.windowManager.i3.extraSessionCommands":{"declarations":["nixos/modules/services/x11/window-managers/i3.nix"],"default":"","description":"Shell commands executed just before i3 is started.\n","loc":["services","xserver","windowManager","i3","extraSessionCommands"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.xserver.windowManager.i3.package":{"declarations":["nixos/modules/services/x11/window-managers/i3.nix"],"default":{"_type":"literalExpression","text":"pkgs.i3"},"description":"i3 package to use.\n","example":{"_type":"literalExpression","text":"pkgs.i3-gaps"},"loc":["services","xserver","windowManager","i3","package"],"readOnly":false,"type":"package"},"services.xserver.windowManager.jwm.enable":{"declarations":["nixos/modules/services/x11/window-managers/jwm.nix"],"default":false,"description":"Whether to enable jwm.","example":true,"loc":["services","xserver","windowManager","jwm","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.leftwm.enable":{"declarations":["nixos/modules/services/x11/window-managers/leftwm.nix"],"default":false,"description":"Whether to enable leftwm.","example":true,"loc":["services","xserver","windowManager","leftwm","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.lwm.enable":{"declarations":["nixos/modules/services/x11/window-managers/lwm.nix"],"default":false,"description":"Whether to enable lwm.","example":true,"loc":["services","xserver","windowManager","lwm","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.metacity.enable":{"declarations":["nixos/modules/services/x11/window-managers/metacity.nix"],"default":false,"description":"Whether to enable metacity.","example":true,"loc":["services","xserver","windowManager","metacity","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.mlvwm.configFile":{"declarations":["nixos/modules/services/x11/window-managers/mlvwm.nix"],"default":null,"description":"Path to the mlvwm configuration file.\nIf left at the default value, $HOME/.mlvwmrc will be used.\n","loc":["services","xserver","windowManager","mlvwm","configFile"],"readOnly":false,"type":"null or path"},"services.xserver.windowManager.mlvwm.enable":{"declarations":["nixos/modules/services/x11/window-managers/mlvwm.nix"],"default":false,"description":"Whether to enable Macintosh-like Virtual Window Manager.","example":true,"loc":["services","xserver","windowManager","mlvwm","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.mwm.enable":{"declarations":["nixos/modules/services/x11/window-managers/mwm.nix"],"default":false,"description":"Whether to enable mwm.","example":true,"loc":["services","xserver","windowManager","mwm","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.notion.enable":{"declarations":["nixos/modules/services/x11/window-managers/notion.nix"],"default":false,"description":"Whether to enable notion.","example":true,"loc":["services","xserver","windowManager","notion","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.openbox.enable":{"declarations":["nixos/modules/services/x11/window-managers/openbox.nix"],"default":false,"description":"Whether to enable openbox.","example":true,"loc":["services","xserver","windowManager","openbox","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.pekwm.enable":{"declarations":["nixos/modules/services/x11/window-managers/pekwm.nix"],"default":false,"description":"Whether to enable pekwm.","example":true,"loc":["services","xserver","windowManager","pekwm","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.qtile.enable":{"declarations":["nixos/modules/services/x11/window-managers/qtile.nix"],"default":false,"description":"Whether to enable qtile.","example":true,"loc":["services","xserver","windowManager","qtile","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.ratpoison.enable":{"declarations":["nixos/modules/services/x11/window-managers/ratpoison.nix"],"default":false,"description":"Whether to enable ratpoison.","example":true,"loc":["services","xserver","windowManager","ratpoison","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.sawfish.enable":{"declarations":["nixos/modules/services/x11/window-managers/sawfish.nix"],"default":false,"description":"Whether to enable sawfish.","example":true,"loc":["services","xserver","windowManager","sawfish","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.smallwm.enable":{"declarations":["nixos/modules/services/x11/window-managers/smallwm.nix"],"default":false,"description":"Whether to enable smallwm.","example":true,"loc":["services","xserver","windowManager","smallwm","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.spectrwm.enable":{"declarations":["nixos/modules/services/x11/window-managers/spectrwm.nix"],"default":false,"description":"Whether to enable spectrwm.","example":true,"loc":["services","xserver","windowManager","spectrwm","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.stumpwm.enable":{"declarations":["nixos/modules/services/x11/window-managers/stumpwm.nix"],"default":false,"description":"Whether to enable stumpwm.","example":true,"loc":["services","xserver","windowManager","stumpwm","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.tinywm.enable":{"declarations":["nixos/modules/services/x11/window-managers/tinywm.nix"],"default":false,"description":"Whether to enable tinywm.","example":true,"loc":["services","xserver","windowManager","tinywm","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.twm.enable":{"declarations":["nixos/modules/services/x11/window-managers/twm.nix"],"default":false,"description":"Whether to enable twm.","example":true,"loc":["services","xserver","windowManager","twm","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.windowmaker.enable":{"declarations":["nixos/modules/services/x11/window-managers/windowmaker.nix"],"default":false,"description":"Whether to enable windowmaker.","example":true,"loc":["services","xserver","windowManager","windowmaker","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.wmderland.enable":{"declarations":["nixos/modules/services/x11/window-managers/wmderland.nix"],"default":false,"description":"Whether to enable wmderland.","example":true,"loc":["services","xserver","windowManager","wmderland","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.wmderland.extraPackages":{"declarations":["nixos/modules/services/x11/window-managers/wmderland.nix"],"default":{"_type":"literalExpression","text":"with pkgs; [\n  rofi\n  dunst\n  light\n  hsetroot\n  feh\n  rxvt-unicode\n]\n"},"description":"Extra packages to be installed system wide.\n","loc":["services","xserver","windowManager","wmderland","extraPackages"],"readOnly":false,"type":"list of packages"},"services.xserver.windowManager.wmderland.extraSessionCommands":{"declarations":["nixos/modules/services/x11/window-managers/wmderland.nix"],"default":"","description":"Shell commands executed just before wmderland is started.\n","loc":["services","xserver","windowManager","wmderland","extraSessionCommands"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.xserver.windowManager.wmii.enable":{"declarations":["nixos/modules/services/x11/window-managers/wmii.nix"],"default":false,"description":"Whether to enable wmii.","example":true,"loc":["services","xserver","windowManager","wmii","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.xmonad.config":{"declarations":["nixos/modules/services/x11/window-managers/xmonad.nix"],"default":null,"description":"Configuration from which XMonad gets compiled. If no value is\nspecified, a vanilla xmonad binary is put in PATH, which will\nattempt to recompile and exec your xmonad config from $HOME/.xmonad.\nThis setup is then analogous to other (non-NixOS) linux distributions.\n\nIf you do set this option, you likely want to use \"launch\" as your\nentry point for xmonad (as in the example), to avoid xmonad's\nrecompilation logic on startup. Doing so will render the default\n\"mod+q\" restart key binding dysfunctional though, because that attempts\nto call your binary with the \"--restart\" command line option, unless\nyou implement that yourself. You way mant to bind \"mod+q\" to\n<literal>(restart \"xmonad\" True)</literal> instead, which will just restart\nxmonad from PATH. This allows e.g. switching to the new xmonad binary\nafter rebuilding your system with nixos-rebuild.\nFor the same reason, ghc is not added to the environment when this\noption is set, unless <option>enableConfiguredRecompile</option> is\nset to <literal>true</literal>.\n\nIf you actually want to run xmonad with a config specified here, but\nalso be able to recompile and restart it from a copy of that source in\n$HOME/.xmonad on the fly, set <option>enableConfiguredRecompile</option>\nto <literal>true</literal> and implement something like \"compileRestart\"\nfrom the example.\nThis should allow you to switch at will between the local xmonad and\nthe one NixOS puts in your PATH.\n","example":"import XMonad\nimport XMonad.Util.EZConfig (additionalKeys)\nimport Control.Monad (when)\nimport Text.Printf (printf)\nimport System.Posix.Process (executeFile)\nimport System.Info (arch,os)\nimport System.Environment (getArgs)\nimport System.FilePath ((</>))\n\ncompiledConfig = printf \"xmonad-%s-%s\" arch os\n\nmyConfig = defaultConfig\n  { modMask = mod4Mask -- Use Super instead of Alt\n  , terminal = \"urxvt\" }\n  `additionalKeys`\n  [ ( (mod4Mask,xK_r), compileRestart True)\n  , ( (mod4Mask,xK_q), restart \"xmonad\" True ) ]\n\n--------------------------------------------\n{- version 0.17.0 -}\n--------------------------------------------\n-- compileRestart resume =\n--   dirs <- io getDirectories\n--   whenX (recompile dirs True) $\n--     when resume writeStateToFile\n--       *> catchIO\n--         ( do\n--             args <- getArgs\n--             executeFile (cacheDir dirs </> compiledConfig) False args Nothing\n--         )\n--\n-- main = getDirectories >>= launch myConfig\n--------------------------------------------\n\ncompileRestart resume =\n  whenX (recompile True) $\n    when resume writeStateToFile\n      *> catchIO\n        ( do\n            dir <- getXMonadDataDir\n            args <- getArgs\n            executeFile (dir </> compiledConfig) False args Nothing\n        )\n\nmain = launch myConfig\n","loc":["services","xserver","windowManager","xmonad","config"],"readOnly":false,"type":"null or path or string"},"services.xserver.windowManager.xmonad.enable":{"declarations":["nixos/modules/services/x11/window-managers/xmonad.nix"],"default":false,"description":"Whether to enable xmonad.","example":true,"loc":["services","xserver","windowManager","xmonad","enable"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.xmonad.enableConfiguredRecompile":{"declarations":["nixos/modules/services/x11/window-managers/xmonad.nix"],"default":false,"description":"Enable recompilation even if <option>config</option> is set to a\nnon-null value. This adds the necessary Haskell dependencies (GHC with\npackages) to the xmonad binary's environment.\n","loc":["services","xserver","windowManager","xmonad","enableConfiguredRecompile"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.xmonad.enableContribAndExtras":{"declarations":["nixos/modules/services/x11/window-managers/xmonad.nix"],"default":false,"description":"Enable xmonad-{contrib,extras} in Xmonad.","loc":["services","xserver","windowManager","xmonad","enableContribAndExtras"],"readOnly":false,"type":"boolean"},"services.xserver.windowManager.xmonad.extraPackages":{"declarations":["nixos/modules/services/x11/window-managers/xmonad.nix"],"default":{"_type":"literalExpression","text":"self: []"},"description":"Extra packages available to ghc when rebuilding Xmonad. The\nvalue must be a function which receives the attrset defined\nin <varname>haskellPackages</varname> as the sole argument.\n","example":{"_type":"literalExpression","text":"haskellPackages: [\n  haskellPackages.xmonad-contrib\n  haskellPackages.monad-logger\n]\n"},"loc":["services","xserver","windowManager","xmonad","extraPackages"],"readOnly":false,"type":"function that evaluates to a(n) list of packages"},"services.xserver.windowManager.xmonad.ghcArgs":{"declarations":["nixos/modules/services/x11/window-managers/xmonad.nix"],"default":[],"description":"Command line arguments passed to the compiler (ghc)\ninvocation when xmonad.config is set.\n","loc":["services","xserver","windowManager","xmonad","ghcArgs"],"readOnly":false,"type":"list of strings"},"services.xserver.windowManager.xmonad.haskellPackages":{"declarations":["nixos/modules/services/x11/window-managers/xmonad.nix"],"default":{"_type":"literalExpression","text":"pkgs.haskellPackages"},"description":"haskellPackages used to build Xmonad and other packages.\nThis can be used to change the GHC version used to build\nXmonad and the packages listed in\n<varname>extraPackages</varname>.\n","example":{"_type":"literalExpression","text":"pkgs.haskell.packages.ghc784"},"loc":["services","xserver","windowManager","xmonad","haskellPackages"],"readOnly":false,"type":"attribute set"},"services.xserver.windowManager.xmonad.xmonadCliArgs":{"declarations":["nixos/modules/services/x11/window-managers/xmonad.nix"],"default":[],"description":"Command line arguments passed to the xmonad binary.\n","loc":["services","xserver","windowManager","xmonad","xmonadCliArgs"],"readOnly":false,"type":"list of strings"},"services.xserver.windowManager.yeahwm.enable":{"declarations":["nixos/modules/services/x11/window-managers/yeahwm.nix"],"default":false,"description":"Whether to enable yeahwm.","example":true,"loc":["services","xserver","windowManager","yeahwm","enable"],"readOnly":false,"type":"boolean"},"services.xserver.xkbDir":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":{"_type":"literalExpression","text":"\"${pkgs.xkeyboard_config}/etc/X11/xkb\""},"description":"Path used for -xkbdir xserver parameter.\n","loc":["services","xserver","xkbDir"],"readOnly":false,"type":"path"},"services.xserver.xkbModel":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"pc104","description":"Keyboard model.\n","example":"presario","loc":["services","xserver","xkbModel"],"readOnly":false,"type":"string"},"services.xserver.xkbOptions":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"terminate:ctrl_alt_bksp","description":"X keyboard options; layout switching goes here.\n","example":"grp:caps_toggle,grp_led:scroll","loc":["services","xserver","xkbOptions"],"readOnly":false,"type":"strings concatenated with \",\""},"services.xserver.xkbVariant":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"X keyboard variant.\n","example":"colemak","loc":["services","xserver","xkbVariant"],"readOnly":false,"type":"string"},"services.xserver.xrandrHeads":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":[],"description":"Multiple monitor configuration, just specify a list of XRandR\noutputs. The individual elements should be either simple strings or\nan attribute set of output options.\n\nIf the element is a string, it is denoting the physical output for a\nmonitor, if it's an attribute set, you must at least provide the\n<option>output</option> option.\n\nThe monitors will be mapped from left to right in the order of the\nlist.\n\nBy default, the first monitor will be set as the primary monitor if\nnone of the elements contain an option that has set\n<option>primary</option> to <literal>true</literal>.\n\n<note><para>Only one monitor is allowed to be primary.</para></note>\n\nBe careful using this option with multiple graphic adapters or with\ndrivers that have poor support for XRandR, unexpected things might\nhappen with those.\n","example":["HDMI-0",{"output":"DVI-0","primary":true},{"monitorConfig":"Option \"Rotate\" \"left\"","output":"DVI-1"}],"loc":["services","xserver","xrandrHeads"],"readOnly":false,"type":"list of submodule or string convertible to its"},"services.xserver.xrandrHeads.*.monitorConfig":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Extra lines to append to the <literal>Monitor</literal> section\nverbatim. Available options are documented in the MONITOR section in\n<citerefentry><refentrytitle>xorg.conf</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry>.\n","example":"DisplaySize 408 306\nOption \"DPMS\" \"false\"\n","loc":["services","xserver","xrandrHeads","*","monitorConfig"],"readOnly":false,"type":"strings concatenated with \"\\n\""},"services.xserver.xrandrHeads.*.output":{"declarations":["nixos/modules/services/x11/xserver.nix"],"description":"The output name of the monitor, as shown by <citerefentry>\n  <refentrytitle>xrandr</refentrytitle>\n  <manvolnum>1</manvolnum>\n</citerefentry> invoked without arguments.\n","example":"DVI-0","loc":["services","xserver","xrandrHeads","*","output"],"readOnly":false,"type":"string"},"services.xserver.xrandrHeads.*.primary":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":false,"description":"Whether this head is treated as the primary monitor,\n","loc":["services","xserver","xrandrHeads","*","primary"],"readOnly":false,"type":"boolean"},"specialisation":{"declarations":["nixos/modules/system/activation/top-level.nix"],"default":{},"description":"Additional configurations to build. If\n<literal>inheritParentConfig</literal> is true, the system\nwill be based on the overall system configuration.\n\nTo switch to a specialised configuration\n(e.g. <literal>fewJobsManyCores</literal>) at runtime, run:\n\n<screen>\n<prompt># </prompt>sudo /run/current-system/specialisation/fewJobsManyCores/bin/switch-to-configuration test\n</screen>\n","example":{"_type":"literalExpression","text":"{ fewJobsManyCores.configuration = { nix.settings = { core = 0; max-jobs = 1; }; }"},"loc":["specialisation"],"readOnly":false,"type":"attribute set of submodules"},"specialisation.<name>.configuration":{"declarations":["nixos/modules/system/activation/top-level.nix"],"default":{},"description":"Arbitrary NixOS configuration.\n\nAnything you can add to a normal NixOS configuration, you can add\nhere, including imports and config values, although nested\nspecialisations will be ignored.\n","loc":["specialisation","<name>","configuration"],"readOnly":false,"type":"submodule"},"specialisation.<name>.inheritParentConfig":{"declarations":["nixos/modules/system/activation/top-level.nix"],"default":true,"description":"Include the entire system's configuration. Set to false to make a completely differently configured system.","loc":["specialisation","<name>","inheritParentConfig"],"readOnly":false,"type":"boolean"},"system.build":{"declarations":["nixos/modules/system/build.nix","nixos/modules/system/activation/top-level.nix"],"default":{},"description":"Attribute set of derivations used to set up the system.\n","loc":["system","build"],"readOnly":false,"type":"lazy attribute set of unspecifieds"},"system.build.toplevel":{"declarations":["nixos/modules/system/activation/top-level.nix"],"description":"This option contains the store path that typically represents a NixOS system.\n\nYou can read this path in a custom deployment tool for example.\n","loc":["system","build","toplevel"],"readOnly":true,"type":"package"},"system.configurationRevision":{"declarations":["nixos/modules/misc/version.nix"],"default":null,"description":"The Git revision of the top-level flake from which this configuration was built.","loc":["system","configurationRevision"],"readOnly":false,"type":"null or string"},"system.copySystemConfiguration":{"declarations":["nixos/modules/system/activation/top-level.nix"],"default":false,"description":"If enabled, copies the NixOS configuration file\n(usually <filename>/etc/nixos/configuration.nix</filename>)\nand links it from the resulting system\n(getting to <filename>/run/current-system/configuration.nix</filename>).\nNote that only this single file is copied, even if it imports others.\n","loc":["system","copySystemConfiguration"],"readOnly":false,"type":"boolean"},"system.extraDependencies":{"declarations":["nixos/modules/system/activation/top-level.nix"],"default":[],"description":"A list of packages that should be included in the system\nclosure but not otherwise made available to users. This is\nprimarily used by the installation tests.\n","loc":["system","extraDependencies"],"readOnly":false,"type":"list of packages"},"system.name":{"declarations":["nixos/modules/system/activation/top-level.nix"],"default":{"_type":"literalExpression","text":"if config.networking.hostName == \"\"\nthen \"unnamed\"\nelse config.networking.hostName;\n"},"description":"The name of the system used in the <option>system.build.toplevel</option> derivation.\n</para><para>\nThat derivation has the following name:\n<literal>\"nixos-system-${config.system.name}-${config.system.nixos.label}\"</literal>\n","loc":["system","name"],"readOnly":false,"type":"string"},"system.nixos.codeName":{"declarations":["nixos/modules/misc/version.nix"],"default":"Quokka","description":"The NixOS release code name (e.g. <literal>Emu</literal>).","loc":["system","nixos","codeName"],"readOnly":true,"type":"string"},"system.nixos.release":{"declarations":["nixos/modules/misc/version.nix"],"default":"22.05","description":"The NixOS release (e.g. <literal>16.03</literal>).","loc":["system","nixos","release"],"readOnly":true,"type":"string"},"system.replaceRuntimeDependencies":{"declarations":["nixos/modules/system/activation/top-level.nix"],"default":[],"description":"List of packages to override without doing a full rebuild.\nThe original derivation and replacement derivation must have the same\nname length, and ideally should have close-to-identical directory layout.\n","example":{"_type":"literalExpression","text":"[ ({ original = pkgs.openssl; replacement = pkgs.callPackage /path/to/openssl { }; }) ]"},"loc":["system","replaceRuntimeDependencies"],"readOnly":false,"type":"list of submodules"},"system.replaceRuntimeDependencies.*.original":{"declarations":["nixos/modules/system/activation/top-level.nix"],"description":"The original package to override.","loc":["system","replaceRuntimeDependencies","*","original"],"readOnly":false,"type":"package"},"system.replaceRuntimeDependencies.*.replacement":{"declarations":["nixos/modules/system/activation/top-level.nix"],"description":"The replacement package.","loc":["system","replaceRuntimeDependencies","*","replacement"],"readOnly":false,"type":"package"},"system.stateVersion":{"declarations":["nixos/modules/misc/version.nix"],"default":{"_type":"literalExpression","text":"config.system.nixos.release"},"description":"Every once in a while, a new NixOS release may change\nconfiguration defaults in a way incompatible with stateful\ndata. For instance, if the default version of PostgreSQL\nchanges, the new version will probably be unable to read your\nexisting databases. To prevent such breakage, you should set the\nvalue of this option to the NixOS release with which you want\nto be compatible. The effect is that NixOS will use\ndefaults corresponding to the specified release (such as using\nan older version of PostgreSQL).\nIt‘s perfectly fine and recommended to leave this value at the\nrelease version of the first install of this system.\nChanging this option will not upgrade your system. In fact it\nis meant to stay constant exactly when you upgrade your system.\nYou should only bump this option, if you are sure that you can\nor have migrated all state on your system which is affected\nby this option.\n","loc":["system","stateVersion"],"readOnly":false,"type":"string"},"virtualisation.additionalPaths":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":[],"description":"A list of paths whose closure should be made available to\nthe VM.\n\nWhen 9p is used, the closure is registered in the Nix\ndatabase in the VM. All other paths in the host Nix store\nappear in the guest Nix store as well, but are considered\ngarbage (because they are not registered in the Nix\ndatabase of the guest).\n\nWhen <option>virtualisation.useNixStoreImage</option> is\nset, the closure is copied to the Nix store image.\n","loc":["virtualisation","additionalPaths"],"readOnly":false,"type":"list of paths"},"virtualisation.bios":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":null,"description":"An alternate BIOS (such as <package>qboot</package>) with which to start the VM.\nShould contain a file named <literal>bios.bin</literal>.\nIf <literal>null</literal>, QEMU's builtin SeaBIOS will be used.\n","loc":["virtualisation","bios"],"readOnly":false,"type":"null or package"},"virtualisation.bootDevice":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"description":"The disk to be used for the root filesystem.\n","example":"/dev/vda","loc":["virtualisation","bootDevice"],"readOnly":false,"type":"path"},"virtualisation.cores":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":1,"description":"Specify the number of cores the guest is permitted to use.\nThe number can be higher than the available cores on the\nhost system.\n","loc":["virtualisation","cores"],"readOnly":false,"type":"positive integer, meaning >0"},"virtualisation.diskImage":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":{"_type":"literalExpression","text":"\"./${config.system.name}.qcow2\""},"description":"Path to the disk image containing the root filesystem.\nThe image will be created on startup if it does not\nexist.\n","loc":["virtualisation","diskImage"],"readOnly":false,"type":"string"},"virtualisation.diskSize":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":1024,"description":"The disk size in megabytes of the virtual machine.\n","loc":["virtualisation","diskSize"],"readOnly":false,"type":"null or positive integer, meaning >0"},"virtualisation.efiVars":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":{"_type":"literalExpression","text":"\"./${config.system.name}-efi-vars.fd\""},"description":"Path to nvram image containing UEFI variables.  The will be created\non startup if it does not exist.\n","loc":["virtualisation","efiVars"],"readOnly":false,"type":"string"},"virtualisation.emptyDiskImages":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":[],"description":"Additional disk images to provide to the VM. The value is\na list of size in megabytes of each disk. These disks are\nwriteable by the VM.\n","loc":["virtualisation","emptyDiskImages"],"readOnly":false,"type":"list of positive integer, meaning >0s"},"virtualisation.fileSystems":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":{},"description":"The file systems to be mounted.  It must include an entry for\nthe root directory (<literal>mountPoint = \"/\"</literal>).  Each\nentry in the list is an attribute set with the following fields:\n<literal>mountPoint</literal>, <literal>device</literal>,\n<literal>fsType</literal> (a file system type recognised by\n<command>mount</command>; defaults to\n<literal>\"auto\"</literal>), and <literal>options</literal>\n(the mount options passed to <command>mount</command> using the\n<option>-o</option> flag; defaults to <literal>[ \"defaults\" ]</literal>).\n\nInstead of specifying <literal>device</literal>, you can also\nspecify a volume label (<literal>label</literal>) for file\nsystems that support it, such as ext2/ext3 (see <command>mke2fs\n-L</command>).\n","example":{"_type":"literalExpression","text":"{\n  \"/\".device = \"/dev/hda1\";\n  \"/data\" = {\n    device = \"/dev/hda2\";\n    fsType = \"ext3\";\n    options = [ \"data=journal\" ];\n  };\n  \"/bigdisk\".label = \"bigdisk\";\n}\n"},"loc":["virtualisation","fileSystems"],"readOnly":false,"type":"attribute set of submodules"},"virtualisation.fileSystems.<name>.autoFormat":{"declarations":["nixos/modules/tasks/filesystems.nix"],"default":false,"description":"If the device does not currently contain a filesystem (as\ndetermined by <command>blkid</command>, then automatically\nformat it with the filesystem type specified in\n<option>fsType</option>.  Use with caution.\n","loc":["virtualisation","fileSystems","<name>","autoFormat"],"readOnly":false,"type":"boolean"},"virtualisation.fileSystems.<name>.autoResize":{"declarations":["nixos/modules/tasks/filesystems.nix"],"default":false,"description":"If set, the filesystem is grown to its maximum size before\nbeing mounted. (This is typically the size of the containing\npartition.) This is currently only supported for ext2/3/4\nfilesystems that are mounted during early boot.\n","loc":["virtualisation","fileSystems","<name>","autoResize"],"readOnly":false,"type":"boolean"},"virtualisation.fileSystems.<name>.depends":{"declarations":["nixos/modules/tasks/filesystems.nix"],"default":[],"description":"List of paths that should be mounted before this one. This filesystem's\n<option>device</option> and <option>mountPoint</option> are always\nchecked and do not need to be included explicitly. If a path is added\nto this list, any other filesystem whose mount point is a parent of\nthe path will be mounted before this filesystem. The paths do not need\nto actually be the <option>mountPoint</option> of some other filesystem.\n","example":["/persist"],"loc":["virtualisation","fileSystems","<name>","depends"],"readOnly":false,"type":"list of string (with check: non-empty without trailing slash)s"},"virtualisation.fileSystems.<name>.device":{"declarations":["nixos/modules/tasks/filesystems.nix"],"default":null,"description":"Location of the device.","example":"/dev/sda","loc":["virtualisation","fileSystems","<name>","device"],"readOnly":false,"type":"null or string (with check: non-empty)"},"virtualisation.fileSystems.<name>.encrypted.blkDev":{"declarations":["nixos/modules/tasks/encrypted-devices.nix"],"default":null,"description":"Location of the backing encrypted device.","example":"/dev/sda1","loc":["virtualisation","fileSystems","<name>","encrypted","blkDev"],"readOnly":false,"type":"null or string"},"virtualisation.fileSystems.<name>.encrypted.enable":{"declarations":["nixos/modules/tasks/encrypted-devices.nix"],"default":false,"description":"The block device is backed by an encrypted one, adds this device as a initrd luks entry.","loc":["virtualisation","fileSystems","<name>","encrypted","enable"],"readOnly":false,"type":"boolean"},"virtualisation.fileSystems.<name>.encrypted.keyFile":{"declarations":["nixos/modules/tasks/encrypted-devices.nix"],"default":null,"description":"Path to a keyfile used to unlock the backing encrypted\ndevice. At the time this keyfile is accessed, the\n<literal>neededForBoot</literal> filesystems (see\n<literal>fileSystems.&lt;name?&gt;.neededForBoot</literal>)\nwill have been mounted under <literal>/mnt-root</literal>,\nso the keyfile path should usually start with \"/mnt-root/\".\n","example":"/mnt-root/root/.swapkey","loc":["virtualisation","fileSystems","<name>","encrypted","keyFile"],"readOnly":false,"type":"null or string"},"virtualisation.fileSystems.<name>.encrypted.label":{"declarations":["nixos/modules/tasks/encrypted-devices.nix"],"default":null,"description":"Label of the unlocked encrypted device. Set <literal>fileSystems.&lt;name?&gt;.device</literal> to <literal>/dev/mapper/&lt;label&gt;</literal> to mount the unlocked device.","example":"rootfs","loc":["virtualisation","fileSystems","<name>","encrypted","label"],"readOnly":false,"type":"null or string"},"virtualisation.fileSystems.<name>.formatOptions":{"declarations":["nixos/modules/tasks/filesystems.nix"],"default":"","description":"If <option>autoFormat</option> option is set specifies\nextra options passed to mkfs.\n","loc":["virtualisation","fileSystems","<name>","formatOptions"],"readOnly":false,"type":"string"},"virtualisation.fileSystems.<name>.fsType":{"declarations":["nixos/modules/tasks/filesystems.nix"],"default":"auto","description":"Type of the file system.","example":"ext3","loc":["virtualisation","fileSystems","<name>","fsType"],"readOnly":false,"type":"string (with check: non-empty)"},"virtualisation.fileSystems.<name>.label":{"declarations":["nixos/modules/tasks/filesystems.nix"],"default":null,"description":"Label of the device (if any).","example":"root-partition","loc":["virtualisation","fileSystems","<name>","label"],"readOnly":false,"type":"null or string (with check: non-empty)"},"virtualisation.fileSystems.<name>.mountPoint":{"declarations":["nixos/modules/tasks/filesystems.nix"],"description":"Location of the mounted the file system.","example":"/mnt/usb","loc":["virtualisation","fileSystems","<name>","mountPoint"],"readOnly":false,"type":"string (with check: non-empty without trailing slash)"},"virtualisation.fileSystems.<name>.neededForBoot":{"declarations":["nixos/modules/system/boot/stage-1.nix"],"default":false,"description":"If set, this file system will be mounted in the initial ramdisk.\nNote that the file system will always be mounted in the initial\nramdisk if its mount point is one of the following:\n<filename>/</filename>, <filename>/nix</filename>, <filename>/nix/store</filename>, <filename>/var</filename>, <filename>/var/log</filename>, <filename>/var/lib</filename>, <filename>/var/lib/nixos</filename>, <filename>/etc</filename>, <filename>/usr</filename>.\n","loc":["virtualisation","fileSystems","<name>","neededForBoot"],"readOnly":false,"type":"boolean"},"virtualisation.fileSystems.<name>.noCheck":{"declarations":["nixos/modules/tasks/filesystems.nix"],"default":false,"description":"Disable running fsck on this filesystem.","loc":["virtualisation","fileSystems","<name>","noCheck"],"readOnly":false,"type":"boolean"},"virtualisation.fileSystems.<name>.options":{"declarations":["nixos/modules/tasks/filesystems.nix"],"default":["defaults"],"description":"Options used to mount the file system.","example":["data=journal"],"loc":["virtualisation","fileSystems","<name>","options"],"readOnly":false,"type":"list of string (with check: non-empty)s"},"virtualisation.forwardPorts":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":[],"description":"When using the SLiRP user networking (default), this option allows to\nforward ports to/from the host/guest.\n\n<warning><para>\n  If the NixOS firewall on the virtual machine is enabled, you also\n  have to open the guest ports to enable the traffic between host and\n  guest.\n</para></warning>\n\n<note><para>Currently QEMU supports only IPv4 forwarding.</para></note>\n","example":{"_type":"literalExpression","text":"[ # forward local port 2222 -> 22, to ssh into the VM\n  { from = \"host\"; host.port = 2222; guest.port = 22; }\n\n  # forward local port 80 -> 10.0.2.10:80 in the VLAN\n  { from = \"guest\";\n    guest.address = \"10.0.2.10\"; guest.port = 80;\n    host.address = \"127.0.0.1\"; host.port = 80;\n  }\n]\n"},"loc":["virtualisation","forwardPorts"],"readOnly":false,"type":"list of submodules"},"virtualisation.forwardPorts.*.from":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":"host","description":"Controls the direction in which the ports are mapped:\n\n- <literal>\"host\"</literal> means traffic from the host ports\nis forwarded to the given guest port.\n\n- <literal>\"guest\"</literal> means traffic from the guest ports\nis forwarded to the given host port.\n","loc":["virtualisation","forwardPorts","*","from"],"readOnly":false,"type":"one of \"host\", \"guest\""},"virtualisation.forwardPorts.*.guest.address":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":"","description":"The IPv4 address on the guest VLAN.","loc":["virtualisation","forwardPorts","*","guest","address"],"readOnly":false,"type":"string"},"virtualisation.forwardPorts.*.guest.port":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"description":"The guest port to be mapped.","loc":["virtualisation","forwardPorts","*","guest","port"],"readOnly":false,"type":"16 bit unsigned integer; between 0 and 65535 (both inclusive)"},"virtualisation.forwardPorts.*.host.address":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":"","description":"The IPv4 address of the host.","loc":["virtualisation","forwardPorts","*","host","address"],"readOnly":false,"type":"string"},"virtualisation.forwardPorts.*.host.port":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"description":"The host port to be mapped.","loc":["virtualisation","forwardPorts","*","host","port"],"readOnly":false,"type":"16 bit unsigned integer; between 0 and 65535 (both inclusive)"},"virtualisation.forwardPorts.*.proto":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":"tcp","description":"The protocol to forward.","loc":["virtualisation","forwardPorts","*","proto"],"readOnly":false,"type":"one of \"tcp\", \"udp\""},"virtualisation.graphics":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":true,"description":"Whether to run QEMU with a graphics window, or in nographic mode.\nSerial console will be enabled on both settings, but this will\nchange the preferred console.\n","loc":["virtualisation","graphics"],"readOnly":false,"type":"boolean"},"virtualisation.memorySize":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":1024,"description":"The memory size in megabytes of the virtual machine.\n","loc":["virtualisation","memorySize"],"readOnly":false,"type":"positive integer, meaning >0"},"virtualisation.msize":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":16384,"description":"The msize (maximum packet size) option passed to 9p file systems, in\nbytes. Increasing this should increase performance significantly,\nat the cost of higher RAM usage.\n","loc":["virtualisation","msize"],"readOnly":false,"type":"positive integer, meaning >0"},"virtualisation.qemu.consoles":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":["ttyS0,115200n8","tty0"],"description":"The output console devices to pass to the kernel command line via the\n<literal>console</literal> parameter, the primary console is the last\nitem of this list.\n\nBy default it enables both serial console and\n<literal>tty0</literal>. The preferred console (last one) is based on\nthe value of <option>virtualisation.graphics</option>.\n","example":["console=tty1"],"loc":["virtualisation","qemu","consoles"],"readOnly":false,"type":"list of strings"},"virtualisation.qemu.diskInterface":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":"virtio","description":"The interface used for the virtual hard disks.","example":"scsi","loc":["virtualisation","qemu","diskInterface"],"readOnly":false,"type":"one of \"virtio\", \"scsi\", \"ide\""},"virtualisation.qemu.drives":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"description":"Drives passed to qemu.","loc":["virtualisation","qemu","drives"],"readOnly":false,"type":"list of submodules"},"virtualisation.qemu.drives.*.deviceExtraOpts":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":{},"description":"Extra options passed to device flag.","loc":["virtualisation","qemu","drives","*","deviceExtraOpts"],"readOnly":false,"type":"attribute set of strings"},"virtualisation.qemu.drives.*.driveExtraOpts":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":{},"description":"Extra options passed to drive flag.","loc":["virtualisation","qemu","drives","*","driveExtraOpts"],"readOnly":false,"type":"attribute set of strings"},"virtualisation.qemu.drives.*.file":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"description":"The file image used for this drive.","loc":["virtualisation","qemu","drives","*","file"],"readOnly":false,"type":"string"},"virtualisation.qemu.drives.*.name":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":null,"description":"A name for the drive. Must be unique in the drives list. Not passed to qemu.","loc":["virtualisation","qemu","drives","*","name"],"readOnly":false,"type":"null or string"},"virtualisation.qemu.guestAgent.enable":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":true,"description":"Enable the Qemu guest agent.\n","loc":["virtualisation","qemu","guestAgent","enable"],"readOnly":false,"type":"boolean"},"virtualisation.qemu.networkingOptions":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":[],"description":"Networking-related command-line options that should be passed to qemu.\nThe default is to use userspace networking (SLiRP).\n\nIf you override this option, be advised to keep\n${QEMU_NET_OPTS:+,$QEMU_NET_OPTS} (as seen in the example)\nto keep the default runtime behaviour.\n","example":["-net nic,netdev=user.0,model=virtio","-netdev user,id=user.0,${QEMU_NET_OPTS:+,$QEMU_NET_OPTS}"],"loc":["virtualisation","qemu","networkingOptions"],"readOnly":false,"type":"list of strings"},"virtualisation.qemu.options":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":[],"description":"Options passed to QEMU.","example":["-vga std"],"loc":["virtualisation","qemu","options"],"readOnly":false,"type":"list of strings"},"virtualisation.qemu.package":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":{"_type":"derivation","name":"qemu-host-cpu-only-6.2.0"},"description":"QEMU package to use.","example":"pkgs.qemu_test","loc":["virtualisation","qemu","package"],"readOnly":false,"type":"package"},"virtualisation.qemu.virtioKeyboard":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":true,"description":"Enable the virtio-keyboard device.\n","loc":["virtualisation","qemu","virtioKeyboard"],"readOnly":false,"type":"boolean"},"virtualisation.resolution":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":{"x":1024,"y":768},"description":"The resolution of the virtual machine display.\n","loc":["virtualisation","resolution"],"readOnly":false,"type":"attribute set"},"virtualisation.sharedDirectories":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":{},"description":"An attributes set of directories that will be shared with the\nvirtual machine using VirtFS (9P filesystem over VirtIO).\nThe attribute name will be used as the 9P mount tag.\n","example":{"my-share":{"source":"/path/to/be/shared","target":"/mnt/shared"}},"loc":["virtualisation","sharedDirectories"],"readOnly":false,"type":"attribute set of submodules"},"virtualisation.sharedDirectories.<name>.source":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"description":"The path of the directory to share, can be a shell variable","loc":["virtualisation","sharedDirectories","<name>","source"],"readOnly":false,"type":"string"},"virtualisation.sharedDirectories.<name>.target":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"description":"The mount point of the directory inside the virtual machine","loc":["virtualisation","sharedDirectories","<name>","target"],"readOnly":false,"type":"path"},"virtualisation.useBootLoader":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":false,"description":"If enabled, the virtual machine will be booted using the\nregular boot loader (i.e., GRUB 1 or 2).  This allows\ntesting of the boot loader.  If\ndisabled (the default), the VM directly boots the NixOS\nkernel and initial ramdisk, bypassing the boot loader\naltogether.\n","loc":["virtualisation","useBootLoader"],"readOnly":false,"type":"boolean"},"virtualisation.useEFIBoot":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":false,"description":"If enabled, the virtual machine will provide a EFI boot\nmanager.\nuseEFIBoot is ignored if useBootLoader == false.\n","loc":["virtualisation","useEFIBoot"],"readOnly":false,"type":"boolean"},"virtualisation.useNixStoreImage":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":false,"description":"Build and use a disk image for the Nix store, instead of\naccessing the host's one through 9p.\n\nFor applications which do a lot of reads from the store,\nthis can drastically improve performance, but at the cost of\ndisk space and image build time.\n","loc":["virtualisation","useNixStoreImage"],"readOnly":false,"type":"boolean"},"virtualisation.vlans":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":[1],"description":"Virtual networks to which the VM is connected.  Each\nnumber <replaceable>N</replaceable> in this list causes\nthe VM to have a virtual Ethernet interface attached to a\nseparate virtual network on which it will be assigned IP\naddress\n<literal>192.168.<replaceable>N</replaceable>.<replaceable>M</replaceable></literal>,\nwhere <replaceable>M</replaceable> is the index of this VM\nin the list of VMs.\n","example":[1,2],"loc":["virtualisation","vlans"],"readOnly":false,"type":"list of unsigned integer, meaning >=0s"},"virtualisation.vmVariant":{"declarations":["nixos/modules/virtualisation/build-vm.nix"],"default":{},"description":"Machine configuration to be added for the vm script produced by <literal>nixos-rebuild build-vm</literal>.\n","loc":["virtualisation","vmVariant"],"readOnly":false,"type":"submodule"},"virtualisation.vmVariantWithBootLoader":{"declarations":["nixos/modules/virtualisation/build-vm.nix"],"default":{},"description":"Machine configuration to be added for the vm script produced by <literal>nixos-rebuild build-vm-with-bootloader</literal>.\n","loc":["virtualisation","vmVariantWithBootLoader"],"readOnly":false,"type":"submodule"},"virtualisation.writableStore":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":true,"description":"If enabled, the Nix store in the VM is made writable by\nlayering an overlay filesystem on top of the host's Nix\nstore.\n","loc":["virtualisation","writableStore"],"readOnly":false,"type":"boolean"},"virtualisation.writableStoreUseTmpfs":{"declarations":["nixos/modules/virtualisation/qemu-vm.nix"],"default":true,"description":"Use a tmpfs for the writable store instead of writing to the VM's\nown filesystem.\n","loc":["virtualisation","writableStoreUseTmpfs"],"readOnly":false,"type":"boolean"}}